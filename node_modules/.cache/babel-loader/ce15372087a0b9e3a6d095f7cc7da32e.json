{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\src\\\\app\\\\views\\\\page-layouts\\\\UploadCropImagePopup.jsx\";\nimport { Button, Dialog, DialogActions, Icon } from \"@material-ui/core\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport Draggable from \"react-draggable\";\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport ConstantList from \"../../appConfig\";\nimport { Block, Save } from \"@material-ui/icons\";\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }\n  })));\n}\n\nvar UploadCropImagePopup = /*#__PURE__*/function (_React$Component) {\n  _inherits(UploadCropImagePopup, _React$Component);\n\n  var _super = _createSuper(UploadCropImagePopup);\n\n  function UploadCropImagePopup() {\n    var _this;\n\n    _classCallCheck(this, UploadCropImagePopup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      dragClass: \"\",\n      files: [],\n      statusList: [],\n      isEmpty: true,\n      src: null,\n      crop: {\n        unit: \"%\",\n        width: 50,\n        height: 50\n      },\n      blobValue: null,\n      contentType: null\n    };\n\n    _this.onImageLoaded = function (image) {\n      _this.imageRef = image;\n    };\n\n    _this.onCropComplete = function (crop) {\n      _this.makeClientCrop(crop);\n    };\n\n    _this.onCropChange = function (crop) {\n      _this.setState({\n        crop: crop\n      });\n    };\n\n    _this.handleFileUploadOnSelect = function (e) {\n      if (e.target.files && e.target.files.length > 0) {\n        var reader = new FileReader();\n        reader.addEventListener(\"load\", function () {\n          return _this.setState({\n            src: reader.result\n          });\n        });\n        reader.readAsDataURL(e.target.files[0]);\n      }\n    };\n\n    _this.handleFileSelect = function (e) {\n      if (e.target.files && e.target.files.length > 0) {\n        var reader = new FileReader();\n        reader.addEventListener(\"load\", function () {\n          return _this.setState({\n            src: reader.result,\n            isEmpty: false\n          });\n        });\n        reader.readAsDataURL(e.target.files[0]);\n      } // let { t } = this.props;\n      // let files = event.target.files;\n      // let list = [];\n      // console.log(files);\n      // let acceptType = this.props.acceptType.split(\";\");\n      // for (const iterator of files) {\n      //   if (iterator.type.split(\"/\").length <= 0 || acceptType.indexOf(iterator.type.split(\"/\")[1]) < 0) {\n      //     console.log(acceptType);\n      //     console.log(iterator.type.split(\"/\"));\n      //     alert(t(\"general.type_not_accepted\"));\n      //     break;\n      //   }\n      //   list.push({\n      //     file: iterator,\n      //     uploading: false,\n      //     error: false,\n      //     progress: 0\n      //   });\n      // }\n      // this.setState({\n      //   files: [...list]\n      // });\n\n    };\n\n    _this.handleDragOver = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        dragClass: \"drag-shadow\"\n      });\n    };\n\n    _this.handleDrop = function (event) {\n      event.preventDefault();\n      event.persist();\n      var files = event.dataTransfer.files; // this.fileUpload(files[0]).then(res => {\n      //   let url =ConstantList.API_ENPOINT+\"/public/file/downloadbyid/\"+res.data.id;\n      //   alert(url);\n      //   this.setState({imageUrl:url})\n      //   console.log(url);\n      //   //alert(\"File uploaded successfully.\")\n      // });\n\n      if (files && files.length > 0) {\n        var reader = new FileReader();\n        reader.addEventListener(\"load\", function () {\n          return _this.setState({\n            src: reader.result\n          });\n        });\n        reader.readAsDataURL(files[0]);\n      }\n\n      return false;\n    };\n\n    _this.handleDragStart = function () {\n      _this.setState({\n        dragClass: \"drag-shadow\"\n      });\n    };\n\n    _this.handleSingleRemove = function (index) {\n      var files = _toConsumableArray(_this.state.files);\n\n      files.splice(index, 1);\n\n      _this.setState({\n        files: _toConsumableArray(files)\n      });\n    };\n\n    _this.handleAllRemove = function () {\n      _this.setState({\n        files: []\n      });\n    };\n\n    _this.uploadSingleFile = function (index) {\n      var t = _this.props.t;\n\n      var allFiles = _toConsumableArray(_this.state.files);\n\n      var file = _this.state.files[index];\n\n      _this.fileUpload(file.file).then(function () {\n        alert(t(\"general.success\"));\n        window.location.reload();\n      });\n\n      allFiles[index] = _objectSpread(_objectSpread({}, file), {}, {\n        uploading: true,\n        error: false\n      });\n\n      _this.setState({\n        files: _toConsumableArray(allFiles)\n      });\n    };\n\n    _this.uploadAllFile = function () {\n      var allFiles = [];\n\n      _this.state.files.map(function (item) {\n        allFiles.push(_objectSpread(_objectSpread({}, item), {}, {\n          uploading: true,\n          error: false\n        }));\n        return item;\n      });\n\n      _this.setState({\n        files: [].concat(allFiles),\n        queProgress: 35\n      });\n    };\n\n    _this.handleSingleCancel = function (index) {\n      var allFiles = _toConsumableArray(_this.state.files);\n\n      var file = _this.state.files[index];\n      allFiles[index] = _objectSpread(_objectSpread({}, file), {}, {\n        uploading: false,\n        error: true\n      });\n\n      _this.setState({\n        files: _toConsumableArray(allFiles)\n      });\n    };\n\n    _this.fileUploadBlob = function () {\n      var url = ConstantList.API_ENPOINT + \"/api/users/updateavatar\";\n      var formData = new FormData();\n      formData.set(\"uploadfile\", _this.state.blobValue); //formData.append('uploadfile',file);//Lưu ý tên 'uploadfile' phải trùng với tham số bên Server side\n\n      var config = {\n        headers: {\n          \"Content-Type\": \"image/jpg\"\n        }\n      };\n      return axios.post(url, formData, config).then(function (response) {\n        var user = response.data;\n\n        _this.setState({\n          user: user\n        }); //console.log(user);\n\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UploadCropImagePopup, [{\n    key: \"makeClientCrop\",\n    value: function () {\n      var _makeClientCrop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(crop) {\n        var croppedImageUrl;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.imageRef && crop.width && crop.height)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 3;\n                return this.getCroppedImg(this.imageRef, crop, \"newFile.jpeg\");\n\n              case 3:\n                croppedImageUrl = _context.sent;\n                this.setState({\n                  croppedImageUrl: croppedImageUrl\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function makeClientCrop(_x) {\n        return _makeClientCrop.apply(this, arguments);\n      }\n\n      return makeClientCrop;\n    }()\n  }, {\n    key: \"getCroppedImg\",\n    value: function getCroppedImg(image, crop, fileName) {\n      var _this2 = this;\n\n      var canvas = document.createElement(\"canvas\");\n      var scaleX = image.naturalWidth / image.width;\n      var scaleY = image.naturalHeight / image.height;\n      canvas.width = crop.width;\n      canvas.height = crop.height;\n      var ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n      return new Promise(function (resolve) {\n        canvas.toBlob(function (blob) {\n          if (!blob) {\n            //reject(new Error('Canvas is empty'));\n            console.error(\"Canvas is empty\");\n            return;\n          }\n\n          blob.name = fileName;\n          window.URL.revokeObjectURL(_this2.fileUrl);\n          _this2.fileUrl = window.URL.createObjectURL(blob);\n\n          _this2.setState({\n            blobValue: blob\n          });\n\n          resolve(_this2.fileUrl);\n        }, \"image/jpeg\");\n      });\n    }\n  }, {\n    key: \"fileUpload\",\n    value: function fileUpload(file) {\n      var url = this.props.uploadUrl;\n      var formData = new FormData();\n      formData.append(\"uploadfile\", file); //Lưu ý tên 'uploadfile' phải trùng với tham số bên Server side\n\n      var config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      };\n      return axios.post(url, formData, config);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          handleClose = _this$props.handleClose,\n          open = _this$props.open,\n          handleUpdate = _this$props.handleUpdate;\n      var _this$state = this.state,\n          dragClass = _this$state.dragClass,\n          files = _this$state.files;\n      return /*#__PURE__*/React.createElement(Dialog, {\n        onClose: handleClose,\n        open: open,\n        PaperProps: {\n          style: {\n            width: 500,\n            maxHeight: 800,\n            alignContent: \"center\" //backgroundColor: 'Blue',\n            //color:'black'\n\n          }\n        },\n        PaperComponent: PaperComponent,\n        maxWidth: \"md\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: \"move\"\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mb-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 6\n        }\n      }, t(\"general.upload\"))), /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"upload-form m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 6\n        }\n      }, this.state.isEmpty ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(dragClass, \" upload-drop-box flex flex-center flex-middle\"),\n        onDragEnter: this.handleDragStart,\n        onDragOver: this.handleDragOver,\n        onDrop: this.handleDrop,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 9\n        }\n      }, this.state.isEmpty ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }\n      }, \"Drop your files here\") : /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }\n      }, files.length, \" file\", files.length > 1 ? \"s\" : \"\", \" \", \"selected...\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-wrap mb-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"upload-single-file\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"small\",\n        className: \"capitalize\",\n        component: \"span\",\n        variant: \"contained\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        className: \"pr-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }\n      }, \"cloud_upload\"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }\n      }, t(\"general.select_file\"))))), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"display-none\",\n        onChange: this.handleFileSelect,\n        id: \"upload-single-file\",\n        type: \"file\",\n        accept: \"image/*\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 10\n        }\n      }))) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 8\n        }\n      }, this.state.src && /*#__PURE__*/React.createElement(ReactCrop, {\n        style: {\n          maxWidth: \"100%\",\n          maxHeight: 400,\n          alignContent: \"center\"\n        },\n        src: this.state.src,\n        crop: this.state.crop,\n        onImageLoaded: this.onImageLoaded,\n        onComplete: this.onCropComplete,\n        onChange: this.onCropChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 10\n        }\n      })))), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-16 align-bottom\",\n        variant: \"contained\",\n        color: \"secondary\",\n        startIcon: /*#__PURE__*/React.createElement(Block, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 18\n          }\n        }),\n        onClick: function onClick() {\n          return handleClose(_this3.state.user);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 6\n        }\n      }, t(\"general.close\")), /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-16 align-bottom\",\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/React.createElement(Save, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 18\n          }\n        }),\n        color: \"primary\",\n        onClick: function onClick() {\n          return handleUpdate(_this3.state.blobValue);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 6\n        }\n      }, t(\"general.update\"))));\n    }\n  }]);\n\n  return UploadCropImagePopup;\n}(React.Component);\n\nexport default UploadCropImagePopup;","map":{"version":3,"sources":["D:/OceanTech/nimpe/Client-V2/src/app/views/page-layouts/UploadCropImagePopup.jsx"],"names":["Button","Dialog","DialogActions","Icon","DialogContent","DialogTitle","Paper","axios","React","Draggable","ReactCrop","ConstantList","Block","Save","PaperComponent","props","UploadCropImagePopup","state","dragClass","files","statusList","isEmpty","src","crop","unit","width","height","blobValue","contentType","onImageLoaded","image","imageRef","onCropComplete","makeClientCrop","onCropChange","setState","handleFileUploadOnSelect","e","target","length","reader","FileReader","addEventListener","result","readAsDataURL","handleFileSelect","handleDragOver","event","preventDefault","handleDrop","persist","dataTransfer","handleDragStart","handleSingleRemove","index","splice","handleAllRemove","uploadSingleFile","t","allFiles","file","fileUpload","then","alert","window","location","reload","uploading","error","uploadAllFile","map","item","push","queProgress","handleSingleCancel","fileUploadBlob","url","API_ENPOINT","formData","FormData","set","config","headers","post","response","user","data","getCroppedImg","croppedImageUrl","fileName","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","drawImage","x","y","Promise","resolve","toBlob","blob","console","name","URL","revokeObjectURL","fileUrl","createObjectURL","uploadUrl","append","handleClose","open","handleUpdate","style","maxHeight","alignContent","cursor","maxWidth","Component"],"mappings":"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","sourcesContent":["import { Button, Dialog, DialogActions, Icon } from \"@material-ui/core\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport Draggable from \"react-draggable\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport { Block, Save } from \"@material-ui/icons\";\r\n\r\nfunction PaperComponent(props) {\r\n\treturn (\r\n\t\t<Draggable\r\n\t\t\thandle=\"#draggable-dialog-title\"\r\n\t\t\tcancel={'[class*=\"MuiDialogContent-root\"]'}\r\n\t\t>\r\n\t\t\t<Paper {...props} />\r\n\t\t</Draggable>\r\n\t);\r\n}\r\nclass UploadCropImagePopup extends React.Component {\r\n\t// state = {\r\n\t//   dragClass: \"\",\r\n\t//   files: [],\r\n\t//   statusList: [],\r\n\t//   queProgress: 0\r\n\t// };\r\n\r\n\tstate = {\r\n\t\tdragClass: \"\",\r\n\t\tfiles: [],\r\n\t\tstatusList: [],\r\n\t\tisEmpty: true,\r\n\t\tsrc: null,\r\n\t\tcrop: {\r\n\t\t\tunit: \"%\",\r\n\t\t\twidth: 50,\r\n\t\t\theight: 50,\r\n\t\t},\r\n\t\tblobValue: null,\r\n\t\tcontentType: null,\r\n\t};\r\n\t// If you setState the crop in here you should return false.\r\n\tonImageLoaded = image => {\r\n\t\tthis.imageRef = image;\r\n\t};\r\n\r\n\tonCropComplete = crop => {\r\n\t\tthis.makeClientCrop(crop);\r\n\t};\r\n\r\n\tonCropChange = crop => {\r\n\t\tthis.setState({ crop });\r\n\t};\r\n\r\n\tasync makeClientCrop(crop) {\r\n\t\tif (this.imageRef && crop.width && crop.height) {\r\n\t\t\tconst croppedImageUrl = await this.getCroppedImg(\r\n\t\t\t\tthis.imageRef,\r\n\t\t\t\tcrop,\r\n\t\t\t\t\"newFile.jpeg\"\r\n\t\t\t);\r\n\t\t\tthis.setState({ croppedImageUrl });\r\n\t\t}\r\n\t}\r\n\r\n\tgetCroppedImg(image, crop, fileName) {\r\n\t\tconst canvas = document.createElement(\"canvas\");\r\n\t\tconst scaleX = image.naturalWidth / image.width;\r\n\t\tconst scaleY = image.naturalHeight / image.height;\r\n\t\tcanvas.width = crop.width;\r\n\t\tcanvas.height = crop.height;\r\n\t\tconst ctx = canvas.getContext(\"2d\");\r\n\r\n\t\tctx.drawImage(\r\n\t\t\timage,\r\n\t\t\tcrop.x * scaleX,\r\n\t\t\tcrop.y * scaleY,\r\n\t\t\tcrop.width * scaleX,\r\n\t\t\tcrop.height * scaleY,\r\n\t\t\t0,\r\n\t\t\t0,\r\n\t\t\tcrop.width,\r\n\t\t\tcrop.height\r\n\t\t);\r\n\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tcanvas.toBlob(blob => {\r\n\t\t\t\tif (!blob) {\r\n\t\t\t\t\t//reject(new Error('Canvas is empty'));\r\n\t\t\t\t\tconsole.error(\"Canvas is empty\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tblob.name = fileName;\r\n\t\t\t\twindow.URL.revokeObjectURL(this.fileUrl);\r\n\t\t\t\tthis.fileUrl = window.URL.createObjectURL(blob);\r\n\t\t\t\tthis.setState({ blobValue: blob });\r\n\t\t\t\tresolve(this.fileUrl);\r\n\t\t\t}, \"image/jpeg\");\r\n\t\t});\r\n\t}\r\n\thandleFileUploadOnSelect = e => {\r\n\t\tif (e.target.files && e.target.files.length > 0) {\r\n\t\t\tconst reader = new FileReader();\r\n\t\t\treader.addEventListener(\"load\", () =>\r\n\t\t\t\tthis.setState({ src: reader.result })\r\n\t\t\t);\r\n\t\t\treader.readAsDataURL(e.target.files[0]);\r\n\t\t}\r\n\t};\r\n\t// handleFileUploadOnSelect = event => {\r\n\t//   let files = event.target.files;\r\n\t//   this.fileUpload(files[0]).then(res => {\r\n\t//     alert(\"File uploaded successfully.\")\r\n\t//   });\r\n\t// }\r\n\thandleFileSelect = e => {\r\n\t\tif (e.target.files && e.target.files.length > 0) {\r\n\t\t\tconst reader = new FileReader();\r\n\t\t\treader.addEventListener(\"load\", () =>\r\n\t\t\t\tthis.setState({ src: reader.result, isEmpty: false })\r\n\t\t\t);\r\n\t\t\treader.readAsDataURL(e.target.files[0]);\r\n\t\t}\r\n\t\t// let { t } = this.props;\r\n\t\t// let files = event.target.files;\r\n\t\t// let list = [];\r\n\t\t// console.log(files);\r\n\t\t// let acceptType = this.props.acceptType.split(\";\");\r\n\t\t// for (const iterator of files) {\r\n\t\t//   if (iterator.type.split(\"/\").length <= 0 || acceptType.indexOf(iterator.type.split(\"/\")[1]) < 0) {\r\n\t\t//     console.log(acceptType);\r\n\t\t//     console.log(iterator.type.split(\"/\"));\r\n\t\t//     alert(t(\"general.type_not_accepted\"));\r\n\t\t//     break;\r\n\t\t//   }\r\n\t\t//   list.push({\r\n\t\t//     file: iterator,\r\n\t\t//     uploading: false,\r\n\t\t//     error: false,\r\n\t\t//     progress: 0\r\n\t\t//   });\r\n\t\t// }\r\n\r\n\t\t// this.setState({\r\n\t\t//   files: [...list]\r\n\t\t// });\r\n\t};\r\n\r\n\thandleDragOver = event => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.setState({ dragClass: \"drag-shadow\" });\r\n\t};\r\n\thandleDrop = event => {\r\n\t\tevent.preventDefault();\r\n\t\tevent.persist();\r\n\t\tlet files = event.dataTransfer.files;\r\n\t\t// this.fileUpload(files[0]).then(res => {\r\n\t\t//   let url =ConstantList.API_ENPOINT+\"/public/file/downloadbyid/\"+res.data.id;\r\n\t\t//   alert(url);\r\n\t\t//   this.setState({imageUrl:url})\r\n\t\t//   console.log(url);\r\n\t\t//   //alert(\"File uploaded successfully.\")\r\n\t\t// });\r\n\t\tif (files && files.length > 0) {\r\n\t\t\tconst reader = new FileReader();\r\n\t\t\treader.addEventListener(\"load\", () =>\r\n\t\t\t\tthis.setState({ src: reader.result })\r\n\t\t\t);\r\n\t\t\treader.readAsDataURL(files[0]);\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\thandleDragStart = () => {\r\n\t\tthis.setState({ dragClass: \"drag-shadow\" });\r\n\t};\r\n\r\n\thandleSingleRemove = index => {\r\n\t\tlet files = [...this.state.files];\r\n\t\tfiles.splice(index, 1);\r\n\t\tthis.setState({\r\n\t\t\tfiles: [...files],\r\n\t\t});\r\n\t};\r\n\r\n\thandleAllRemove = () => {\r\n\t\tthis.setState({ files: [] });\r\n\t};\r\n\tfileUpload(file) {\r\n\t\tconst url = this.props.uploadUrl;\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append(\"uploadfile\", file); //Lưu ý tên 'uploadfile' phải trùng với tham số bên Server side\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n\t\t\t},\r\n\t\t};\r\n\t\treturn axios.post(url, formData, config);\r\n\t}\r\n\r\n\tuploadSingleFile = index => {\r\n\t\tlet { t } = this.props;\r\n\t\tlet allFiles = [...this.state.files];\r\n\t\tlet file = this.state.files[index];\r\n\t\tthis.fileUpload(file.file).then(() => {\r\n\t\t\talert(t(\"general.success\"));\r\n\t\t\twindow.location.reload();\r\n\t\t});\r\n\r\n\t\tallFiles[index] = { ...file, uploading: true, error: false };\r\n\r\n\t\tthis.setState({\r\n\t\t\tfiles: [...allFiles],\r\n\t\t});\r\n\t};\r\n\r\n\tuploadAllFile = () => {\r\n\t\tlet allFiles = [];\r\n\r\n\t\tthis.state.files.map(item => {\r\n\t\t\tallFiles.push({\r\n\t\t\t\t...item,\r\n\t\t\t\tuploading: true,\r\n\t\t\t\terror: false,\r\n\t\t\t});\r\n\r\n\t\t\treturn item;\r\n\t\t});\r\n\r\n\t\tthis.setState({\r\n\t\t\tfiles: [...allFiles],\r\n\t\t\tqueProgress: 35,\r\n\t\t});\r\n\t};\r\n\r\n\thandleSingleCancel = index => {\r\n\t\tlet allFiles = [...this.state.files];\r\n\t\tlet file = this.state.files[index];\r\n\r\n\t\tallFiles[index] = { ...file, uploading: false, error: true };\r\n\r\n\t\tthis.setState({\r\n\t\t\tfiles: [...allFiles],\r\n\t\t});\r\n\t};\r\n\tfileUploadBlob = () => {\r\n\t\tconst url = ConstantList.API_ENPOINT + \"/api/users/updateavatar\";\r\n\t\tlet formData = new FormData();\r\n\t\tformData.set(\"uploadfile\", this.state.blobValue);\r\n\t\t//formData.append('uploadfile',file);//Lưu ý tên 'uploadfile' phải trùng với tham số bên Server side\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"image/jpg\",\r\n\t\t\t},\r\n\t\t};\r\n\t\treturn axios.post(url, formData, config).then(response => {\r\n\t\t\tlet user = response.data;\r\n\t\t\tthis.setState({ user: user });\r\n\t\t\t//console.log(user);\r\n\t\t});\r\n\t};\r\n\trender() {\r\n\t\tconst { t, handleClose, open, handleUpdate } = this.props;\r\n\t\tlet { dragClass, files } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<Dialog\r\n\t\t\t\tonClose={handleClose}\r\n\t\t\t\topen={open}\r\n\t\t\t\tPaperProps={{\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\twidth: 500,\r\n\t\t\t\t\t\tmaxHeight: 800,\r\n\t\t\t\t\t\talignContent: \"center\",\r\n\t\t\t\t\t\t//backgroundColor: 'Blue',\r\n\t\t\t\t\t\t//color:'black'\r\n\t\t\t\t\t},\r\n\t\t\t\t}}\r\n\t\t\t\tPaperComponent={PaperComponent}\r\n\t\t\t\tmaxWidth={\"md\"}\r\n\t\t\t\tfullWidth\r\n\t\t\t>\r\n\t\t\t\t<DialogTitle\r\n\t\t\t\t\tstyle={{ cursor: \"move\" }}\r\n\t\t\t\t\tid=\"draggable-dialog-title\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<span className=\"mb-20\">{t(\"general.upload\")}</span>\r\n\t\t\t\t</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<div className=\"upload-form m-sm-30\">\r\n\t\t\t\t\t\t{this.state.isEmpty ? (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName={`${dragClass} upload-drop-box flex flex-center flex-middle`}\r\n\t\t\t\t\t\t\t\t\tonDragEnter={this.handleDragStart}\r\n\t\t\t\t\t\t\t\t\tonDragOver={this.handleDragOver}\r\n\t\t\t\t\t\t\t\t\tonDrop={this.handleDrop}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{this.state.isEmpty ? (\r\n\t\t\t\t\t\t\t\t\t\t<span>Drop your files here</span>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<h5 className=\"m-0\">\r\n\t\t\t\t\t\t\t\t\t\t\t{files.length} file\r\n\t\t\t\t\t\t\t\t\t\t\t{files.length > 1 ? \"s\" : \"\"}{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\tselected...\r\n\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"flex flex-wrap mb-20\">\r\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"upload-single-file\">\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"capitalize\"\r\n\t\t\t\t\t\t\t\t\t\t\tcomponent=\"span\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"flex flex-middle\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon className=\"pr-8\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcloud_upload\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Icon>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{t(\"general.select_file\")}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"display-none\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleFileSelect}\r\n\t\t\t\t\t\t\t\t\t\tid=\"upload-single-file\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\t\t\t\taccept=\"image/*\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{this.state.src && (\r\n\t\t\t\t\t\t\t\t\t<ReactCrop\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tmaxWidth: \"100%\",\r\n\t\t\t\t\t\t\t\t\t\t\tmaxHeight: 400,\r\n\t\t\t\t\t\t\t\t\t\t\talignContent: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tsrc={this.state.src}\r\n\t\t\t\t\t\t\t\t\t\tcrop={this.state.crop}\r\n\t\t\t\t\t\t\t\t\t\tonImageLoaded={this.onImageLoaded}\r\n\t\t\t\t\t\t\t\t\t\tonComplete={this.onCropComplete}\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.onCropChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName=\"mb-16 mr-16 align-bottom\"\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\tstartIcon={<Block />}\r\n\t\t\t\t\t\tonClick={() => handleClose(this.state.user)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{t(\"general.close\")}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName=\"mb-16 mr-16 align-bottom\"\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tstartIcon={<Save />}\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tonClick={() => handleUpdate(this.state.blobValue)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{t(\"general.update\")}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t);\r\n\t}\r\n}\r\nexport default UploadCropImagePopup;\r\n"]},"metadata":{},"sourceType":"module"}