{"ast":null,"code":"import _defineProperty from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\src\\\\app\\\\views\\\\MosquitoType\\\\MosquitoTypeDialog.jsx\";\nimport { Button, Dialog, DialogActions, Grid, DialogTitle, DialogContent } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { addNew, checkCode, update } from \"./MosquitoTypeService\";\nimport { Block, Save } from \"@material-ui/icons\";\ntoast.configure({\n  autoClose: 2000,\n  draggable: false,\n  limit: 3\n});\n\nvar MosquitoTypeDialog = /*#__PURE__*/function (_Component) {\n  _inherits(MosquitoTypeDialog, _Component);\n\n  var _super = _createSuper(MosquitoTypeDialog);\n\n  function MosquitoTypeDialog() {\n    var _this;\n\n    _classCallCheck(this, MosquitoTypeDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      id: \"\",\n      species: \"\",\n      regnum: \"\",\n      phylum: \"\",\n      classes: \"\",\n      ordo: \"\",\n      familia: \"\",\n      genus: \"\",\n      isExternalOrg: false,\n      isActive: false,\n      shouldOpenSelectParentPopup: false,\n      item: {}\n    };\n    _this.valueItem = {};\n\n    _this.handleChange = function (event, source) {\n      // debugger\n      event.persist();\n\n      if (source === \"isExternalOrg\") {\n        _this.setState({\n          isExternalOrg: event.target.checked\n        });\n\n        return;\n      }\n\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleFormSubmit = function () {\n      var _this$state = _this.state,\n          id = _this$state.id,\n          species = _this$state.species,\n          regnum = _this$state.regnum,\n          phylum = _this$state.phylum,\n          classes = _this$state.classes,\n          ordo = _this$state.ordo,\n          familia = _this$state.familia,\n          genus = _this$state.genus;\n      var item = {};\n      item.id = id;\n      item.species = species;\n      item.regnum = regnum;\n      item.phylum = phylum;\n      item.classes = classes;\n      item.ordo = ordo;\n      item.familia = familia;\n      item.genus = genus;\n\n      if (id) {\n        update(item).then(function () {\n          _this.props.handleOKEditClose();\n\n          toast.success(\"Cập nhật thành công!\");\n        });\n      } else {\n        addNew(item).then(function () {\n          _this.props.handleOKEditClose();\n\n          toast.success(\"Thêm mới thành công!\");\n        });\n      }\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenSelectParentPopup: false\n      });\n    };\n\n    _this.handleChangeValue = function (item) {\n      _this.valueItem = item;\n      console.log(_this.valueItem);\n    };\n\n    return _this;\n  }\n\n  _createClass(MosquitoTypeDialog, [{\n    key: \"validateForm\",\n    value: function validateForm(value) {\n      var whitespace = new RegExp(/[^\\s]+/);\n\n      if (!whitespace.test(value)) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      ValidatorForm.addValidationRule(\"whitespace\", function (value) {\n        if (_this2.validateForm(value)) {\n          return false;\n        }\n\n        return true;\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this3 = this;\n\n      var item = this.props.item;\n      var specimenType;\n\n      if (item.specimenType != null && item.specimenType.length > 0) {\n        specimenType = item.specimenType[0];\n      }\n\n      this.setState(item, function () {\n        _this3.setState({\n          specimenType: specimenType\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      ValidatorForm.removeValidationRule(\"whitespace\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props = this.props,\n          open = _this$props.open,\n          t = _this$props.t;\n      var _this$state2 = this.state,\n          id = _this$state2.id,\n          species = _this$state2.species,\n          regnum = _this$state2.regnum,\n          phylum = _this$state2.phylum,\n          classes = _this$state2.classes,\n          ordo = _this$state2.ordo,\n          familia = _this$state2.familia,\n          genus = _this$state2.genus;\n      return /*#__PURE__*/React.createElement(Dialog, {\n        open: open,\n        fullWidth: true,\n        maxWidth: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 5\n        }\n      }, id ? t(\"general.update\") : t(\"general.add\")), /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(DialogContent, {\n        dividers: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 6,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100\",\n        size: \"small\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 12\n          }\n        }, \"*\"), t(\"mosquitoType.species\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"species\",\n        value: species,\n        validators: [\"required\", \"whitespace\"],\n        errorMessages: [t(\"general.required\"), t(\"general.invalidCharacter\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 6,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100\",\n        size: \"small\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 12\n          }\n        }, \"*\"), t(\"mosquitoType.regnum\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"regnum\",\n        value: regnum,\n        validators: [\"required\", \"whitespace\"],\n        errorMessages: [t(\"general.required\"), t(\"general.invalidCharacter\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 6,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100\",\n        size: \"small\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 12\n          }\n        }, \"*\"), t(\"mosquitoType.phylum\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"phylum\",\n        value: phylum,\n        validators: [\"required\", \"whitespace\"],\n        errorMessages: [t(\"general.required\"), t(\"general.invalidCharacter\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 6,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100\",\n        size: \"small\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 11\n          }\n        }, t(\"mosquitoType.classMosquito\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"classes\",\n        value: classes // validators={[\"required\", \"whitespace\"]}\n        // errorMessages={[\n        // \tt(\"general.required\"),\n        // \tt(\"general.invalidCharacter\"),\n        // ]}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 6,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100\",\n        size: \"small\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 11\n          }\n        }, t(\"mosquitoType.ordo\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"ordo\",\n        value: ordo // validators={[\"required\", \"whitespace\"]}\n        // errorMessages={[\n        // \tt(\"general.required\"),\n        // \tt(\"general.invalidCharacter\"),\n        // ]}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 6,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100\",\n        size: \"small\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 11\n          }\n        }, t(\"mosquitoType.familia\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"familia\",\n        value: familia // validators={[\"required\", \"whitespace\"]}\n        // errorMessages={[\n        // \tt(\"general.required\"),\n        // \tt(\"general.invalidCharacter\"),\n        // ]}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 12,\n        md: 12,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100\",\n        size: \"small\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 11\n          }\n        }, t(\"mosquitoType.genus\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"genus\",\n        value: genus // validators={[\"required\", \"whitespace\"]}\n        // errorMessages={[\n        // \tt(\"general.required\"),\n        // \tt(\"general.invalidCharacter\"),\n        // ]}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 9\n        }\n      })))), /*#__PURE__*/React.createElement(DialogActions, {\n        style: {\n          paddingRight: \"0px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        startIcon: /*#__PURE__*/React.createElement(Block, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 20\n          }\n        }),\n        variant: \"contained\",\n        className: \"mr-12\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this4.props.handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 8\n        }\n      }, t(\"general.cancel\")), /*#__PURE__*/React.createElement(Button, {\n        startIcon: /*#__PURE__*/React.createElement(Save, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 20\n          }\n        }),\n        className: \"mr-8\",\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 8\n        }\n      }, t(\"general.save\"))))));\n    }\n  }]);\n\n  return MosquitoTypeDialog;\n}(Component);\n\nexport default MosquitoTypeDialog;","map":{"version":3,"sources":["D:/OceanTech/nimpe/Client-V2/src/app/views/MosquitoType/MosquitoTypeDialog.jsx"],"names":["Button","Dialog","DialogActions","Grid","DialogTitle","DialogContent","React","Component","TextValidator","ValidatorForm","toast","addNew","checkCode","update","Block","Save","configure","autoClose","draggable","limit","MosquitoTypeDialog","state","id","species","regnum","phylum","classes","ordo","familia","genus","isExternalOrg","isActive","shouldOpenSelectParentPopup","item","valueItem","handleChange","event","source","persist","setState","target","checked","name","value","handleFormSubmit","then","props","handleOKEditClose","success","handleDialogClose","handleChangeValue","console","log","whitespace","RegExp","test","addValidationRule","validateForm","specimenType","length","removeValidationRule","open","t","color","paddingRight","handleClose"],"mappings":"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","sourcesContent":["import {\r\n\tButton,\r\n\tDialog,\r\n\tDialogActions,\r\n\tGrid,\r\n\tDialogTitle,\r\n\tDialogContent,\r\n} from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { addNew, checkCode, update } from \"./MosquitoTypeService\";\r\nimport { Block, Save } from \"@material-ui/icons\";\r\ntoast.configure({\r\n\tautoClose: 2000,\r\n\tdraggable: false,\r\n\tlimit: 3,\r\n});\r\n\r\nclass MosquitoTypeDialog extends Component {\r\n\tstate = {\r\n\t\tid: \"\",\r\n\t\tspecies: \"\",\r\n\t\tregnum: \"\",\r\n\t\tphylum: \"\",\r\n\t\tclasses: \"\",\r\n\t\tordo: \"\",\r\n\t\tfamilia: \"\",\r\n\t\tgenus: \"\",\r\n\t\tisExternalOrg: false,\r\n\t\tisActive: false,\r\n\t\tshouldOpenSelectParentPopup: false,\r\n\t\titem: {},\r\n\t};\r\n\tvalueItem = {};\r\n\t//------------\r\n\thandleChange = (event, source) => {\r\n\t\t// debugger\r\n\t\tevent.persist();\r\n\t\tif (source === \"isExternalOrg\") {\r\n\t\t\tthis.setState({ isExternalOrg: event.target.checked });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\t[event.target.name]: event.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\thandleFormSubmit = () => {\r\n\t\tlet { id, species, regnum, phylum, classes, ordo, familia, genus } = this.state;\r\n\t\tlet item = {};\r\n\t\titem.id = id;\r\n\t\titem.species = species;\r\n\t\titem.regnum = regnum;\r\n\t\titem.phylum = phylum;\r\n\t\titem.classes = classes;\r\n\t\titem.ordo = ordo;\r\n\t\titem.familia = familia;\r\n\t\titem.genus = genus;\r\n\r\n\t\tif (id) {\r\n\t\t\tupdate(item).then(() => {\r\n\t\t\t\tthis.props.handleOKEditClose();\r\n\t\t\t\ttoast.success(\"Cập nhật thành công!\");\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\taddNew(item).then(() => {\r\n\t\t\t\tthis.props.handleOKEditClose();\r\n\t\t\t\ttoast.success(\"Thêm mới thành công!\");\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\thandleDialogClose = () => {\r\n\t\tthis.setState({ shouldOpenSelectParentPopup: false });\r\n\t};\r\n\r\n\tvalidateForm(value) {\r\n\t\tlet whitespace = new RegExp(/[^\\s]+/);\r\n\t\tif (!whitespace.test(value)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tValidatorForm.addValidationRule(\"whitespace\", value => {\r\n\t\t\tif (this.validateForm(value)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\tlet { item } = this.props;\r\n\t\tlet specimenType;\r\n\t\tif (item.specimenType != null && item.specimenType.length > 0) {\r\n\t\t\tspecimenType = item.specimenType[0];\r\n\t\t}\r\n\t\tthis.setState(item, () => {\r\n\t\t\tthis.setState({ specimenType: specimenType });\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tValidatorForm.removeValidationRule(\"whitespace\");\r\n\t}\r\n\r\n\thandleChangeValue = item => {\r\n\t\tthis.valueItem = item;\r\n\t\tconsole.log(this.valueItem);\r\n\t};\r\n\r\n\trender() {\r\n\t\tlet { open, t } = this.props;\r\n\t\tlet { id, species, regnum, phylum, classes, ordo, familia, genus} = this.state;\r\n\t\treturn (\r\n\t\t\t<Dialog open={open} fullWidth maxWidth=\"sm\">\r\n\t\t\t\t<DialogTitle>\r\n\t\t\t\t\t{id ? t(\"general.update\") : t(\"general.add\")}\r\n\t\t\t\t</DialogTitle>\r\n\t\t\t\t<ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\r\n\t\t\t\t\t<DialogContent dividers>\r\n\t\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t\t<Grid item lg={6} md={6} sm={12} xs={12}>\r\n\t\t\t\t\t\t\t\t<TextValidator\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-100\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"font\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span style={{ color: \"red\" }}>*</span>\r\n\t\t\t\t\t\t\t\t\t\t\t{t(\"mosquitoType.species\")}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tname=\"species\"\r\n\t\t\t\t\t\t\t\t\tvalue={species}\r\n\t\t\t\t\t\t\t\t\tvalidators={[\"required\", \"whitespace\"]}\r\n\t\t\t\t\t\t\t\t\terrorMessages={[\r\n\t\t\t\t\t\t\t\t\t\tt(\"general.required\"),\r\n\t\t\t\t\t\t\t\t\t\tt(\"general.invalidCharacter\"),\r\n\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item lg={6} md={6} sm={12} xs={12}>\r\n\t\t\t\t\t\t\t\t<TextValidator\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-100\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"font\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span style={{ color: \"red\" }}>*</span>\r\n\t\t\t\t\t\t\t\t\t\t\t{t(\"mosquitoType.regnum\")}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tname=\"regnum\"\r\n\t\t\t\t\t\t\t\t\tvalue={regnum}\r\n\t\t\t\t\t\t\t\t\tvalidators={[\"required\", \"whitespace\"]}\r\n\t\t\t\t\t\t\t\t\terrorMessages={[\r\n\t\t\t\t\t\t\t\t\t\tt(\"general.required\"),\r\n\t\t\t\t\t\t\t\t\t\tt(\"general.invalidCharacter\"),\r\n\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item lg={6} md={6} sm={12} xs={12}>\r\n\t\t\t\t\t\t\t\t<TextValidator\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-100\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"font\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span style={{ color: \"red\" }}>*</span>\r\n\t\t\t\t\t\t\t\t\t\t\t{t(\"mosquitoType.phylum\")}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tname=\"phylum\"\r\n\t\t\t\t\t\t\t\t\tvalue={phylum}\r\n\t\t\t\t\t\t\t\t\tvalidators={[\"required\", \"whitespace\"]}\r\n\t\t\t\t\t\t\t\t\terrorMessages={[\r\n\t\t\t\t\t\t\t\t\t\tt(\"general.required\"),\r\n\t\t\t\t\t\t\t\t\t\tt(\"general.invalidCharacter\"),\r\n\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item lg={6} md={6} sm={12} xs={12}>\r\n\t\t\t\t\t\t\t\t<TextValidator\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-100\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"font\">\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <span style={{ color: \"red\" }}>*</span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t{t(\"mosquitoType.classMosquito\")}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tname=\"classes\"\r\n\t\t\t\t\t\t\t\t\tvalue={ classes }\r\n\t\t\t\t\t\t\t\t\t// validators={[\"required\", \"whitespace\"]}\r\n\t\t\t\t\t\t\t\t\t// errorMessages={[\r\n\t\t\t\t\t\t\t\t\t// \tt(\"general.required\"),\r\n\t\t\t\t\t\t\t\t\t// \tt(\"general.invalidCharacter\"),\r\n\t\t\t\t\t\t\t\t\t// ]}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item lg={6} md={6} sm={12} xs={12}>\r\n\t\t\t\t\t\t\t\t<TextValidator\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-100\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"font\">\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <span style={{ color: \"red\" }}>*</span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t{t(\"mosquitoType.ordo\")}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tname=\"ordo\"\r\n\t\t\t\t\t\t\t\t\tvalue={ordo}\r\n\t\t\t\t\t\t\t\t\t// validators={[\"required\", \"whitespace\"]}\r\n\t\t\t\t\t\t\t\t\t// errorMessages={[\r\n\t\t\t\t\t\t\t\t\t// \tt(\"general.required\"),\r\n\t\t\t\t\t\t\t\t\t// \tt(\"general.invalidCharacter\"),\r\n\t\t\t\t\t\t\t\t\t// ]}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item lg={6} md={6} sm={12} xs={12}>\r\n\t\t\t\t\t\t\t\t<TextValidator\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-100\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"font\">\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <span style={{ color: \"red\" }}>*</span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t{t(\"mosquitoType.familia\")}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tname=\"familia\"\r\n\t\t\t\t\t\t\t\t\tvalue={familia}\r\n\t\t\t\t\t\t\t\t\t// validators={[\"required\", \"whitespace\"]}\r\n\t\t\t\t\t\t\t\t\t// errorMessages={[\r\n\t\t\t\t\t\t\t\t\t// \tt(\"general.required\"),\r\n\t\t\t\t\t\t\t\t\t// \tt(\"general.invalidCharacter\"),\r\n\t\t\t\t\t\t\t\t\t// ]}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item lg={12} md={12} sm={12} xs={12}>\r\n\t\t\t\t\t\t\t\t<TextValidator\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-100\"\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"font\">\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <span style={{ color: \"red\" }}>*</span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t{t(\"mosquitoType.genus\")}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tname=\"genus\"\r\n\t\t\t\t\t\t\t\t\tvalue={genus}\r\n\t\t\t\t\t\t\t\t\t// validators={[\"required\", \"whitespace\"]}\r\n\t\t\t\t\t\t\t\t\t// errorMessages={[\r\n\t\t\t\t\t\t\t\t\t// \tt(\"general.required\"),\r\n\t\t\t\t\t\t\t\t\t// \tt(\"general.invalidCharacter\"),\r\n\t\t\t\t\t\t\t\t\t// ]}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</DialogContent>\r\n\r\n\t\t\t\t\t<DialogActions style={{ paddingRight: \"0px\" }}>\r\n\t\t\t\t\t\t<div className=\"flex flex-middle\">\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tstartIcon={<Block />}\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tclassName=\"mr-12\"\r\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\tonClick={() => this.props.handleClose()}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{t(\"general.cancel\")}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tstartIcon={<Save />}\r\n\t\t\t\t\t\t\t\tclassName=\"mr-8\"\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{t(\"general.save\")}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</DialogActions>\r\n\t\t\t\t</ValidatorForm>\r\n\t\t\t</Dialog>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default MosquitoTypeDialog;\r\n"]},"metadata":{},"sourceType":"module"}