{"ast":null,"code":"import _defineProperty from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\src\\\\app\\\\EgretLayout\\\\SharedCompoents\\\\Sidenav.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { navigations } from \"../../navigations\";\nimport { EgretVerticalNav } from \"egret\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\nimport ConstantList from \"../../appConfig\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport JwtAuthService from \"../../services/jwtAuthService\";\nimport localStorageService from \"../../services/localStorageService\";\nvar ViewEgretVerticalNav = withTranslation()(EgretVerticalNav);\n\nvar Sidenav = /*#__PURE__*/function (_Component) {\n  _inherits(Sidenav, _Component);\n\n  var _super = _createSuper(Sidenav);\n\n  function Sidenav() {\n    var _this;\n\n    _classCallCheck(this, Sidenav);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {};\n\n    _this.updateSidebarMode = function (sidebarSettings) {\n      var _this$props = _this.props,\n          settings = _this$props.settings,\n          setLayoutSettings = _this$props.setLayoutSettings;\n      var activeLayoutSettingsName = settings.activeLayout + \"Settings\";\n      var activeLayoutSettings = settings[activeLayoutSettingsName];\n      setLayoutSettings(_objectSpread(_objectSpread({}, settings), {}, _defineProperty({}, activeLayoutSettingsName, _objectSpread(_objectSpread({}, activeLayoutSettings), {}, {\n        leftSidebar: _objectSpread(_objectSpread({}, activeLayoutSettings.leftSidebar), sidebarSettings)\n      }))));\n    };\n\n    _this.renderOverlay = function () {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        onClick: function onClick() {\n          return _this.updateSidebarMode({\n            mode: \"close\"\n          });\n        },\n        className: \"sidenav__overlay\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 5\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Sidenav, [{\n    key: \"getNavigation\",\n    value: function getNavigation() {\n      var navigation = localStorageService.getSessionItem(\"navigations\");\n\n      if (navigation && navigation.length > 0) {\n        return navigation;\n      } else {\n        return navigations;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Scrollbar, {\n        option: {\n          suppressScrollX: true\n        },\n        className: \"scrollable position-relative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, this.props.children, /*#__PURE__*/React.createElement(ViewEgretVerticalNav, {\n        navigation: this.getNavigation(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      })), this.renderOverlay());\n    }\n  }]);\n\n  return Sidenav;\n}(Component);\n\nSidenav.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    setLayoutSettings: PropTypes.func.isRequired,\n    settings: state.layout.settings\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  setLayoutSettings: setLayoutSettings\n})(Sidenav));","map":{"version":3,"sources":["D:/OceanTech/nimpe/Client-V2/src/app/EgretLayout/SharedCompoents/Sidenav.jsx"],"names":["React","Component","Fragment","Scrollbar","withRouter","connect","PropTypes","navigations","EgretVerticalNav","setLayoutSettings","ConstantList","useTranslation","withTranslation","Trans","JwtAuthService","localStorageService","ViewEgretVerticalNav","Sidenav","state","updateSidebarMode","sidebarSettings","props","settings","activeLayoutSettingsName","activeLayout","activeLayoutSettings","leftSidebar","renderOverlay","mode","navigation","getSessionItem","length","suppressScrollX","children","getNavigation","propTypes","func","isRequired","object","mapStateToProps","layout"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { navigations } from \"../../navigations\";\nimport { EgretVerticalNav } from \"egret\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\nimport ConstantList from \"../../appConfig\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport JwtAuthService from \"../../services/jwtAuthService\";\nimport localStorageService from \"../../services/localStorageService\";\nconst ViewEgretVerticalNav = withTranslation()(EgretVerticalNav);\nclass Sidenav extends Component {\n  state = {};\n  updateSidebarMode = (sidebarSettings) => {\n    let { settings, setLayoutSettings } = this.props;\n    let activeLayoutSettingsName = settings.activeLayout + \"Settings\";\n    let activeLayoutSettings = settings[activeLayoutSettingsName];\n\n    setLayoutSettings({\n      ...settings,\n      [activeLayoutSettingsName]: {\n        ...activeLayoutSettings,\n        leftSidebar: {\n          ...activeLayoutSettings.leftSidebar,\n          ...sidebarSettings,\n        },\n      },\n    });\n  };\n\n  renderOverlay = () => (\n    <div\n      onClick={() => this.updateSidebarMode({ mode: \"close\" })}\n      className=\"sidenav__overlay\"\n    />\n  );\n  getNavigation() {\n    let navigation = localStorageService.getSessionItem(\"navigations\");\n    if (navigation && navigation.length > 0) {\n      return navigation;\n    } else {\n      return navigations;\n    }\n  }\n  render() {\n    return (\n      <Fragment>\n        <Scrollbar\n          option={{ suppressScrollX: true }}\n          className=\"scrollable position-relative\"\n        >\n          {this.props.children}\n          <ViewEgretVerticalNav navigation={this.getNavigation()} />\n        </Scrollbar>\n        {this.renderOverlay()}\n      </Fragment>\n    );\n  }\n}\nSidenav.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: state.layout.settings,\n});\nexport default withRouter(\n  connect(mapStateToProps, {\n    setLayoutSettings,\n  })(Sidenav)\n);\n"]},"metadata":{},"sourceType":"module"}