{"ast":null,"code":"import _objectSpread from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\src\\\\app\\\\views\\\\User\\\\UserEditorDialog.jsx\";\nimport { Button, Checkbox, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, FormControlLabel, Grid, InputLabel, MenuItem, Select } from \"@material-ui/core\";\nimport { Block, Save } from \"@material-ui/icons\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport React, { Component } from \"react\";\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { getAllRoles, addUser, updateUser } from \"./UserService\";\nimport ValidatePicker from \"../Component/ValidateSelect/ValidatePicker\";\n\nvar UserEditorDialog = /*#__PURE__*/function (_Component) {\n  _inherits(UserEditorDialog, _Component);\n\n  var _super = _createSuper(UserEditorDialog);\n\n  function UserEditorDialog(props) {\n    var _this;\n\n    _classCallCheck(this, UserEditorDialog);\n\n    _this = _super.call(this, props);\n    _this.listGender = [{\n      id: \"M\",\n      name: \"Nam\"\n    }, {\n      id: \"F\",\n      name: \"Nữ\"\n    }, {\n      id: \"U\",\n      name: \"Không rõ\"\n    }];\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n\n      if (source === \"switch\") {\n        _this.setState({\n          isActive: event.target.checked\n        });\n\n        return;\n      }\n\n      if (source === \"changePass\") {\n        _this.setState({\n          changePass: event.target.checked\n        });\n\n        return;\n      }\n\n      if (source === \"active\") {\n        _this.setState({\n          active: event.target.checked\n        });\n\n        return;\n      }\n\n      if (source === \"displayName\") {\n        var person = _this.state.person;\n        person = person ? person : {};\n        person.displayName = event.target.value;\n\n        _this.setState({\n          person: person\n        });\n\n        return;\n      }\n\n      if (source === \"gender\") {\n        var _person = _this.state.person;\n        _person = _person ? _person : {};\n        _person.gender = event.target.value;\n\n        _this.setState({\n          person: _person\n        });\n\n        return;\n      }\n\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleFormSubmit = function () {\n      var t = _this.props.t;\n\n      if (_this.state.id) {\n        updateUser(_this.state).then(function () {\n          toast.success(t(\"general.updateSuccess\"));\n\n          _this.props.handleOKEditClose();\n        }).catch(function () {\n          toast.error(t(\"general.error\"));\n\n          _this.props.handleClose();\n        });\n      } else {\n        addUser(_this.state).then(function () {\n          toast.success(t(\"general.addSuccess\"));\n\n          _this.props.handleOKEditClose();\n        }).catch(function () {\n          toast.error(t(\"general.error\"));\n\n          _this.props.handleClose();\n        });\n      }\n    };\n\n    _this.selectRoles = function (rolesSelected) {\n      _this.setState({\n        roles: rolesSelected\n      }, function () {});\n    };\n\n    _this.handlePersonChange = function (e) {\n      _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n        person: _objectSpread(_objectSpread({}, _this.state.person), {}, _defineProperty({}, e.target.name, e.target.value))\n      }));\n    };\n\n    _this.handleTextChange = function (e) {\n      _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, _defineProperty({}, e.target.name, e.target.value)));\n    };\n\n    _this.handleDateChange = function (date) {\n      _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n        person: _objectSpread(_objectSpread({}, _this.state.person), {}, {\n          birthDate: date\n        })\n      }));\n    };\n\n    _this.state = {\n      isAddNew: true,\n      listRole: [],\n      roles: [],\n      active: true,\n      person: {\n        firstName: \"\",\n        lastName: \"\",\n        displayName: \"\",\n        email: \"\",\n        birthPlace: \"\",\n        birthDate: new Date(1990, 1, 1)\n      },\n      changePass: true,\n      confirmPassword: \"\",\n      text: \"\",\n      address: \"\",\n      avatar: \"\",\n      username: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(UserEditorDialog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.props.item) {\n        this.setState(_objectSpread(_objectSpread({}, this.props.item), {}, {\n          isAddNew: false\n        }));\n      } // custom rule will have name 'isPasswordMatch'\n\n\n      ValidatorForm.addValidationRule(\"isPasswordMatch\", function (value) {\n        if (value !== _this2.state.password) {\n          return false;\n        }\n\n        return true;\n      });\n      getAllRoles().then(function (_ref) {\n        var data = _ref.data;\n\n        _this2.setState({\n          listRole: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _person$firstName,\n          _person$lastName,\n          _person$displayName,\n          _person$gender,\n          _this3 = this,\n          _person$birthPlace,\n          _person$email;\n\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          t = _this$props.t;\n      var _this$state = this.state,\n          isAddNew = _this$state.isAddNew,\n          listRole = _this$state.listRole,\n          roles = _this$state.roles,\n          active = _this$state.active,\n          person = _this$state.person,\n          username = _this$state.username,\n          changePass = _this$state.changePass,\n          password = _this$state.password,\n          confirmPassword = _this$state.confirmPassword;\n      return /*#__PURE__*/React.createElement(Dialog, {\n        onClose: handleClose,\n        open: open,\n        maxWidth: \"sm\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 5\n        }\n      }, this.props.item ? t(\"general.update\") : t(\"general.add\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"ml-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 6\n        }\n      }, t(\"userTitle\"))), /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(DialogContent, {\n        dividers: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        label: t(\"user.firstName\"),\n        className: \"w-100\",\n        onChange: this.handlePersonChange,\n        type: \"text\",\n        name: \"firstName\",\n        value: (_person$firstName = person === null || person === void 0 ? void 0 : person.firstName) !== null && _person$firstName !== void 0 ? _person$firstName : \"\",\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        label: t(\"user.lastName\"),\n        className: \"w-100\",\n        onChange: this.handlePersonChange,\n        type: \"text\",\n        name: \"lastName\",\n        value: (_person$lastName = person === null || person === void 0 ? void 0 : person.lastName) !== null && _person$lastName !== void 0 ? _person$lastName : \"\",\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        label: t(\"user.displayName\"),\n        className: \"w-100\",\n        onChange: this.handlePersonChange,\n        type: \"text\",\n        name: \"displayName\",\n        value: (_person$displayName = person === null || person === void 0 ? void 0 : person.displayName) !== null && _person$displayName !== void 0 ? _person$displayName : \"\",\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        className: \"w-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"gender-simple\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 10\n        }\n      }, t(\"user.gender\")), /*#__PURE__*/React.createElement(Select, {\n        value: (_person$gender = person === null || person === void 0 ? void 0 : person.gender) !== null && _person$gender !== void 0 ? _person$gender : \"\",\n        onChange: this.handlePersonChange,\n        inputProps: {\n          name: \"gender\",\n          id: \"gender-simple\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 10\n        }\n      }, this.listGender.map(function (item) {\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          key: item.id,\n          value: item.id,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }\n        }, item.name);\n      })))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100\",\n        label: t(\"user.address\"),\n        onChange: this.handlePersonChange,\n        type: \"text\",\n        name: \"birthPlace\",\n        value: (_person$birthPlace = person === null || person === void 0 ? void 0 : person.birthPlace) !== null && _person$birthPlace !== void 0 ? _person$birthPlace : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(ValidatePicker, {\n        disableToolbar: true,\n        className: \"w-100\",\n        autoOk: true,\n        label: t(\"user.birthdate\"),\n        variant: \"inline\",\n        format: \"dd/MM/yyyy\",\n        id: \"date-picker-inline\",\n        value: (person === null || person === void 0 ? void 0 : person.birthDate) || \"\",\n        onChange: this.handleDateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100\",\n        label: \"Email\",\n        onChange: this.handlePersonChange,\n        type: \"email\",\n        name: \"email\",\n        value: (_person$email = person === null || person === void 0 ? void 0 : person.email) !== null && _person$email !== void 0 ? _person$email : \"\",\n        validators: [\"required\", \"isEmail\"],\n        errorMessages: [t(\"general.required\"), \"Email không hợp lệ\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        InputProps: {\n          readOnly: !isAddNew\n        },\n        className: \"w-100\",\n        label: t(\"user.username\"),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"username\",\n        value: username,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 9\n        }\n      })), isAddNew && /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100\",\n        autoComplete: \"new-password\",\n        label: t(\"password\"),\n        onChange: this.handleChange,\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 10\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 6,\n        xs: 12,\n        style: {\n          display: \"flex\",\n          alignItems: \"flex-end\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(FormControlLabel, {\n        value: active,\n        name: \"active\",\n        onChange: function onChange(active) {\n          return _this3.handleChange(active, \"active\");\n        },\n        control: /*#__PURE__*/React.createElement(Checkbox, {\n          checked: active,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 19\n          }\n        }),\n        label: t(\"user.active\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 9\n        }\n      }), this.state.id && /*#__PURE__*/React.createElement(FormControlLabel, {\n        value: changePass,\n        name: \"changePass\",\n        onChange: function onChange(changePass) {\n          return _this3.handleChange(changePass, \"changePass\");\n        },\n        control: /*#__PURE__*/React.createElement(Checkbox, {\n          checked: changePass,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 12\n          }\n        }),\n        label: t(\"user.changePass\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 10\n        }\n      })), changePass && this.state.id ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100\",\n        label: t(\"password\"),\n        onChange: this.handleChange,\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100\",\n        label: t(\"re_password\"),\n        onChange: this.handleChange,\n        name: \"confirmPassword\",\n        type: \"password\",\n        value: confirmPassword,\n        validators: [\"required\", \"isPasswordMatch\"],\n        errorMessages: [t(\"general.required\"), t(\"user.passwordMatchMessage\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }\n      }))) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 8\n        }\n      }, listRole && /*#__PURE__*/React.createElement(Autocomplete, {\n        multiple: true,\n        className: \"w-100\",\n        id: \"combo-box-demo\",\n        defaultValue: roles,\n        options: listRole,\n        getOptionSelected: function getOptionSelected(option, value) {\n          return option.id === value.id;\n        },\n        getOptionLabel: function getOptionLabel(option) {\n          return option.authority;\n        },\n        onChange: function onChange(event, value) {\n          _this3.selectRoles(value);\n        },\n        renderInput: function renderInput(params) {\n          return /*#__PURE__*/React.createElement(TextValidator, Object.assign({}, params, {\n            value: roles,\n            label: t(\"user.role\"),\n            fullWidth: true,\n            validators: [\"required\"],\n            errorMessages: [t(\"general.required\")],\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 12\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 10\n        }\n      })))), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        className: \"mr-16\",\n        startIcon: /*#__PURE__*/React.createElement(Block, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 20\n          }\n        }),\n        onClick: function onClick() {\n          return _this3.props.handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 8\n        }\n      }, t(\"general.cancel\")), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        startIcon: /*#__PURE__*/React.createElement(Save, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 20\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 8\n        }\n      }, t(\"general.save\"))))));\n    }\n  }]);\n\n  return UserEditorDialog;\n}(Component);\n\nexport default UserEditorDialog;","map":{"version":3,"sources":["D:/OceanTech/nimpe/Client-V2/src/app/views/User/UserEditorDialog.jsx"],"names":["Button","Checkbox","Dialog","DialogActions","DialogContent","DialogTitle","FormControl","FormControlLabel","Grid","InputLabel","MenuItem","Select","Block","Save","Autocomplete","React","Component","TextValidator","ValidatorForm","toast","getAllRoles","addUser","updateUser","ValidatePicker","UserEditorDialog","props","listGender","id","name","handleChange","event","source","persist","setState","isActive","target","checked","changePass","active","person","state","displayName","value","gender","handleFormSubmit","t","then","success","handleOKEditClose","catch","error","handleClose","selectRoles","rolesSelected","roles","handlePersonChange","e","handleTextChange","handleDateChange","date","birthDate","isAddNew","listRole","firstName","lastName","email","birthPlace","Date","confirmPassword","text","address","avatar","username","password","item","addValidationRule","data","open","map","readOnly","display","alignItems","option","authority","params"],"mappings":"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","sourcesContent":["import {\r\n\tButton,\r\n\tCheckbox,\r\n\tDialog,\r\n\tDialogActions,\r\n\tDialogContent,\r\n\tDialogTitle,\r\n\tFormControl,\r\n\tFormControlLabel,\r\n\tGrid,\r\n\tInputLabel,\r\n\tMenuItem,\r\n\tSelect,\r\n} from \"@material-ui/core\";\r\nimport { Block, Save } from \"@material-ui/icons\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport React, { Component } from \"react\";\r\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { getAllRoles, addUser, updateUser } from \"./UserService\";\r\nimport ValidatePicker from \"../Component/ValidateSelect/ValidatePicker\";\r\n\r\nclass UserEditorDialog extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tisAddNew: true,\r\n\t\t\tlistRole: [],\r\n\t\t\troles: [],\r\n\t\t\tactive: true,\r\n\t\t\tperson: {\r\n\t\t\t\tfirstName: \"\",\r\n\t\t\t\tlastName: \"\",\r\n\t\t\t\tdisplayName: \"\",\r\n\t\t\t\temail: \"\",\r\n\t\t\t\tbirthPlace: \"\",\r\n\t\t\t\tbirthDate: new Date(1990, 1, 1),\r\n\t\t\t},\r\n\t\t\tchangePass: true,\r\n\t\t\tconfirmPassword: \"\",\r\n\t\t\ttext: \"\",\r\n\t\t\taddress: \"\",\r\n\t\t\tavatar: \"\",\r\n\t\t\tusername: \"\",\r\n\t\t\tpassword: \"\",\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tif (this.props.item) {\r\n\t\t\tthis.setState({ ...this.props.item, isAddNew: false });\r\n\t\t}\r\n\r\n\t\t// custom rule will have name 'isPasswordMatch'\r\n\t\tValidatorForm.addValidationRule(\"isPasswordMatch\", value => {\r\n\t\t\tif (value !== this.state.password) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\r\n\t\tgetAllRoles().then(({ data }) => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tlistRole: data,\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tlistGender = [\r\n\t\t{ id: \"M\", name: \"Nam\" },\r\n\t\t{ id: \"F\", name: \"Nữ\" },\r\n\t\t{ id: \"U\", name: \"Không rõ\" },\r\n\t];\r\n\r\n\thandleChange = (event, source) => {\r\n\t\tevent.persist();\r\n\t\tif (source === \"switch\") {\r\n\t\t\tthis.setState({ isActive: event.target.checked });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (source === \"changePass\") {\r\n\t\t\tthis.setState({ changePass: event.target.checked });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (source === \"active\") {\r\n\t\t\tthis.setState({ active: event.target.checked });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (source === \"displayName\") {\r\n\t\t\tlet { person } = this.state;\r\n\t\t\tperson = person ? person : {};\r\n\t\t\tperson.displayName = event.target.value;\r\n\t\t\tthis.setState({ person: person });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (source === \"gender\") {\r\n\t\t\tlet { person } = this.state;\r\n\t\t\tperson = person ? person : {};\r\n\t\t\tperson.gender = event.target.value;\r\n\t\t\tthis.setState({ person: person });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\t[event.target.name]: event.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\thandleFormSubmit = () => {\r\n\t\tconst { t } = this.props;\r\n\t\tif (this.state.id) {\r\n\t\t\tupdateUser(this.state)\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\ttoast.success(t(\"general.updateSuccess\"));\r\n\t\t\t\t\tthis.props.handleOKEditClose();\r\n\t\t\t\t})\r\n\t\t\t\t.catch(() => {\r\n\t\t\t\t\ttoast.error(t(\"general.error\"));\r\n\t\t\t\t\tthis.props.handleClose();\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\taddUser(this.state)\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\ttoast.success(t(\"general.addSuccess\"));\r\n\t\t\t\t\tthis.props.handleOKEditClose();\r\n\t\t\t\t})\r\n\t\t\t\t.catch(() => {\r\n\t\t\t\t\ttoast.error(t(\"general.error\"));\r\n\t\t\t\t\tthis.props.handleClose();\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tselectRoles = rolesSelected => {\r\n\t\tthis.setState({ roles: rolesSelected }, function () {});\r\n\t};\r\n\r\n\thandlePersonChange = e => {\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\tperson: {\r\n\t\t\t\t...this.state.person,\r\n\t\t\t\t[e.target.name]: e.target.value,\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\thandleTextChange = e => {\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\thandleDateChange = date => {\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\tperson: {\r\n\t\t\t\t...this.state.person,\r\n\t\t\t\tbirthDate: date,\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tlet { open, handleClose, t } = this.props;\r\n\t\tlet {\r\n\t\t\tisAddNew,\r\n\t\t\tlistRole,\r\n\t\t\troles,\r\n\t\t\tactive,\r\n\t\t\tperson,\r\n\t\t\tusername,\r\n\t\t\tchangePass,\r\n\t\t\tpassword,\r\n\t\t\tconfirmPassword,\r\n\t\t} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<Dialog onClose={handleClose} open={open} maxWidth=\"sm\" fullWidth>\r\n\t\t\t\t<DialogTitle>\r\n\t\t\t\t\t{this.props.item ? t(\"general.update\") : t(\"general.add\")}\r\n\t\t\t\t\t<span className=\"ml-4\">{t(\"userTitle\")}</span>\r\n\t\t\t\t</DialogTitle>\r\n\r\n\t\t\t\t<ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\r\n\t\t\t\t\t<DialogContent dividers>\r\n\t\t\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t\t\t<Grid item sm={6}>\r\n\t\t\t\t\t\t\t\t<TextValidator\r\n\t\t\t\t\t\t\t\t\tlabel={t(\"user.firstName\")}\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-100\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.handlePersonChange}\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tname=\"firstName\"\r\n\t\t\t\t\t\t\t\t\tvalue={person?.firstName ?? \"\"}\r\n\t\t\t\t\t\t\t\t\tvalidators={[\"required\"]}\r\n\t\t\t\t\t\t\t\t\terrorMessages={[t(\"general.required\")]}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t<Grid item sm={6}>\r\n\t\t\t\t\t\t\t\t<TextValidator\r\n\t\t\t\t\t\t\t\t\tlabel={t(\"user.lastName\")}\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-100\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.handlePersonChange}\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tname=\"lastName\"\r\n\t\t\t\t\t\t\t\t\tvalue={person?.lastName ?? \"\"}\r\n\t\t\t\t\t\t\t\t\tvalidators={[\"required\"]}\r\n\t\t\t\t\t\t\t\t\terrorMessages={[t(\"general.required\")]}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Grid item sm={6} xs={12}>\r\n\t\t\t\t\t\t\t\t<TextValidator\r\n\t\t\t\t\t\t\t\t\tlabel={t(\"user.displayName\")}\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-100\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.handlePersonChange}\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tname=\"displayName\"\r\n\t\t\t\t\t\t\t\t\tvalue={person?.displayName ?? \"\"}\r\n\t\t\t\t\t\t\t\t\tvalidators={[\"required\"]}\r\n\t\t\t\t\t\t\t\t\terrorMessages={[t(\"general.required\")]}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Grid item sm={6}>\r\n\t\t\t\t\t\t\t\t<FormControl className=\"w-100\">\r\n\t\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"gender-simple\">\r\n\t\t\t\t\t\t\t\t\t\t{t(\"user.gender\")}\r\n\t\t\t\t\t\t\t\t\t</InputLabel>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tvalue={person?.gender ?? \"\"}\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.handlePersonChange}\r\n\t\t\t\t\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t\t\t\t\tname: \"gender\",\r\n\t\t\t\t\t\t\t\t\t\t\tid: \"gender-simple\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{this.listGender.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={item.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Grid item sm={6}>\r\n\t\t\t\t\t\t\t\t<TextValidator\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-100\"\r\n\t\t\t\t\t\t\t\t\tlabel={t(\"user.address\")}\r\n\t\t\t\t\t\t\t\t\tonChange={this.handlePersonChange}\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tname=\"birthPlace\"\r\n\t\t\t\t\t\t\t\t\tvalue={person?.birthPlace ?? \"\"}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Grid item sm={6} xs={12}>\r\n\t\t\t\t\t\t\t\t<ValidatePicker\r\n\t\t\t\t\t\t\t\t\tdisableToolbar\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-100\"\r\n\t\t\t\t\t\t\t\t\tautoOk\r\n\t\t\t\t\t\t\t\t\tlabel={t(\"user.birthdate\")}\r\n\t\t\t\t\t\t\t\t\tvariant=\"inline\"\r\n\t\t\t\t\t\t\t\t\tformat=\"dd/MM/yyyy\"\r\n\t\t\t\t\t\t\t\t\tid=\"date-picker-inline\"\r\n\t\t\t\t\t\t\t\t\tvalue={person?.birthDate || \"\"}\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleDateChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Grid item sm={6} xs={12}>\r\n\t\t\t\t\t\t\t\t<TextValidator\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-100\"\r\n\t\t\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\t\t\tonChange={this.handlePersonChange}\r\n\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\t\tvalue={person?.email ?? \"\"}\r\n\t\t\t\t\t\t\t\t\tvalidators={[\"required\", \"isEmail\"]}\r\n\t\t\t\t\t\t\t\t\terrorMessages={[\r\n\t\t\t\t\t\t\t\t\t\tt(\"general.required\"),\r\n\t\t\t\t\t\t\t\t\t\t\"Email không hợp lệ\",\r\n\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t<Grid item sm={6} xs={12}>\r\n\t\t\t\t\t\t\t\t<TextValidator\r\n\t\t\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\t\t\treadOnly: !isAddNew,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-100\"\r\n\t\t\t\t\t\t\t\t\tlabel={t(\"user.username\")}\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t\t\t\t\tvalidators={[\"required\"]}\r\n\t\t\t\t\t\t\t\t\terrorMessages={[t(\"general.required\")]}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t{isAddNew && (\r\n\t\t\t\t\t\t\t\t<Grid item sm={6} xs={12}>\r\n\t\t\t\t\t\t\t\t\t<TextValidator\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"w-100\"\r\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"new-password\"\r\n\t\t\t\t\t\t\t\t\t\tlabel={t(\"password\")}\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\t\tvalidators={[\"required\"]}\r\n\t\t\t\t\t\t\t\t\t\terrorMessages={[t(\"general.required\")]}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\t\talignItems: \"flex-end\",\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\tvalue={active}\r\n\t\t\t\t\t\t\t\t\tname=\"active\"\r\n\t\t\t\t\t\t\t\t\tonChange={active =>\r\n\t\t\t\t\t\t\t\t\t\tthis.handleChange(active, \"active\")\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcontrol={<Checkbox checked={active} />}\r\n\t\t\t\t\t\t\t\t\tlabel={t(\"user.active\")}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t{this.state.id && (\r\n\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\tvalue={changePass}\r\n\t\t\t\t\t\t\t\t\t\tname=\"changePass\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={changePass =>\r\n\t\t\t\t\t\t\t\t\t\t\tthis.handleChange(\r\n\t\t\t\t\t\t\t\t\t\t\t\tchangePass,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"changePass\"\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox checked={changePass} />\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tlabel={t(\"user.changePass\")}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t{changePass && this.state.id ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Grid item sm={6} xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<TextValidator\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"w-100\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabel={t(\"password\")}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\t\t\tvalidators={[\"required\"]}\r\n\t\t\t\t\t\t\t\t\t\t\terrorMessages={[\r\n\t\t\t\t\t\t\t\t\t\t\t\tt(\"general.required\"),\r\n\t\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item sm={6} xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<TextValidator\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"w-100\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabel={t(\"re_password\")}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"confirmPassword\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\t\t\t\t\t\t\tvalidators={[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"required\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"isPasswordMatch\",\r\n\t\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t\t\terrorMessages={[\r\n\t\t\t\t\t\t\t\t\t\t\t\tt(\"general.required\"),\r\n\t\t\t\t\t\t\t\t\t\t\t\tt(\"user.passwordMatchMessage\"),\r\n\t\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<div></div>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t<Grid item sm={12} xs={12}>\r\n\t\t\t\t\t\t\t\t{listRole && (\r\n\t\t\t\t\t\t\t\t\t<Autocomplete\r\n\t\t\t\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"w-100\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"combo-box-demo\"\r\n\t\t\t\t\t\t\t\t\t\tdefaultValue={roles}\r\n\t\t\t\t\t\t\t\t\t\toptions={listRole}\r\n\t\t\t\t\t\t\t\t\t\tgetOptionSelected={(option, value) =>\r\n\t\t\t\t\t\t\t\t\t\t\toption.id === value.id\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tgetOptionLabel={option =>\r\n\t\t\t\t\t\t\t\t\t\t\toption.authority\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(event, value) => {\r\n\t\t\t\t\t\t\t\t\t\t\tthis.selectRoles(value);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\trenderInput={params => (\r\n\t\t\t\t\t\t\t\t\t\t\t<TextValidator\r\n\t\t\t\t\t\t\t\t\t\t\t\t{...params}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={roles}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel={t(\"user.role\")}\r\n\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalidators={[\"required\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorMessages={[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tt(\"general.required\"),\r\n\t\t\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</DialogContent>\r\n\r\n\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t<div className=\"flex flex-middle\">\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\tclassName=\"mr-16\"\r\n\t\t\t\t\t\t\t\tstartIcon={<Block />}\r\n\t\t\t\t\t\t\t\tonClick={() => this.props.handleClose()}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{t(\"general.cancel\")}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tstartIcon={<Save />}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{t(\"general.save\")}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</DialogActions>\r\n\t\t\t\t</ValidatorForm>\r\n\t\t\t</Dialog>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default UserEditorDialog;\r\n"]},"metadata":{},"sourceType":"module"}