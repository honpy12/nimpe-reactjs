{"ast":null,"code":"import _classCallCheck from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\src\\\\app\\\\views\\\\CountNotificationChart\\\\CountNotification.jsx\";\nimport { Card, CardContent, Grid } from \"@material-ui/core\";\nimport { Today } from \"@material-ui/icons\";\nimport \"date-fns\";\nimport { Breadcrumb } from \"egret\";\nimport React, { Component } from \"react\";\nimport DatePicker from \"react-date-picker\";\nimport { Helmet } from \"react-helmet\";\nimport \"../dashboard/style.css\";\nimport { getCountNotifyByDay, getCountNotifyByMonth } from \"./CountNofiticationService\";\nimport CartCount from \"./CountNotificationChart\";\n\nvar CountNotification = /*#__PURE__*/function (_Component) {\n  _inherits(CountNotification, _Component);\n\n  var _super = _createSuper(CountNotification);\n\n  function CountNotification(props) {\n    var _this;\n\n    _classCallCheck(this, CountNotification);\n\n    _this = _super.call(this, props);\n\n    _this.updatePageData = function () {\n      var typeView = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"month\";\n      var d = new Date(_this.state.times);\n\n      if (typeView === \"month\") {\n        getCountNotifyByDay(d.getMonth() + 1, d.getFullYear()).then(function (_ref) {\n          var data = _ref.data;\n\n          _this.setState({\n            data: data\n          });\n        });\n      } else {\n        getCountNotifyByMonth(d.getFullYear()).then(function (_ref2) {\n          var data = _ref2.data;\n          return _this.setState({\n            data: data\n          });\n        });\n      }\n    };\n\n    _this.onHandleDateChange = function (date) {\n      _this.setState({\n        times: date,\n        series: null,\n        categories: null,\n        data: []\n      }, function () {\n        _this.updatePageData();\n      });\n    };\n\n    _this.state = {\n      data: [],\n      keyDate: Date.now(),\n      times: new Date()\n    };\n    return _this;\n  }\n\n  _createClass(CountNotification, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updatePageData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          times = _this$state.times,\n          data = _this$state.data;\n      var t = this.props.t;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"analytics m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(Helmet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 6\n        }\n      }, t(\"manage.countNotification\"), \" |\", \" \", t(\"manage.countNotification\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        routeSegments: [{\n          name: t(\"manage.countNotification\")\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 6\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: \"600\",\n          fontSize: \"20px\",\n          padding: \"15px\",\n          paddingLeft: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 8\n        }\n      }, t(\"Dashboard.timeToResult\"), \" : \", t(\"month\")), /*#__PURE__*/React.createElement(DatePicker, {\n        onChange: this.onHandleDateChange,\n        className: \"ml-8\",\n        value: times,\n        locale: \"vi-VN\",\n        format: \"MM/yyyy\",\n        maxDetail: \"year\",\n        closeCalendar: true,\n        clearIcon: null,\n        calendarClassName: \"month-picker\",\n        calendarIcon: /*#__PURE__*/React.createElement(Today, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 23\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 8\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        elevation: 2,\n        className: \"h-100 p-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 7\n        }\n      }, data && data.length > 0 && /*#__PURE__*/React.createElement(CartCount, {\n        t: t,\n        categories: data.map(function (item, index) {\n          return index + 1;\n        }),\n        series: data,\n        updatePageData: this.updatePageData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }\n      })))));\n    }\n  }]);\n\n  return CountNotification;\n}(Component);\n\nexport default CountNotification;","map":{"version":3,"sources":["D:/OceanTech/nimpe/Client-V2/src/app/views/CountNotificationChart/CountNotification.jsx"],"names":["Card","CardContent","Grid","Today","Breadcrumb","React","Component","DatePicker","Helmet","getCountNotifyByDay","getCountNotifyByMonth","CartCount","CountNotification","props","updatePageData","typeView","d","Date","state","times","getMonth","getFullYear","then","data","setState","onHandleDateChange","date","series","categories","keyDate","now","t","name","fontWeight","fontSize","padding","paddingLeft","length","map","item","index"],"mappings":"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","sourcesContent":["import { Card, CardContent, Grid } from \"@material-ui/core\";\r\nimport { Today } from \"@material-ui/icons\";\r\nimport \"date-fns\";\r\nimport { Breadcrumb } from \"egret\";\r\nimport React, { Component } from \"react\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport \"../dashboard/style.css\";\r\nimport {\r\n\tgetCountNotifyByDay,\r\n\tgetCountNotifyByMonth,\r\n} from \"./CountNofiticationService\";\r\nimport CartCount from \"./CountNotificationChart\";\r\n\r\nclass CountNotification extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tdata: [],\r\n\t\t\tkeyDate: Date.now(),\r\n\t\t\ttimes: new Date(),\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.updatePageData();\r\n\t}\r\n\r\n\tupdatePageData = (typeView = \"month\") => {\r\n\t\tvar d = new Date(this.state.times);\r\n\t\tif (typeView === \"month\") {\r\n\t\t\tgetCountNotifyByDay(d.getMonth() + 1, d.getFullYear()).then(\r\n\t\t\t\t({ data }) => {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tdata,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tgetCountNotifyByMonth(d.getFullYear()).then(({ data }) =>\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tdata,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tonHandleDateChange = date => {\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\ttimes: date,\r\n\t\t\t\tseries: null,\r\n\t\t\t\tcategories: null,\r\n\t\t\t\tdata: [],\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tthis.updatePageData();\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\trender() {\r\n\t\tlet { times, data } = this.state;\r\n\r\n\t\tlet { t } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"analytics m-sm-30\">\r\n\t\t\t\t<Helmet>\r\n\t\t\t\t\t<title>\r\n\t\t\t\t\t\t{t(\"manage.countNotification\")} |{\" \"}\r\n\t\t\t\t\t\t{t(\"manage.countNotification\")}\r\n\t\t\t\t\t</title>\r\n\t\t\t\t</Helmet>\r\n\r\n\t\t\t\t<div className=\"mb-sm-30\">\r\n\t\t\t\t\t<Breadcrumb\r\n\t\t\t\t\t\trouteSegments={[\r\n\t\t\t\t\t\t\t{ name: t(\"manage.countNotification\") },\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t<Grid item md={12}>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tfontWeight: \"600\",\r\n\t\t\t\t\t\t\t\tfontSize: \"20px\",\r\n\t\t\t\t\t\t\t\tpadding: \"15px\",\r\n\t\t\t\t\t\t\t\tpaddingLeft: 0,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t{t(\"Dashboard.timeToResult\")} : {t(\"month\")}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\tonChange={this.onHandleDateChange}\r\n\t\t\t\t\t\t\t\tclassName=\"ml-8\"\r\n\t\t\t\t\t\t\t\tvalue={times}\r\n\t\t\t\t\t\t\t\tlocale=\"vi-VN\"\r\n\t\t\t\t\t\t\t\tformat=\"MM/yyyy\"\r\n\t\t\t\t\t\t\t\tmaxDetail=\"year\"\r\n\t\t\t\t\t\t\t\tcloseCalendar\r\n\t\t\t\t\t\t\t\tclearIcon={null}\r\n\t\t\t\t\t\t\t\tcalendarClassName=\"month-picker\"\r\n\t\t\t\t\t\t\t\tcalendarIcon={<Today />}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item sm={12} md={12}>\r\n\t\t\t\t\t\t<Card elevation={2} className=\"h-100 p-20\">\r\n\t\t\t\t\t\t\t{data && data.length > 0 && (\r\n\t\t\t\t\t\t\t\t<CartCount\r\n\t\t\t\t\t\t\t\t\tt={t}\r\n\t\t\t\t\t\t\t\t\tcategories={data.map(\r\n\t\t\t\t\t\t\t\t\t\t(item, index) => index + 1\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\tseries={data}\r\n\t\t\t\t\t\t\t\t\tupdatePageData={this.updatePageData}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CountNotification;\r\n"]},"metadata":{},"sourceType":"module"}