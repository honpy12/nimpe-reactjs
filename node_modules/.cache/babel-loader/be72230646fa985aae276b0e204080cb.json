{"ast":null,"code":"import _defineProperty from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\src\\\\app\\\\views\\\\HealthOrganizationUnit\\\\HealthOrganizationUnitEditorDialog.jsx\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, MenuItem, Paper } from \"@material-ui/core\";\nimport BlockIcon from \"@material-ui/icons/Block\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport React, { Component } from \"react\";\nimport Draggable from \"react-draggable\";\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport SelectParentAdministrative from \"../AdministrativeUnit/SelectParentAdministrative\";\nimport ValidateSelect from \"../Component/ValidateSelect/ValidateSelect\";\nimport { addHealOrganization, updateHealOrganization } from \"./HealthOrganizationUnitService\";\nimport SelectParentPopup from \"./SelectParentPopup\";\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }\n  })));\n}\n\nfunction requiredLabel(title) {\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }\n  }, title, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\",\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }\n  }, \"*\"));\n}\n\nvar HealthOrganizationUnitEditorDialog = /*#__PURE__*/function (_Component) {\n  _inherits(HealthOrganizationUnitEditorDialog, _Component);\n\n  var _super = _createSuper(HealthOrganizationUnitEditorDialog);\n\n  function HealthOrganizationUnitEditorDialog(props) {\n    var _this;\n\n    _classCallCheck(this, HealthOrganizationUnitEditorDialog);\n\n    _this = _super.call(this, props);\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        healOrganization: _objectSpread(_objectSpread({}, _this.state.healOrganization), {}, _defineProperty({}, event.target.name, event.target.value))\n      });\n    };\n\n    _this.openParentPopup = function (type) {\n      type === \"healOrganizationParent\" ? _this.setState({\n        showHealthOrganizationParent: true\n      }) : _this.setState({\n        showAdministrativeUnitParent: true\n      });\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        showHealthOrganizationParent: false,\n        showAdministrativeUnitParent: false\n      });\n    };\n\n    _this.handleSelectAdministrative = function (item) {\n      _this.setState({\n        healOrganization: _objectSpread(_objectSpread({}, _this.state.healOrganization), {}, {\n          adminUnit: item\n        })\n      });\n\n      _this.handleDialogClose();\n    };\n\n    _this.handleSelectParent = function (itemParent) {\n      _this.setState({\n        healOrganization: _objectSpread(_objectSpread({}, _this.state.healOrganization), {}, {\n          healthOrganizationParent: itemParent\n        })\n      });\n\n      _this.handleDialogClose();\n    };\n\n    _this.handleFormSubmit = function () {\n      var t = _this.props.t;\n      var id = _this.state.healOrganization.id;\n\n      if (id) {\n        updateHealOrganization(_this.state.healOrganization).then(function () {\n          toast.success(t(\"general.updateSuccess\"));\n\n          _this.props.handleClose();\n        }).catch(function () {\n          toast.error(t(\"general.error\"));\n        });\n      } else {\n        addHealOrganization(_this.state.healOrganization).then(function () {\n          toast.success(t(\"general.addSuccess\"));\n\n          _this.props.handleClose();\n        }).catch(function () {\n          toast.error(t(\"general.error\"));\n        });\n      }\n    };\n\n    _this.state = {\n      healOrganization: {\n        code: \"\",\n        name: \"\",\n        path: \"\",\n        orgType: \"\",\n        language: _this.props.i18n.language === \"vi\" ? 1 : 0,\n        healthOrganizationParent: null,\n        adminUnit: null,\n        address: \"\",\n        description: \"\"\n      },\n      showHealthOrganizationParent: null,\n      showAdministrativeUnitParent: null\n    };\n    return _this;\n  }\n\n  _createClass(HealthOrganizationUnitEditorDialog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.item) {\n        this.setState({\n          healOrganization: this.props.item\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n          _this$state$healOrgan2;\n\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          t = _this$props.t;\n      var _this$state$healOrgan = this.state.healOrganization,\n          id = _this$state$healOrgan.id,\n          code = _this$state$healOrgan.code,\n          name = _this$state$healOrgan.name,\n          orgType = _this$state$healOrgan.orgType,\n          healthOrganizationParent = _this$state$healOrgan.healthOrganizationParent,\n          adminUnit = _this$state$healOrgan.adminUnit,\n          address = _this$state$healOrgan.address,\n          description = _this$state$healOrgan.description;\n      var _this$state = this.state,\n          showHealthOrganizationParent = _this$state.showHealthOrganizationParent,\n          showAdministrativeUnitParent = _this$state.showAdministrativeUnitParent;\n      var listOrganizationType = [{\n        label: t(\"healthOrganization.reviewUnit\"),\n        value: 1\n      }, {\n        label: t(\"healthOrganization.screeningUnit\"),\n        value: 2\n      }, {\n        label: t(\"healthOrganization.managementUnit\"),\n        value: 3\n      }, {\n        label: t(\"healthOrganization.affirmationUnit\"),\n        value: 4\n      }, {\n        label: t(\"healthOrganization.treatmentUnit\"),\n        value: 5\n      }];\n      return /*#__PURE__*/React.createElement(Dialog, {\n        onClose: handleClose,\n        open: open,\n        PaperComponent: PaperComponent,\n        fullWidth: true,\n        maxWidth: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: \"move\"\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 5\n        }\n      }, (id ? t(\"button.edit\") : t(\"button.add\")) + \" \" + t(\"healthOrganization.title\")), /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(DialogContent, {\n        dividers: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        className: \"mb-16\",\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 4,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 mb-16\",\n        label: t(\"healthOrganization.code\"),\n        name: \"code\",\n        size: \"small\",\n        value: code,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 8,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 mb-16\",\n        label: requiredLabel(t(\"healthOrganization.name\")),\n        name: \"name\",\n        size: \"small\",\n        value: name,\n        onChange: this.handleChange,\n        validators: [\"required\"],\n        errorMessages: [\"\".concat(t(\"general.required\"))],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(ValidateSelect, {\n        label: t(\"healthOrganization.type\"),\n        name: \"orgType\",\n        value: orgType,\n        onChange: this.handleChange,\n        className: \"w-100 mb-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 9\n        }\n      }, listOrganizationType === null || listOrganizationType === void 0 ? void 0 : listOrganizationType.map(function (p) {\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          key: p.label,\n          value: p.value,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 11\n          }\n        }, p.label);\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 8,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"small\",\n        style: {\n          position: \"absolute\",\n          cursor: \"pointer\",\n          right: \"24px\",\n          zIndex: \"9999\",\n          marginTop: \"12px\"\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.openParentPopup();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 9\n        }\n      }, t(\"Select\")), /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 mb-16\",\n        size: \"small\",\n        fullWidth: true,\n        InputProps: {\n          readOnly: true\n        },\n        label: t(\"healthOrganization.administrativeUnits\"),\n        value: adminUnit !== null ? adminUnit === null || adminUnit === void 0 ? void 0 : adminUnit.name : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 9\n        }\n      }), showAdministrativeUnitParent && /*#__PURE__*/React.createElement(SelectParentAdministrative, {\n        open: showAdministrativeUnitParent,\n        handleSelect: this.handleSelectAdministrative,\n        selectedItem: adminUnit !== null ? adminUnit : {},\n        handleClose: this.handleDialogClose,\n        t: t,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 10\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"small\",\n        style: {\n          position: \"absolute\",\n          cursor: \"pointer\",\n          right: \"24px\",\n          zIndex: \"9999\",\n          marginTop: \"12px\"\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.openParentPopup(\"healOrganizationParent\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 9\n        }\n      }, t(\"Select\")), /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 mb-16\",\n        size: \"small\",\n        fullWidth: true,\n        InputProps: {\n          readOnly: true\n        },\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 12\n          }\n        }), t(\"healthOrganization.managementUnit\")),\n        value: healthOrganizationParent !== null ? healthOrganizationParent === null || healthOrganizationParent === void 0 ? void 0 : healthOrganizationParent.name : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 9\n        }\n      }), showHealthOrganizationParent && /*#__PURE__*/React.createElement(SelectParentPopup, {\n        open: showHealthOrganizationParent,\n        handleSelect: this.handleSelectParent,\n        selectedItem: healthOrganizationParent !== null ? healthOrganizationParent : {},\n        handleClose: this.handleDialogClose,\n        t: t,\n        itemId: (_this$state$healOrgan2 = this.state.healOrganization) === null || _this$state$healOrgan2 === void 0 ? void 0 : _this$state$healOrgan2.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 10\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 mb-16\",\n        label: requiredLabel(t(\"healthOrganization.address\")),\n        name: \"address\",\n        size: \"small\",\n        value: address !== null ? address : \"\",\n        onChange: this.handleChange,\n        validators: [\"required\"],\n        errorMessages: [\"\".concat(t(\"general.required\"))],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 mb-16\",\n        size: \"small\",\n        name: \"description\",\n        fullWidth: true,\n        onChange: this.handleChange,\n        label: t(\"healthOrganization.description\"),\n        value: description !== null ? description : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 9\n        }\n      })))), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        startIcon: /*#__PURE__*/React.createElement(BlockIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 20\n          }\n        }),\n        variant: \"contained\",\n        className: \"mr-12\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.props.handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 8\n        }\n      }, t(\"general.cancel\")), /*#__PURE__*/React.createElement(Button, {\n        startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 20\n          }\n        }),\n        className: \"mr-8\",\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 8\n        }\n      }, t(\"general.save\"))))));\n    }\n  }]);\n\n  return HealthOrganizationUnitEditorDialog;\n}(Component);\n\nexport default HealthOrganizationUnitEditorDialog;","map":{"version":3,"sources":["D:/OceanTech/nimpe/Client-V2/src/app/views/HealthOrganizationUnit/HealthOrganizationUnitEditorDialog.jsx"],"names":["Button","Dialog","DialogActions","DialogContent","DialogTitle","Grid","MenuItem","Paper","BlockIcon","SaveIcon","React","Component","Draggable","TextValidator","ValidatorForm","toast","SelectParentAdministrative","ValidateSelect","addHealOrganization","updateHealOrganization","SelectParentPopup","PaperComponent","props","requiredLabel","title","color","fontWeight","HealthOrganizationUnitEditorDialog","handleChange","event","setState","healOrganization","state","target","name","value","openParentPopup","type","showHealthOrganizationParent","showAdministrativeUnitParent","handleDialogClose","handleSelectAdministrative","item","adminUnit","handleSelectParent","itemParent","healthOrganizationParent","handleFormSubmit","t","id","then","success","handleClose","catch","error","code","path","orgType","language","i18n","address","description","open","listOrganizationType","label","cursor","map","p","position","right","zIndex","marginTop","readOnly"],"mappings":"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","sourcesContent":["import {\n\tButton,\n\tDialog,\n\tDialogActions,\n\tDialogContent,\n\tDialogTitle,\n\tGrid,\n\tMenuItem,\n\tPaper,\n} from \"@material-ui/core\";\nimport BlockIcon from \"@material-ui/icons/Block\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport React, { Component } from \"react\";\nimport Draggable from \"react-draggable\";\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport SelectParentAdministrative from \"../AdministrativeUnit/SelectParentAdministrative\";\nimport ValidateSelect from \"../Component/ValidateSelect/ValidateSelect\";\nimport {\n\taddHealOrganization,\n\tupdateHealOrganization,\n} from \"./HealthOrganizationUnitService\";\nimport SelectParentPopup from \"./SelectParentPopup\";\n\nfunction PaperComponent(props) {\n\treturn (\n\t\t<Draggable\n\t\t\thandle=\"#draggable-dialog-title\"\n\t\t\tcancel={'[class*=\"MuiDialogContent-root\"]'}\n\t\t>\n\t\t\t<Paper {...props} />\n\t\t</Draggable>\n\t);\n}\n\nfunction requiredLabel(title) {\n\treturn (\n\t\t<span>\n\t\t\t{title} <span style={{ color: \"red\", fontWeight: \"bold\" }}>*</span>\n\t\t</span>\n\t);\n}\n\nclass HealthOrganizationUnitEditorDialog extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thealOrganization: {\n\t\t\t\tcode: \"\",\n\t\t\t\tname: \"\",\n\t\t\t\tpath: \"\",\n\t\t\t\torgType: \"\",\n\t\t\t\tlanguage: this.props.i18n.language === \"vi\" ? 1 : 0,\n\t\t\t\thealthOrganizationParent: null,\n\t\t\t\tadminUnit: null,\n\t\t\t\taddress: \"\",\n\t\t\t\tdescription: \"\",\n\t\t\t},\n\t\t\tshowHealthOrganizationParent: null,\n\t\t\tshowAdministrativeUnitParent: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.item) {\n\t\t\tthis.setState({\n\t\t\t\thealOrganization: this.props.item,\n\t\t\t});\n\t\t}\n\t}\n\n\thandleChange = event => {\n\t\tthis.setState({\n\t\t\thealOrganization: {\n\t\t\t\t...this.state.healOrganization,\n\t\t\t\t[event.target.name]: event.target.value,\n\t\t\t},\n\t\t});\n\t};\n\n\topenParentPopup = type => {\n\t\ttype === \"healOrganizationParent\"\n\t\t\t? this.setState({ showHealthOrganizationParent: true })\n\t\t\t: this.setState({\n\t\t\t\t\tshowAdministrativeUnitParent: true,\n\t\t\t  });\n\t};\n\n\thandleDialogClose = () => {\n\t\tthis.setState({\n\t\t\tshowHealthOrganizationParent: false,\n\t\t\tshowAdministrativeUnitParent: false,\n\t\t});\n\t};\n\n\thandleSelectAdministrative = item => {\n\t\tthis.setState({\n\t\t\thealOrganization: {\n\t\t\t\t...this.state.healOrganization,\n\t\t\t\tadminUnit: item,\n\t\t\t},\n\t\t});\n\t\tthis.handleDialogClose();\n\t};\n\n\thandleSelectParent = itemParent => {\n\t\tthis.setState({\n\t\t\thealOrganization: {\n\t\t\t\t...this.state.healOrganization,\n\t\t\t\thealthOrganizationParent: itemParent,\n\t\t\t},\n\t\t});\n\t\tthis.handleDialogClose();\n\t};\n\n\thandleFormSubmit = () => {\n\t\tconst { t } = this.props;\n\t\tconst { id } = this.state.healOrganization;\n\n\t\tif (id) {\n\t\t\tupdateHealOrganization(this.state.healOrganization)\n\t\t\t\t.then(() => {\n\t\t\t\t\ttoast.success(t(\"general.updateSuccess\"));\n\t\t\t\t\tthis.props.handleClose();\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\ttoast.error(t(\"general.error\"));\n\t\t\t\t});\n\t\t} else {\n\t\t\taddHealOrganization(this.state.healOrganization)\n\t\t\t\t.then(() => {\n\t\t\t\t\ttoast.success(t(\"general.addSuccess\"));\n\t\t\t\t\tthis.props.handleClose();\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\ttoast.error(t(\"general.error\"));\n\t\t\t\t});\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { open, handleClose, t } = this.props;\n\t\tconst {\n\t\t\tid,\n\t\t\tcode,\n\t\t\tname,\n\t\t\torgType,\n\t\t\thealthOrganizationParent,\n\t\t\tadminUnit,\n\t\t\taddress,\n\t\t\tdescription,\n\t\t} = this.state.healOrganization;\n\t\tconst { showHealthOrganizationParent, showAdministrativeUnitParent } =\n\t\t\tthis.state;\n\n\t\tconst listOrganizationType = [\n\t\t\t{\n\t\t\t\tlabel: t(\"healthOrganization.reviewUnit\"),\n\t\t\t\tvalue: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: t(\"healthOrganization.screeningUnit\"),\n\t\t\t\tvalue: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: t(\"healthOrganization.managementUnit\"),\n\t\t\t\tvalue: 3,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: t(\"healthOrganization.affirmationUnit\"),\n\t\t\t\tvalue: 4,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: t(\"healthOrganization.treatmentUnit\"),\n\t\t\t\tvalue: 5,\n\t\t\t},\n\t\t];\n\n\t\treturn (\n\t\t\t<Dialog\n\t\t\t\tonClose={handleClose}\n\t\t\t\topen={open}\n\t\t\t\tPaperComponent={PaperComponent}\n\t\t\t\tfullWidth\n\t\t\t\tmaxWidth=\"sm\"\n\t\t\t>\n\t\t\t\t<DialogTitle\n\t\t\t\t\tstyle={{ cursor: \"move\" }}\n\t\t\t\t\tid=\"draggable-dialog-title\"\n\t\t\t\t>\n\t\t\t\t\t{(id ? t(\"button.edit\") : t(\"button.add\")) +\n\t\t\t\t\t\t\" \" +\n\t\t\t\t\t\tt(\"healthOrganization.title\")}\n\t\t\t\t</DialogTitle>\n\n\t\t\t\t<ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\n\t\t\t\t\t<DialogContent dividers>\n\t\t\t\t\t\t<Grid className=\"mb-16\" container spacing={2}>\n\t\t\t\t\t\t\t<Grid item sm={4} xs={12}>\n\t\t\t\t\t\t\t\t<TextValidator\n\t\t\t\t\t\t\t\t\tclassName=\"w-100 mb-16\"\n\t\t\t\t\t\t\t\t\tlabel={t(\"healthOrganization.code\")}\n\t\t\t\t\t\t\t\t\tname=\"code\"\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\tvalue={code}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item sm={8} xs={12}>\n\t\t\t\t\t\t\t\t<TextValidator\n\t\t\t\t\t\t\t\t\tclassName=\"w-100 mb-16\"\n\t\t\t\t\t\t\t\t\tlabel={requiredLabel(\n\t\t\t\t\t\t\t\t\t\tt(\"healthOrganization.name\")\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\tvalidators={[\"required\"]}\n\t\t\t\t\t\t\t\t\terrorMessages={[`${t(\"general.required\")}`]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item sm={4}>\n\t\t\t\t\t\t\t\t<ValidateSelect\n\t\t\t\t\t\t\t\t\tlabel={t(\"healthOrganization.type\")}\n\t\t\t\t\t\t\t\t\tname=\"orgType\"\n\t\t\t\t\t\t\t\t\tvalue={orgType}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\tclassName=\"w-100 mb-16\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{listOrganizationType?.map(p => (\n\t\t\t\t\t\t\t\t\t\t<MenuItem key={p.label} value={p.value}>\n\t\t\t\t\t\t\t\t\t\t\t{p.label}\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</ValidateSelect>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item sm={8} xs={12}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\t\t\t\t\t\tright: \"24px\",\n\t\t\t\t\t\t\t\t\t\tzIndex: \"9999\",\n\t\t\t\t\t\t\t\t\t\tmarginTop: \"12px\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tonClick={() => this.openParentPopup()}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{t(\"Select\")}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<TextValidator\n\t\t\t\t\t\t\t\t\tclassName=\"w-100 mb-16\"\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\t\treadOnly: true,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tlabel={t(\n\t\t\t\t\t\t\t\t\t\t\"healthOrganization.administrativeUnits\"\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t\tadminUnit !== null\n\t\t\t\t\t\t\t\t\t\t\t? adminUnit?.name\n\t\t\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t{showAdministrativeUnitParent && (\n\t\t\t\t\t\t\t\t\t<SelectParentAdministrative\n\t\t\t\t\t\t\t\t\t\topen={showAdministrativeUnitParent}\n\t\t\t\t\t\t\t\t\t\thandleSelect={\n\t\t\t\t\t\t\t\t\t\t\tthis.handleSelectAdministrative\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tselectedItem={\n\t\t\t\t\t\t\t\t\t\t\tadminUnit !== null ? adminUnit : {}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\thandleClose={this.handleDialogClose}\n\t\t\t\t\t\t\t\t\t\tt={t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t<Grid item sm={12} xs={12}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\t\t\t\tcursor: \"pointer\",\n\t\t\t\t\t\t\t\t\t\tright: \"24px\",\n\t\t\t\t\t\t\t\t\t\tzIndex: \"9999\",\n\t\t\t\t\t\t\t\t\t\tmarginTop: \"12px\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\tthis.openParentPopup(\n\t\t\t\t\t\t\t\t\t\t\t\"healOrganizationParent\"\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{t(\"Select\")}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<TextValidator\n\t\t\t\t\t\t\t\t\tclassName=\"w-100 mb-16\"\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\t\treadOnly: true,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ color: \"red\" }}\n\t\t\t\t\t\t\t\t\t\t\t></span>\n\t\t\t\t\t\t\t\t\t\t\t{t(\n\t\t\t\t\t\t\t\t\t\t\t\t\"healthOrganization.managementUnit\"\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t\thealthOrganizationParent !== null\n\t\t\t\t\t\t\t\t\t\t\t? healthOrganizationParent?.name\n\t\t\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t{showHealthOrganizationParent && (\n\t\t\t\t\t\t\t\t\t<SelectParentPopup\n\t\t\t\t\t\t\t\t\t\topen={showHealthOrganizationParent}\n\t\t\t\t\t\t\t\t\t\thandleSelect={this.handleSelectParent}\n\t\t\t\t\t\t\t\t\t\tselectedItem={\n\t\t\t\t\t\t\t\t\t\t\thealthOrganizationParent !== null\n\t\t\t\t\t\t\t\t\t\t\t\t? healthOrganizationParent\n\t\t\t\t\t\t\t\t\t\t\t\t: {}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\thandleClose={this.handleDialogClose}\n\t\t\t\t\t\t\t\t\t\tt={t}\n\t\t\t\t\t\t\t\t\t\titemId={this.state.healOrganization?.id}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item sm={12} xs={12}>\n\t\t\t\t\t\t\t\t<TextValidator\n\t\t\t\t\t\t\t\t\tclassName=\"w-100 mb-16\"\n\t\t\t\t\t\t\t\t\tlabel={requiredLabel(\n\t\t\t\t\t\t\t\t\t\tt(\"healthOrganization.address\")\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\tname=\"address\"\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\tvalue={address !== null ? address : \"\"}\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\tvalidators={[\"required\"]}\n\t\t\t\t\t\t\t\t\terrorMessages={[`${t(\"general.required\")}`]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item sm={12} xs={12}>\n\t\t\t\t\t\t\t\t<TextValidator\n\t\t\t\t\t\t\t\t\tclassName=\"w-100 mb-16\"\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\tlabel={t(\"healthOrganization.description\")}\n\t\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t\tdescription !== null ? description : \"\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</DialogContent>\n\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<div className=\"flex flex-middle\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tstartIcon={<BlockIcon />}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tclassName=\"mr-12\"\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\tonClick={() => this.props.handleClose()}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{t(\"general.cancel\")}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tstartIcon={<SaveIcon />}\n\t\t\t\t\t\t\t\tclassName=\"mr-8\"\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{t(\"general.save\")}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</DialogActions>\n\t\t\t\t</ValidatorForm>\n\t\t\t</Dialog>\n\t\t);\n\t}\n}\n\nexport default HealthOrganizationUnitEditorDialog;\n"]},"metadata":{},"sourceType":"module"}