{"ast":null,"code":"import _toConsumableArray from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\OceanTech\\\\nimpe\\\\Client-V2\\\\src\\\\app\\\\views\\\\dashboard\\\\MultiColumResults.jsx\";\nimport Highcharts from \"highcharts\";\nimport moment from \"moment\";\nimport React, { Component } from \"react\";\nimport { getDashboardAnalytics } from \"./DashboardService\";\n\nvar MultiColumResults = /*#__PURE__*/function (_Component) {\n  _inherits(MultiColumResults, _Component);\n\n  var _super = _createSuper(MultiColumResults);\n\n  function MultiColumResults(props) {\n    var _this;\n\n    _classCallCheck(this, MultiColumResults);\n\n    _this = _super.call(this, props);\n\n    _this.updatePageData = function () {\n      var searchObj = {};\n      searchObj.year = moment(_this.state.year).format(\"yyyy\");\n      searchObj.filterType = _this.state.typeOption.type;\n      getDashboardAnalytics(searchObj).then(function (_ref) {\n        var data = _ref.data;\n\n        var listDoashboard = _toConsumableArray(data);\n\n        var totalPatient = [];\n        var totalPatientIncident = [];\n        var totalImportant = [];\n        var totalChange = [];\n        listDoashboard.forEach(function (element) {\n          totalPatient.push(element.totalPatient);\n          totalPatientIncident.push(element.totalPatientIncident);\n          totalImportant.push(element.totalImportant);\n          totalChange.push(element.totalChange);\n        });\n        var series = [{\n          name: \"Tổng số biến cố bất lợi\",\n          data: totalPatient,\n          color: \"red\"\n        }, {\n          name: \"Số lượng biến cố nghiêm trọng\",\n          data: totalPatientIncident,\n          color: \"blue\"\n        }, {\n          name: \"Số lượng biến cố được xử trí liên quan đến thay đổi phác đồ lao\",\n          data: totalImportant,\n          color: \"green\"\n        }];\n        console.log(series);\n\n        _this.highChartsRender(series);\n      });\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(MultiColumResults, [{\n    key: \"highChartsRender\",\n    value: function highChartsRender(t) {\n      Highcharts.chart({\n        chart: {\n          type: \"column\",\n          renderTo: \"atmospheric-r\"\n        },\n        title: {\n          text: t(\"Dashboard.chartTitle\"),\n          style: {\n            fontSize: \"18px\",\n            fontFamily: \"Arial\",\n            fontWeight: \"700\"\n          }\n        },\n        credits: {\n          enabled: false\n        },\n        legend: {\n          reversed: true\n        },\n        xAxis: {\n          categories: this.props.categories\n        },\n        yAxis: {\n          min: 0,\n          title: {\n            text: \"\"\n          }\n        },\n        // plotOptions: {\n        //   spline: {\n        //     dataLabels: {\n        //       format: '{point.name}: {point.percentage:.1f} %'\n        //     },\n        //     innerSize: '70%'\n        //   },\n        // },\n        tooltip: {\n          shared: true\n        },\n        plotOptions: {},\n        series: this.props.series\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var t = this.props.t;\n      this.highChartsRender(t);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var t = this.props.t;\n      this.highChartsRender(t);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"atmospheric-r\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 10\n        }\n      });\n    }\n  }]);\n\n  return MultiColumResults;\n}(Component);\n\nexport default MultiColumResults;","map":{"version":3,"sources":["D:/OceanTech/nimpe/Client-V2/src/app/views/dashboard/MultiColumResults.jsx"],"names":["Highcharts","moment","React","Component","getDashboardAnalytics","MultiColumResults","props","updatePageData","searchObj","year","state","format","filterType","typeOption","type","then","data","listDoashboard","totalPatient","totalPatientIncident","totalImportant","totalChange","forEach","element","push","series","name","color","console","log","highChartsRender","t","chart","renderTo","title","text","style","fontSize","fontFamily","fontWeight","credits","enabled","legend","reversed","xAxis","categories","yAxis","min","tooltip","shared","plotOptions"],"mappings":"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","sourcesContent":["import Highcharts from \"highcharts\";\r\nimport moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport { getDashboardAnalytics } from \"./DashboardService\";\r\n\r\nclass MultiColumResults extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {};\r\n\t}\r\n\r\n\thighChartsRender(t) {\r\n\t\tHighcharts.chart({\r\n\t\t\tchart: {\r\n\t\t\t\ttype: \"column\",\r\n\t\t\t\trenderTo: \"atmospheric-r\",\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: t(\"Dashboard.chartTitle\"),\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tfontSize: \"18px\",\r\n\t\t\t\t\tfontFamily: \"Arial\",\r\n\t\t\t\t\tfontWeight: \"700\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tcredits: {\r\n\t\t\t\tenabled: false,\r\n\t\t\t},\r\n\t\t\tlegend: {\r\n\t\t\t\treversed: true,\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: this.props.categories,\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\tmin: 0,\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: \"\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t// plotOptions: {\r\n\t\t\t//   spline: {\r\n\t\t\t//     dataLabels: {\r\n\t\t\t//       format: '{point.name}: {point.percentage:.1f} %'\r\n\t\t\t//     },\r\n\t\t\t//     innerSize: '70%'\r\n\t\t\t//   },\r\n\r\n\t\t\t// },\r\n\r\n\t\t\ttooltip: {\r\n\t\t\t\tshared: true,\r\n\t\t\t},\r\n\t\t\tplotOptions: {},\r\n\t\t\tseries: this.props.series,\r\n\t\t});\r\n\t}\r\n\r\n\tupdatePageData = () => {\r\n\t\tlet searchObj = {};\r\n\t\tsearchObj.year = moment(this.state.year).format(\"yyyy\");\r\n\t\tsearchObj.filterType = this.state.typeOption.type;\r\n\t\tgetDashboardAnalytics(searchObj).then(({ data }) => {\r\n\t\t\tlet listDoashboard = [...data];\r\n\t\t\tlet totalPatient = [];\r\n\t\t\tlet totalPatientIncident = [];\r\n\t\t\tlet totalImportant = [];\r\n\t\t\tlet totalChange = [];\r\n\t\t\tlistDoashboard.forEach(element => {\r\n\t\t\t\ttotalPatient.push(element.totalPatient);\r\n\t\t\t\ttotalPatientIncident.push(element.totalPatientIncident);\r\n\t\t\t\ttotalImportant.push(element.totalImportant);\r\n\t\t\t\ttotalChange.push(element.totalChange);\r\n\t\t\t});\r\n\r\n\t\t\tlet series = [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"Tổng số biến cố bất lợi\",\r\n\t\t\t\t\tdata: totalPatient,\r\n\t\t\t\t\tcolor: \"red\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"Số lượng biến cố nghiêm trọng\",\r\n\t\t\t\t\tdata: totalPatientIncident,\r\n\t\t\t\t\tcolor: \"blue\",\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"Số lượng biến cố được xử trí liên quan đến thay đổi phác đồ lao\",\r\n\t\t\t\t\tdata: totalImportant,\r\n\t\t\t\t\tcolor: \"green\",\r\n\t\t\t\t},\r\n\t\t\t];\r\n\t\t\tconsole.log(series);\r\n\t\t\tthis.highChartsRender(series);\r\n\t\t});\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tlet { t } = this.props;\r\n\t\tthis.highChartsRender(t);\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tlet { t } = this.props;\r\n\t\tthis.highChartsRender(t);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn <div id=\"atmospheric-r\"></div>;\r\n\t}\r\n}\r\nexport default MultiColumResults;\r\n"]},"metadata":{},"sourceType":"module"}