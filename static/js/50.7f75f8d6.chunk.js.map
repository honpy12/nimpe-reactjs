{"version":3,"sources":["app/views/sessions/SessionService.js","app/views/sessions/SignUp_RegisterAccount.jsx"],"names":["__webpack_require__","d","__webpack_exports__","signUpAccount","checkuserName","checkEmail","forgotPassword","resetPassword","checkOTP","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","n","_appConfig__WEBPACK_IMPORTED_MODULE_1__","_appConfig__WEBPACK_IMPORTED_MODULE_1___default","API_PATH","ConstantList","API_ENPOINT","item","url","axios","post","config","params","userName","username","console","log","put","email","SignUp","props","_this","Object","D_OceanTech_nimpe_Client_V2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_super","call","listGender","id","name","handleChange","event","source","persist","displayName","state","target","value","setState","gender","phone","D_OceanTech_nimpe_Client_V2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","firstName","trim","lastName","active","checked","changePass","isActive","openSelectDepartmentPopup","shouldOpenSelectDepartmentPopup","handleFormSubmit","registerDto","password","then","result","data","alert","hasEmail","sendEmailFailed","history","push","error","_this2","ValidatorForm","addValidationRule","removeValidationRule","_this3","_this$props","t","open","handleClose","handleOKEditClose","_this$state","i18n","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","react_helmet__WEBPACK_IMPORTED_MODULE_13__","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","style","top","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","container","lg","md","sm","xs","src","alt","react_material_ui_form_validator__WEBPACK_IMPORTED_MODULE_10__","ref","onSubmit","size","label","onChange","variant","type","disabled","color","validators","errorMessages","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","position","bottom","left","transform","react_router_dom__WEBPACK_IMPORTED_MODULE_14__","to","Component","connect"],"mappings":"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","file":"static/js/50.7f75f8d6.chunk.js","sourcesContent":["import axios from \"axios\";\nimport ConstantList from \"../../appConfig\";\nconst API_PATH = ConstantList.API_ENPOINT + \"/public/api/\";\n\nexport const signUpAccount = item => {\n  var url = API_PATH + \"register\";\n  return axios.post(url, item);\n};\n\nexport const checkuserName = item => {  \n  const config = { params: { userName:  item.username } };\n  console.log(config)\n  var url = API_PATH + \"username\";\n  return axios.put(url,null,config);\n};\n\nexport const checkEmail = item => {\n  const config = { params: { email:  item.email } };\n  console.log(config)\n  var url = API_PATH + \"email\";\n  return axios.put(url, null, config);\n};\n\nexport const forgotPassword = email => {\n  let url = ConstantList.API_ENPOINT + '/public/api/forgot-password';\n  return axios.post(url, email);\n}\nexport const resetPassword = item => {\n  let url = 'http://localhost:8993/nimpe/public/api/OTP';\n  return axios.put(url, item);\n}\n\nexport const checkOTP = item => {\n  let url = ConstantList.API_ENPOINT + \"/public/api/OTP/register\"; \n  return axios.put(url, item);\n}","import React, { Component } from \"react\";\nimport ConstantList from \"../../appConfig\";\nimport {\n  Card,\n  Checkbox,\n  FormControlLabel,\n  Grid,\n  Button,\n  Select,\n  Input,\n  InputLabel,\n  FormControl,\n  MenuItem,\n  FormHelperText\n} from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { getAllEQARound, getAllHealthOrgType, signUpAccount, checkuserName, checkEmail } from \"./SessionService\";\nimport { connect } from \"react-redux\";\nimport { Helmet } from 'react-helmet';\nimport { Redirect, Link } from 'react-router-dom';\nimport { toast } from \"react-toastify\";\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayName: \"\",\n      username: \"\",\n      gender: \"\",\n      email: \"\",\n      password: \"\",\n      phone: \"\",\n      lastName: \"\",\n      firstName: \"\",\n    };\n  }\n\n  listGender = [\n      { id: 'M', name: 'Nam' },\n      { id: 'F', name: 'Nữ' },\n      { id: 'U', name: 'Không rõ' },\n    ]\n\n  handleChange = (event, source) => {\n    event.persist()\n    if (source === 'switch') {\n      this.setState({ isActive: event.target.checked })\n      return\n    }\n    if (source === 'changePass') {\n      this.setState({ changePass: event.target.checked })\n      return\n    }\n    if (source === 'active') {\n      this.setState({ active: event.target.checked })\n      return\n    }\n    if (source === 'displayName') {\n      let displayName = this.state;\n      displayName = event.target.value;\n      this.setState({ displayName: displayName })\n      return\n    }\n    if (source === 'gender') {\n      let gender = this.state;\n      gender = event.target.value;\n      this.setState({ gender: gender })\n      return\n    }\n    if (source === 'phone') {\n      let phone = this.state;\n      phone = event.target.value;\n      this.setState({ phone: phone })\n      return\n    }\n    if (source === 'firstName') {\n      let { lastName } = this.state;\n      let displayName = event.target.value.trim() + \" \" + (lastName ? lastName : '');\n      this.setState({ firstName: event.target.value, displayName: displayName });\n      return\n      // let firstName = this.state;\n      // firstName = event.target.value;\n      // this.setState({ firstName: firstName })\n      // return\n    }\n    else if (source === 'lastName') {\n      // let lastName = this.state;\n      // lastName = event.target.value;\n      // this.setState({ lastName: lastName })\n      // return\n      let { firstName } = this.state;\n      let displayName = firstName.trim() + \" \" + (event.target.value.trim() ? event.target.value.trim() : '');\n      this.setState({ lastName: event.target.value, displayName: displayName });\n      return\n    }\n    \n    this.setState({\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  openSelectDepartmentPopup = () => {\n    this.setState({\n      shouldOpenSelectDepartmentPopup: true,\n    })\n  }\n\n  handleFormSubmit = (item) => {\n    let registerDto = {};\n    registerDto.username = this.state.username;\n    registerDto.lastName = this.state.lastName;\n    registerDto.firstName = this.state.firstName;\n    registerDto.email = this.state.email;\n    registerDto.displayName = this.state.displayName;\n    registerDto.password = this.state.password;\n    registerDto.phone = this.state.phone;\n    checkuserName(registerDto).then((result) => {\n      if (result.data == false) {\n        alert('Tên đăng nhập này đã được sử dụng.');\n      }\n      else {\n        checkEmail(registerDto).then((result) => {\n          if (result.data == false) {\n            alert('Email này đã được sử dụng.');\n          }\n          else {\n            signUpAccount(registerDto).then((result) => {\n              if (result != null && result.data != null && result.data != '') {\n                if (result.data.hasEmail) {\n                  alert('Email này đã được sử dụng.');\n                }\n                else if (result.data.sendEmailFailed) {\n                  alert('Có lỗi khi gửi email thông báo đến email của bạn. Vui lòng thử lại.');\n                }\n                else {\n                  this.props.history.push('/session/otpAuth/' + this.state.email);\n                }\n              }\n              else {\n                alert('Có lỗi xảy ra khi đăng ký.');\n              }\n            });\n          }\n        }, (error) => {\n          alert('Có lỗi xảy ra khi đăng ký.');\n        });\n      }\n    }, (error) => {\n      alert('Có lỗi xảy ra khi đăng ký.');\n    });\n  };\n\n  componentDidMount() {\n    // custom rule will have name 'isPasswordMatch'\n    ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\n      if (value !== this.state.password) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  componentWillUnmount() {\n    // remove rule when it is not needed\n    ValidatorForm.removeValidationRule('isPasswordMatch');\n  }\n\n  render() {\n    let { open, handleClose, handleOKEditClose, t, i18n } = this.props\n    let {\n      displayName,\n      email,\n      username,\n      password,\n      phone,\n      lastName,\n      firstName,\n    } = this.state;\n    return (\n      <div className=\"signup flex flex-center w-100 h-100vh\">\n        <Helmet>\n          <title>{t('Dashboard.register')} | {t('web_site')} </title>\n        </Helmet>\n        <div className=\"p-8\">\n          <Card className=\"signup-card position-relative y-center\" style={{top: '40vh'}}>\n            <Grid container>\n              <Grid item lg={5} md={5} sm={5} xs={12}>\n                <div className=\"p-32 flex flex-center flex-middle h-100 logo-login\">\n                  <img src={\"/assets/images/logos/logo_nimpe.jpg\"} alt=\"\" />\n                </div>\n              </Grid>\n              <Grid item lg={7} md={7} sm={7} xs={12}>\n                <div className=\"p-36 h-100 bg-light-gray position-relative\">\n                  <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\n                    <TextValidator\n                      className=\"w-100 mb-16\"\n                      size=\"small\"\n                      label={<span>{t('user.firstName')}</span>}\n                      onChange={(value) =>\n                        this.handleChange(value, 'firstName')\n                      }\n                      variant=\"outlined\"\n                      type=\"text\"\n                      name=\"name\"\n                      value={firstName}\n                      // validators={['required']}\n                      // errorMessages={['this field is required']}\n                    />\n\n                    <TextValidator\n                      className=\"w-100 mb-16\"\n                      size=\"small\"\n                      label={<span>{t('user.lastName')}</span>}\n                      onChange={(value) =>\n                        this.handleChange(value, 'lastName')\n                      }\n                      variant=\"outlined\"\n                      type=\"text\"\n                      name=\"name\"\n                      value={lastName}\n                      // validators={['required']}\n                      // errorMessages={['this field is required']}\n                    />\n\n                    <TextValidator\n                      disabled={true}\n                      className=\"w-100 mb-16\"\n                      size=\"small\"\n                      label={<span><span style={{ color: \"red\" }}>*</span>{t('user.displayName')}</span>}\n                      onChange={(displayName) =>\n                        this.handleChange(displayName, 'displayName')\n                      }\n                      variant=\"outlined\"\n                      type=\"text\"\n                      name=\"name\"\n                      value={displayName}\n                      validators={['required']}\n                      errorMessages={['this field is required']}\n                    />\n                    \n                    <TextValidator\n                      className=\"w-100 mb-16\"\n                      label={<span>{t('user.phone')}</span>}\n                      onChange={this.handleChange}\n                      type=\"text\"\n                      size=\"small\"\n                      variant=\"outlined\"\n                      name=\"phone\"\n                      value={phone}\n                      // validators={['required']}\n                      // errorMessages={['this field is required']}\n                    />\n                    <TextValidator\n                      className=\"w-100 mb-16\"\n                      label={<span><span style={{ color: \"red\" }}>*</span>{t('user.username')}</span>}\n                      onChange={this.handleChange}\n                      type=\"text\"\n                      size=\"small\"\n                      variant=\"outlined\"\n                      name=\"username\"\n                      value={username}\n                      validators={['required']}\n                      errorMessages={['this field is required']}\n                    />\n\n                    <TextValidator\n                      className=\"w-100 mb-16\"\n                      label={<span><span style={{color:\"red\"}}>*</span>{t('user.email')}</span>}\n                      size=\"small\"\n                      onChange={this.handleChange}\n                      type=\"email\"\n                      name=\"email\"\n                      value={email}\n                      variant=\"outlined\"\n                      validators={['required', 'isEmail']}\n                      errorMessages={[\n                        'This field is required',\n                        'Email is not valid',\n                      ]}\n                    />\n\n                    <TextValidator\n                      className=\"mb-16 w-100\"\n                      label={<span><span style={{color:\"red\"}}>*</span>{t('user.pass')}</span>}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      onChange={this.handleChange}\n                      name=\"password\"\n                      type=\"password\"\n                      value={password}\n                      validators={['required']}\n                      errorMessages={['This field is required']}\n                    />\n                    \n                    <div className=\"flex flex-middle mb-8\">\n                      <Button\n                        className=\"capitalize\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        type=\"submit\"\n                      >\n                        {t(\"sign_up.title\")}\n                      </Button>\n                    </div>\n                    <p className=\"text-muted\" style={{ position: \"absolute\", bottom: \"0\",  left: \"45%\", transform: \"translateX(-45%)\"}}>\n                      Bạn đã có tài khoản?  \n                      <Link to=\"/session/signin\" className=\"text-primary font-weight-bold ml-10\">\n                        Đăng nhập\n                      </Link>\n                    </p>\n                  </ValidatorForm>\n                </div>\n              </Grid>\n            </Grid>\n          </Card>     \n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  // setUser: PropTypes.func.isRequired\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(SignUp);\n"],"sourceRoot":""}