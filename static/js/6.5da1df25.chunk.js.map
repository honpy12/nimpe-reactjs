{"version":3,"sources":["../node_modules/react-toastify/dist/react-toastify.esm.js"],"names":["__webpack_require__","d","__webpack_exports__","ToastContainer","toast","react__WEBPACK_IMPORTED_MODULE_0__","react_transition_group__WEBPACK_IMPORTED_MODULE_1__","clsx__WEBPACK_IMPORTED_MODULE_2__","react_dom__WEBPACK_IMPORTED_MODULE_3__","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","isNum","v","isNaN","isBool","isStr","isFn","parseClassName","hasToastId","toastId","canUseDom","window","document","createElement","canBeRendered","content","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","DARK","cssTransition","_ref","enterDuration","exitDuration","enter","exit","_ref$duration","duration","_ref$appendPosition","appendPosition","_ref$collapse","collapse","_ref$collapseDuration","collapseDuration","Array","isArray","_ref2","children","position","preventExitTransition","done","props","enterClassName","exitClassName","onExited","node","nodeRef","current","removeEventListener","height","scrollHeight","style","requestAnimationFrame","minHeight","transition","padding","margin","setTimeout","collapseToast","timeout","onEnter","classList","add","animationFillMode","animationDuration","onEntered","remove","removeProperty","onExit","addEventListener","unmountOnExit","eventManager","list","Map","emitQueue","on","event","callback","has","set","get","push","off","cb","filter","cancelEmit","timers","forEach","timer","clearTimeout","emit","_this","_len","args","_key","useKeeper","arg","refresh","ref","reducer","state","action","type","concat","id","staleId","useToastContainer","forceUpdate","x","_useReducer2","dispatch","containerRef","toastCount","queue","collection","instance","toastKey","displayedToast","containerId","isToastActive","getToast","clearWaitingQueue","_instance$props","limit","enableMultiContainer","removeToast","queueLen","freeSlot","dequeueToast","toDequeue","_queue$shift","shift","toastContent","toastProps","appendToast","buildToast","_ref3","delay","options","updateId","isNotValid","closeToast","isNotAnUpdate","toastAutoClose","containerAutoClose","closeButton","rtl","className","toastClassName","bodyClassName","toastStyle","bodyStyle","onClick","pauseOnHover","pauseOnFocusLoss","draggable","draggablePercent","closeOnClick","progressClassName","progressStyle","autoClose","hideProgressBar","progress","role","deleteToast","removeFromCollection","onOpen","onClose","getToastToRender","toastToRender","toastList","newestOnTop","reverse","_toast","map","p","getX","e","targetTouches","clientX","useToast","_useState","isRunning","setIsRunning","_useState2","setPreventExitTransition","toastRef","drag","start","y","deltaX","removalDistance","canCloseOnClick","canDrag","boundingRect","syncProps","onDragStart","getBoundingClientRect","nativeEvent","offsetWidth","onDragTransitionEnd","_drag$boundingRect","top","bottom","left","right","pauseToast","playToast","onDragMove","preventDefault","clientY","getY","transform","opacity","Math","abs","onDragEnd","eventHandlers","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseEnter","onMouseLeave","CloseButton","_ref$ariaLabel","ariaLabel","stopPropagation","aria-label","aria-hidden","viewBox","fillRule","ProgressBar","_animationEvent","hide","userStyle","controlledProgress","isIn","animationPlayState","defaultClassArr","classNames","defaultClassName","animationEvent","defaultProps","Toast","_useToast","Transition","cssClasses","in","appear","undefined","renderCloseButton","Bounce","ToastPositioner","rest","child","_useToastContainer","_cx","_cx2","swag","pointerEvents","latestInstance","containerDomNode","containerConfig","containers","lazy","isAnyContainerMounted","size","container","getContainer","generateToastId","random","toString","Date","now","substr","getToastId","dispatchToast","body","appendChild","mergeOptions","success","info","error","warning","dark","warn","dismiss","params","isActive","update","oldOptions","oldContent","nextOptions","render","onChange","configure","config","containerInstance","item","removeChild"],"mappings":"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","file":"static/js/6.5da1df25.chunk.js","sourcesContent":["import { isValidElement, createElement, useRef, useEffect, useReducer, cloneElement, useState, Children } from 'react';\nimport { Transition } from 'react-transition-group';\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { render } from 'react-dom';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction isNum(v) {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nfunction isBool(v) {\n  return typeof v === 'boolean';\n}\n\nfunction isStr(v) {\n  return typeof v === 'string';\n}\n\nfunction isFn(v) {\n  return typeof v === 'function';\n}\n\nfunction parseClassName(v) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nfunction objectValues(obj) {\n  return Object.keys(obj).map(function (key) {\n    return obj[key];\n  });\n}\n\nfunction hasToastId(toastId) {\n  return toastId === 0 || toastId;\n}\n\nfunction getAutoCloseDelay(toastAutoClose, containerAutoClose) {\n  return toastAutoClose === false || isNum(toastAutoClose) && toastAutoClose > 0 ? toastAutoClose : containerAutoClose;\n}\n\nvar canUseDom = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nfunction canBeRendered(content) {\n  return isValidElement(content) || isStr(content) || isFn(content) || isNum(content);\n}\n\nvar POSITION = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\nvar TYPE = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default',\n  DARK: 'dark'\n};\n/**\r\n * Used to collapse toast after exit animation\r\n */\n\nfunction collapseToast(node, done, duration\n/* COLLAPSE_DURATION */\n) {\n  if (duration === void 0) {\n    duration = 300;\n  }\n\n  var height = node.scrollHeight;\n  var style = node.style;\n  requestAnimationFrame(function () {\n    style.minHeight = 'initial';\n    style.height = height + 'px';\n    style.transition = \"all \" + duration + \"ms\";\n    requestAnimationFrame(function () {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(function () {\n        return done();\n      }, duration);\n    });\n  });\n}\n\nfunction cssTransition(_ref) {\n  var enter = _ref.enter,\n      exit = _ref.exit,\n      _ref$duration = _ref.duration,\n      duration = _ref$duration === void 0 ? 750 : _ref$duration,\n      _ref$appendPosition = _ref.appendPosition,\n      appendPosition = _ref$appendPosition === void 0 ? false : _ref$appendPosition,\n      _ref$collapse = _ref.collapse,\n      collapse = _ref$collapse === void 0 ? true : _ref$collapse,\n      _ref$collapseDuration = _ref.collapseDuration,\n      collapseDuration = _ref$collapseDuration === void 0 ? 300 : _ref$collapseDuration;\n  var enterDuration, exitDuration;\n\n  if (Array.isArray(duration) && duration.length === 2) {\n    enterDuration = duration[0];\n    exitDuration = duration[1];\n  } else {\n    enterDuration = exitDuration = duration;\n  }\n\n  return function ToastTransition(_ref2) {\n    var children = _ref2.children,\n        position = _ref2.position,\n        preventExitTransition = _ref2.preventExitTransition,\n        done = _ref2.done,\n        props = _objectWithoutPropertiesLoose(_ref2, [\"children\", \"position\", \"preventExitTransition\", \"done\"]);\n\n    var enterClassName = appendPosition ? enter + \"--\" + position : enter;\n    var exitClassName = appendPosition ? exit + \"--\" + position : exit;\n\n    var onEnter = function onEnter() {\n      var node = props.nodeRef.current;\n\n      if (node) {\n        node.classList.add(enterClassName);\n        node.style.animationFillMode = 'forwards';\n        node.style.animationDuration = enterDuration + \"ms\";\n      }\n    };\n\n    var onEntered = function onEntered() {\n      var node = props.nodeRef.current;\n\n      if (node) {\n        node.classList.remove(enterClassName);\n        node.style.removeProperty('animationFillMode');\n        node.style.removeProperty('animationDuration');\n      }\n    };\n\n    var onExited = function onExited() {\n      var node = props.nodeRef.current;\n\n      if (node) {\n        node.removeEventListener('animationend', onExited);\n        collapse ? collapseToast(node, done, collapseDuration) : done();\n      }\n    };\n\n    var onExit = function onExit() {\n      var node = props.nodeRef.current;\n\n      if (node) {\n        node.classList.add(exitClassName);\n        node.style.animationFillMode = 'forwards';\n        node.style.animationDuration = exitDuration + \"ms\";\n        node.addEventListener('animationend', onExited);\n      }\n    };\n\n    return createElement(Transition, Object.assign({}, props, {\n      timeout: preventExitTransition ? collapse ? collapseDuration : 50\n      /* DEBOUNCE_DURATION */\n      : {\n        enter: enterDuration,\n        exit: collapse ? exitDuration + collapseDuration : exitDuration + 50\n        /* DEBOUNCE_DURATION */\n\n      },\n      onEnter: onEnter,\n      onEntered: onEntered,\n      onExit: preventExitTransition ? onExited : onExit,\n      unmountOnExit: true\n    }), children);\n  };\n}\n\nvar eventManager = {\n  list: /*#__PURE__*/new Map(),\n  emitQueue: /*#__PURE__*/new Map(),\n  on: function on(event, callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event).push(callback);\n    return this;\n  },\n  off: function off(event, callback) {\n    if (callback) {\n      var cb = this.list.get(event).filter(function (cb) {\n        return cb !== callback;\n      });\n      this.list.set(event, cb);\n      return this;\n    }\n\n    this.list[\"delete\"](event);\n    return this;\n  },\n  cancelEmit: function cancelEmit(event) {\n    var timers = this.emitQueue.get(event);\n\n    if (timers) {\n      timers.forEach(function (timer) {\n        return clearTimeout(timer);\n      });\n      this.emitQueue[\"delete\"](event);\n    }\n\n    return this;\n  },\n\n  /**\r\n   * Enqueue the event at the end of the call stack\r\n   * Doing so let the user call toast as follow:\r\n   * toast('1')\r\n   * toast('2')\r\n   * toast('3')\r\n   * Without setTimemout the code above will not work\r\n   */\n  emit: function emit(event) {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    this.list.has(event) && this.list.get(event).forEach(function (callback) {\n      var timer = setTimeout(function () {\n        // @ts-ignore\n        callback.apply(void 0, args);\n      }, 0);\n      _this.emitQueue.has(event) || _this.emitQueue.set(event, []);\n\n      _this.emitQueue.get(event).push(timer);\n    });\n  }\n};\n/**\r\n * `useKeeper` is a helper around `useRef`.\r\n *\r\n * You don't need to access the `.current`property to get the value\r\n * If refresh is set to true. The ref will be updated every render\r\n */\n\nfunction useKeeper(arg, refresh) {\n  if (refresh === void 0) {\n    refresh = false;\n  }\n\n  var ref = useRef(arg);\n  useEffect(function () {\n    if (refresh) ref.current = arg;\n  });\n  return ref.current;\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'ADD':\n      return [].concat(state, [action.toastId]).filter(function (id) {\n        return id !== action.staleId;\n      });\n\n    case 'REMOVE':\n      return hasToastId(action.toastId) ? state.filter(function (id) {\n        return id !== action.toastId;\n      }) : [];\n  }\n}\n\nfunction useToastContainer(props) {\n  var _useReducer = useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      forceUpdate = _useReducer[1];\n\n  var _useReducer2 = useReducer(reducer, []),\n      toast = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var containerRef = useRef(null);\n  var toastCount = useKeeper(0);\n  var queue = useKeeper([]);\n  var collection = useKeeper({});\n  var instance = useKeeper({\n    toastKey: 1,\n    displayedToast: 0,\n    props: props,\n    containerId: null,\n    isToastActive: isToastActive,\n    getToast: function getToast(id) {\n      return collection[id] || null;\n    }\n  });\n  useEffect(function () {\n    instance.containerId = props.containerId;\n    eventManager.cancelEmit(3\n    /* WillUnmount */\n    ).on(0\n    /* Show */\n    , buildToast).on(1\n    /* Clear */\n    , function (toastId) {\n      return containerRef.current && removeToast(toastId);\n    }).on(5\n    /* ClearWaitingQueue */\n    , clearWaitingQueue).emit(2\n    /* DidMount */\n    , instance);\n    return function () {\n      return eventManager.emit(3\n      /* WillUnmount */\n      , instance);\n    };\n  }, []);\n  useEffect(function () {\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toast.length;\n    eventManager.emit(4\n    /* Change */\n    , toast.length, props.containerId);\n  }, [toast]);\n  useEffect(function () {\n    instance.props = props;\n  });\n\n  function isToastActive(id) {\n    return toast.indexOf(id) !== -1;\n  }\n\n  function clearWaitingQueue(_ref) {\n    var containerId = _ref.containerId;\n    var _instance$props = instance.props,\n        limit = _instance$props.limit,\n        enableMultiContainer = _instance$props.enableMultiContainer;\n\n    if (limit && (!containerId || instance.containerId === containerId && enableMultiContainer)) {\n      toastCount -= queue.length;\n      queue = [];\n    }\n  }\n\n  function removeToast(toastId) {\n    var queueLen = queue.length;\n    toastCount = hasToastId(toastId) ? toastCount - 1 : toastCount - instance.displayedToast;\n    if (toastCount < 0) toastCount = 0;\n\n    if (queueLen > 0) {\n      var freeSlot = hasToastId(toastId) ? 1 : instance.props.limit;\n\n      if (queueLen === 1 || freeSlot === 1) {\n        instance.displayedToast++;\n        dequeueToast();\n      } else {\n        var toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n        instance.displayedToast = toDequeue;\n\n        for (var i = 0; i < toDequeue; i++) {\n          dequeueToast();\n        }\n      }\n    }\n\n    dispatch({\n      type: 'REMOVE',\n      toastId: toastId\n    });\n  }\n\n  function dequeueToast() {\n    var _queue$shift = queue.shift(),\n        toastContent = _queue$shift.toastContent,\n        toastProps = _queue$shift.toastProps,\n        staleId = _queue$shift.staleId; // ensure that exit transition has been completed, hence the timeout\n\n\n    setTimeout(function () {\n      appendToast(toastContent, toastProps, staleId);\n    }, 500);\n  }\n  /**\r\n   * check if a container is attached to the dom\r\n   * check for multi-container, build only if associated\r\n   * check for duplicate toastId if no update\r\n   */\n\n\n  function isNotValid(_ref2) {\n    var containerId = _ref2.containerId,\n        toastId = _ref2.toastId,\n        updateId = _ref2.updateId;\n    return !containerRef.current || instance.props.enableMultiContainer && containerId !== instance.props.containerId || instance.isToastActive(toastId) && updateId == null ? true : false;\n  } // this function and all the function called inside needs to rely on ref(`useKeeper`)\n\n\n  function buildToast(content, _ref3) {\n    var delay = _ref3.delay,\n        staleId = _ref3.staleId,\n        options = _objectWithoutPropertiesLoose(_ref3, [\"delay\", \"staleId\"]);\n\n    if (!canBeRendered(content) || isNotValid(options)) return;\n    var toastId = options.toastId,\n        updateId = options.updateId;\n    var props = instance.props,\n        isToastActive = instance.isToastActive;\n\n    var closeToast = function closeToast() {\n      return removeToast(toastId);\n    };\n\n    var isNotAnUpdate = !isToastActive(toastId);\n    if (isNotAnUpdate) toastCount++;\n    var toastProps = {\n      toastId: toastId,\n      updateId: updateId,\n      key: options.key || instance.toastKey++,\n      type: options.type,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || props.position,\n      transition: options.transition || props.transition,\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(options.bodyClassName || props.bodyClassName),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover) ? options.pauseOnHover : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss) ? options.pauseOnFocusLoss : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable) ? options.draggable : props.draggable,\n      draggablePercent: isNum(options.draggablePercent) ? options.draggablePercent : props.draggablePercent,\n      closeOnClick: isBool(options.closeOnClick) ? options.closeOnClick : props.closeOnClick,\n      progressClassName: parseClassName(options.progressClassName || props.progressClassName),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar) ? options.hideProgressBar : props.hideProgressBar,\n      progress: options.progress,\n      role: isStr(options.role) ? options.role : props.role,\n      deleteToast: function deleteToast() {\n        removeFromCollection(toastId);\n      }\n    };\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n    var closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\n    }\n\n    toastProps.closeButton = closeButton;\n    var toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast: closeToast,\n        toastProps: toastProps\n      });\n    } else if (isFn(content)) {\n      toastContent = content({\n        closeToast: closeToast,\n        toastProps: toastProps\n      });\n    } // not handling limit + delay by design. Waiting for user feedback first\n\n\n    if (props.limit && props.limit > 0 && toastCount > props.limit && isNotAnUpdate) {\n      queue.push({\n        toastContent: toastContent,\n        toastProps: toastProps,\n        staleId: staleId\n      });\n    } else if (isNum(delay) && delay > 0) {\n      setTimeout(function () {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(content, toastProps, staleId) {\n    var toastId = toastProps.toastId;\n    collection[toastId] = {\n      content: content,\n      props: toastProps\n    };\n    dispatch({\n      type: 'ADD',\n      toastId: toastId,\n      staleId: staleId\n    });\n  }\n\n  function removeFromCollection(toastId) {\n    delete collection[toastId];\n    forceUpdate();\n  }\n\n  function getToastToRender(cb) {\n    var toastToRender = {};\n    var toastList = props.newestOnTop ? Object.keys(collection).reverse() : Object.keys(collection);\n\n    for (var i = 0; i < toastList.length; i++) {\n      var _toast = collection[toastList[i]];\n      var position = _toast.props.position;\n      toastToRender[position] || (toastToRender[position] = []);\n      toastToRender[position].push(_toast);\n    }\n\n    return Object.keys(toastToRender).map(function (p) {\n      return cb(p, toastToRender[p]);\n    });\n  }\n\n  return {\n    getToastToRender: getToastToRender,\n    collection: collection,\n    containerRef: containerRef,\n    isToastActive: isToastActive\n  };\n}\n\nfunction getX(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientX : e.clientX;\n}\n\nfunction getY(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientY : e.clientY;\n}\n\nfunction useToast(props) {\n  var _useState = useState(true),\n      isRunning = _useState[0],\n      setIsRunning = _useState[1];\n\n  var _useState2 = useState(false),\n      preventExitTransition = _useState2[0],\n      setPreventExitTransition = _useState2[1];\n\n  var toastRef = useRef(null);\n  var drag = useKeeper({\n    start: 0,\n    x: 0,\n    y: 0,\n    deltaX: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null\n  });\n  var syncProps = useKeeper(props, true);\n  var autoClose = props.autoClose,\n      pauseOnHover = props.pauseOnHover,\n      closeToast = props.closeToast,\n      onClick = props.onClick,\n      closeOnClick = props.closeOnClick;\n  useEffect(function () {\n    if (isFn(props.onOpen)) props.onOpen(isValidElement(props.children) && props.children.props);\n    return function () {\n      if (isFn(syncProps.onClose)) syncProps.onClose(isValidElement(syncProps.children) && syncProps.children.props);\n    };\n  }, []);\n  useEffect(function () {\n    props.draggable && bindDragEvents();\n    return function () {\n      props.draggable && unbindDragEvents();\n    };\n  }, [props.draggable]);\n  useEffect(function () {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return function () {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(e) {\n    var toast = toastRef.current;\n    drag.canCloseOnClick = true;\n    drag.canDrag = true;\n    drag.boundingRect = toast.getBoundingClientRect();\n    toast.style.transition = '';\n    drag.start = drag.x = getX(e.nativeEvent);\n    drag.removalDistance = toast.offsetWidth * (props.draggablePercent / 100);\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      var _drag$boundingRect = drag.boundingRect,\n          top = _drag$boundingRect.top,\n          bottom = _drag$boundingRect.bottom,\n          left = _drag$boundingRect.left,\n          right = _drag$boundingRect.right;\n\n      if (props.pauseOnHover && drag.x >= left && drag.x <= right && drag.y >= top && drag.y <= bottom) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e) {\n    e.preventDefault();\n    var toast = toastRef.current;\n\n    if (drag.canDrag) {\n      if (isRunning) pauseToast();\n      drag.x = getX(e);\n      drag.deltaX = drag.x - drag.start;\n      drag.y = getY(e); // prevent false positif during a toast click\n\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = \"translateX(\" + drag.deltaX + \"px)\";\n      toast.style.opacity = \"\" + (1 - Math.abs(drag.deltaX / drag.removalDistance));\n    }\n  }\n\n  function onDragEnd() {\n    var toast = toastRef.current;\n\n    if (drag.canDrag) {\n      drag.canDrag = false;\n\n      if (Math.abs(drag.deltaX) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = 'translateX(0)';\n      toast.style.opacity = '1';\n    }\n  }\n\n  var eventHandlers = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  } // prevent toast from closing when user drags the toast\n\n\n  if (closeOnClick) {\n    eventHandlers.onClick = function (e) {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast: playToast,\n    pauseToast: pauseToast,\n    isRunning: isRunning,\n    preventExitTransition: preventExitTransition,\n    toastRef: toastRef,\n    eventHandlers: eventHandlers\n  };\n}\n\nfunction CloseButton(_ref) {\n  var closeToast = _ref.closeToast,\n      type = _ref.type,\n      _ref$ariaLabel = _ref.ariaLabel,\n      ariaLabel = _ref$ariaLabel === void 0 ? 'close' : _ref$ariaLabel;\n  return createElement(\"button\", {\n    className: \"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__close-button \" + \"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__close-button--\" + type,\n    type: \"button\",\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      closeToast(e);\n    },\n    \"aria-label\": ariaLabel\n  }, createElement(\"svg\", {\n    \"aria-hidden\": \"true\",\n    viewBox: \"0 0 14 16\"\n  }, createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n  })));\n}\n\nfunction ProgressBar(_ref) {\n  var _ref2, _animationEvent;\n\n  var delay = _ref.delay,\n      isRunning = _ref.isRunning,\n      closeToast = _ref.closeToast,\n      type = _ref.type,\n      hide = _ref.hide,\n      className = _ref.className,\n      userStyle = _ref.style,\n      controlledProgress = _ref.controlledProgress,\n      progress = _ref.progress,\n      rtl = _ref.rtl,\n      isIn = _ref.isIn;\n\n  var style = _extends({}, userStyle, {\n    animationDuration: delay + \"ms\",\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  });\n\n  if (controlledProgress) style.transform = \"scaleX(\" + progress + \")\";\n  var defaultClassArr = [\"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar\", controlledProgress ? \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar--controlled\" : \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar--animated\", \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar--\" + type, (_ref2 = {}, _ref2[\"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar--rtl\"] = rtl, _ref2)];\n  var classNames = isFn(className) ? className({\n    rtl: rtl,\n    type: type,\n    defaultClassName: cx.apply(void 0, defaultClassArr)\n  }) : cx.apply(void 0, [].concat(defaultClassArr, [className])); // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n\n  var animationEvent = (_animationEvent = {}, _animationEvent[controlledProgress && progress >= 1 ? 'onTransitionEnd' : 'onAnimationEnd'] = controlledProgress && progress < 1 ? null : function () {\n    isIn && closeToast();\n  }, _animationEvent);\n  return createElement(\"div\", Object.assign({\n    className: classNames,\n    style: style\n  }, animationEvent));\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n\nvar Toast = function Toast(props) {\n  var _ref;\n\n  var _useToast = useToast(props),\n      isRunning = _useToast.isRunning,\n      preventExitTransition = _useToast.preventExitTransition,\n      toastRef = _useToast.toastRef,\n      eventHandlers = _useToast.eventHandlers;\n\n  var closeButton = props.closeButton,\n      children = props.children,\n      autoClose = props.autoClose,\n      onClick = props.onClick,\n      type = props.type,\n      hideProgressBar = props.hideProgressBar,\n      closeToast = props.closeToast,\n      Transition = props.transition,\n      position = props.position,\n      className = props.className,\n      style = props.style,\n      bodyClassName = props.bodyClassName,\n      bodyStyle = props.bodyStyle,\n      progressClassName = props.progressClassName,\n      progressStyle = props.progressStyle,\n      updateId = props.updateId,\n      role = props.role,\n      progress = props.progress,\n      rtl = props.rtl,\n      toastId = props.toastId,\n      deleteToast = props.deleteToast;\n  var defaultClassArr = [\"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__toast\", \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__toast--\" + type, (_ref = {}, _ref[\"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__toast--rtl\"] = rtl, _ref)];\n  var cssClasses = isFn(className) ? className({\n    rtl: rtl,\n    position: position,\n    type: type,\n    defaultClassName: cx.apply(void 0, defaultClassArr)\n  }) : cx.apply(void 0, [].concat(defaultClassArr, [className]));\n  var controlledProgress = !!progress;\n\n  function renderCloseButton(closeButton) {\n    if (!closeButton) return;\n    var props = {\n      closeToast: closeToast,\n      type: type\n    };\n    if (isFn(closeButton)) return closeButton(props);\n    if (isValidElement(closeButton)) return cloneElement(closeButton, props);\n  }\n\n  return createElement(Transition, {\n    \"in\": props[\"in\"],\n    appear: true,\n    done: deleteToast,\n    position: position,\n    preventExitTransition: preventExitTransition,\n    nodeRef: toastRef\n  }, createElement(\"div\", Object.assign({\n    id: toastId,\n    onClick: onClick,\n    className: cssClasses || undefined\n  }, eventHandlers, {\n    style: style,\n    ref: toastRef\n  }), createElement(\"div\", Object.assign({}, props[\"in\"] && {\n    role: role\n  }, {\n    className: isFn(bodyClassName) ? bodyClassName({\n      type: type\n    }) : cx(\"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__toast-body\", bodyClassName),\n    style: bodyStyle\n  }), children), renderCloseButton(closeButton), (autoClose || controlledProgress) && createElement(ProgressBar, Object.assign({}, updateId && !controlledProgress ? {\n    key: \"pb-\" + updateId\n  } : {}, {\n    rtl: rtl,\n    delay: autoClose,\n    isRunning: isRunning,\n    isIn: props[\"in\"],\n    closeToast: closeToast,\n    hide: hideProgressBar,\n    type: type,\n    style: progressStyle,\n    className: progressClassName,\n    controlledProgress: controlledProgress,\n    progress: progress\n  }))));\n};\n\nvar Bounce = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__bounce-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__bounce-exit\",\n  appendPosition: true\n});\nvar Slide = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__slide-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__slide-exit\",\n  duration: [450, 750],\n  appendPosition: true\n});\nvar Zoom = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__zoom-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__zoom-exit\"\n});\nvar Flip = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__flip-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__flip-exit\"\n});\n\nvar ToastPositioner = function ToastPositioner(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      style = _ref.style,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"children\", \"className\", \"style\"]); // Monkey patch react-transition-group\n  // As exit transition is broken with strict mode\n\n\n  delete rest[\"in\"];\n  return createElement(\"div\", {\n    className: className,\n    style: style\n  }, Children.map(children, function (child) {\n    return cloneElement(child, rest);\n  }));\n};\n\nvar ToastContainer = function ToastContainer(props) {\n  var _useToastContainer = useToastContainer(props),\n      getToastToRender = _useToastContainer.getToastToRender,\n      containerRef = _useToastContainer.containerRef,\n      isToastActive = _useToastContainer.isToastActive;\n\n  var className = props.className,\n      style = props.style,\n      rtl = props.rtl,\n      containerId = props.containerId;\n  return createElement(\"div\", {\n    ref: containerRef,\n    className: \"Toastify\"\n    /* CSS_NAMESPACE */\n    ,\n    id: containerId\n  }, getToastToRender(function (position, toastList) {\n    var _cx, _cx2;\n\n    var swag = {\n      className: isFn(className) ? className({\n        position: position,\n        rtl: rtl,\n        defaultClassName: cx(\"Toastify\"\n        /* CSS_NAMESPACE */\n        + \"__toast-container\", \"Toastify\"\n        /* CSS_NAMESPACE */\n        + \"__toast-container--\" + position, (_cx = {}, _cx[\"Toastify\"\n        /* CSS_NAMESPACE */\n        + \"__toast-container--rtl\"] = rtl, _cx))\n      }) : cx(\"Toastify\"\n      /* CSS_NAMESPACE */\n      + \"__toast-container\", \"Toastify\"\n      /* CSS_NAMESPACE */\n      + \"__toast-container--\" + position, (_cx2 = {}, _cx2[\"Toastify\"\n      /* CSS_NAMESPACE */\n      + \"__toast-container--rtl\"] = rtl, _cx2), parseClassName(className)),\n      style: toastList.length === 0 ? _extends({}, style, {\n        pointerEvents: 'none'\n      }) : _extends({}, style)\n    };\n    return createElement(ToastPositioner, Object.assign({}, swag, {\n      key: \"container-\" + position\n    }), toastList.map(function (_ref) {\n      var content = _ref.content,\n          toastProps = _ref.props;\n      return createElement(Toast, Object.assign({}, toastProps, {\n        \"in\": isToastActive(toastProps.toastId),\n        key: \"toast-\" + toastProps.key,\n        closeButton: toastProps.closeButton === true ? CloseButton : toastProps.closeButton\n      }), content);\n    }));\n  }));\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  // @ts-ignore\n  ToastContainer.propTypes = {\n    // @ts-ignore\n    position: /*#__PURE__*/PropTypes.oneOf( /*#__PURE__*/objectValues(POSITION)),\n    // @ts-ignore\n    autoClose: /*#__PURE__*/PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n    // @ts-ignore\n    closeButton: /*#__PURE__*/PropTypes.oneOfType([PropTypes.node, PropTypes.bool, PropTypes.func]),\n    hideProgressBar: PropTypes.bool,\n    pauseOnHover: PropTypes.bool,\n    closeOnClick: PropTypes.bool,\n    newestOnTop: PropTypes.bool,\n    className: PropTypes.any,\n    style: PropTypes.object,\n    toastClassName: /*#__PURE__*/PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    bodyClassName: /*#__PURE__*/PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    progressClassName: /*#__PURE__*/PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    progressStyle: PropTypes.object,\n    transition: PropTypes.func,\n    rtl: PropTypes.bool,\n    draggable: PropTypes.bool,\n    draggablePercent: PropTypes.number,\n    pauseOnFocusLoss: PropTypes.bool,\n    enableMultiContainer: PropTypes.bool,\n    containerId: /*#__PURE__*/PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    role: PropTypes.string,\n    onClick: PropTypes.func\n  };\n}\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: 80,\n  role: 'alert'\n};\nvar containers = /*#__PURE__*/new Map();\nvar latestInstance;\nvar containerDomNode;\nvar containerConfig;\nvar queue = [];\nvar lazy = false;\n/**\r\n * Check whether any container is currently mounted in the DOM\r\n */\n\nfunction isAnyContainerMounted() {\n  return containers.size > 0;\n}\n/**\r\n * Get the container by id. Returns the last container declared when no id is given.\r\n */\n\n\nfunction getContainer(containerId) {\n  if (!isAnyContainerMounted()) return null;\n  return containers.get(!containerId ? latestInstance : containerId);\n}\n/**\r\n * Get the toast by id, given it's in the DOM, otherwise returns null\r\n */\n\n\nfunction getToast(toastId, _ref) {\n  var containerId = _ref.containerId;\n  var container = getContainer(containerId);\n  if (!container) return null;\n  return container.getToast(toastId);\n}\n/**\r\n * Generate a random toastId\r\n */\n\n\nfunction generateToastId() {\n  return (Math.random().toString(36) + Date.now().toString(36)).substr(2, 10);\n}\n/**\r\n * Generate a toastId or use the one provided\r\n */\n\n\nfunction getToastId(options) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n/**\r\n * If the container is not mounted, the toast is enqueued and\r\n * the container lazy mounted\r\n */\n\n\nfunction dispatchToast(content, options) {\n  if (isAnyContainerMounted()) {\n    eventManager.emit(0\n    /* Show */\n    , content, options);\n  } else {\n    queue.push({\n      content: content,\n      options: options\n    });\n\n    if (lazy && canUseDom) {\n      lazy = false;\n      containerDomNode = document.createElement('div');\n      document.body.appendChild(containerDomNode);\n      render(createElement(ToastContainer, Object.assign({}, containerConfig)), containerDomNode);\n    }\n  }\n\n  return options.toastId;\n}\n/**\r\n * Merge provided options with the defaults settings and generate the toastId\r\n */\n\n\nfunction mergeOptions(type, options) {\n  return _extends({}, options, {\n    type: options && options.type || type,\n    toastId: getToastId(options)\n  });\n}\n\nvar toast = function toast(content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n};\n\ntoast.success = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.SUCCESS, options));\n};\n\ntoast.info = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.INFO, options));\n};\n\ntoast.error = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.ERROR, options));\n};\n\ntoast.warning = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.WARNING, options));\n};\n\ntoast.dark = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.DARK, options));\n};\n/**\r\n * Maybe I should remove warning in favor of warn, I don't know\r\n */\n\n\ntoast.warn = toast.warning;\n/**\r\n * Remove toast programmaticaly\r\n */\n\ntoast.dismiss = function (id) {\n  return isAnyContainerMounted() && eventManager.emit(1\n  /* Clear */\n  , id);\n};\n/**\r\n * Clear waiting queue when limit is used\r\n */\n\n\ntoast.clearWaitingQueue = function (params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  return isAnyContainerMounted() && eventManager.emit(5\n  /* ClearWaitingQueue */\n  , params);\n};\n/**\r\n * return true if one container is displaying the toast\r\n */\n\n\ntoast.isActive = function (id) {\n  var isToastActive = false;\n  containers.forEach(function (container) {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n  return isToastActive;\n};\n\ntoast.update = function (toastId, options) {\n  if (options === void 0) {\n    options = {};\n  } // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n\n\n  setTimeout(function () {\n    var toast = getToast(toastId, options);\n\n    if (toast) {\n      var oldOptions = toast.props,\n          oldContent = toast.content;\n\n      var nextOptions = _extends({}, oldOptions, options, {\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      });\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n      var content = typeof nextOptions.render !== 'undefined' ? nextOptions.render : oldContent;\n      delete nextOptions.render;\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n/**\r\n * Used for controlled progress bar.\r\n */\n\n\ntoast.done = function (id) {\n  toast.update(id, {\n    progress: 1\n  });\n};\n/**\r\n * Track changes. The callback get the number of toast displayed\r\n *\r\n */\n\n\ntoast.onChange = function (callback) {\n  if (isFn(callback)) {\n    eventManager.on(4\n    /* Change */\n    , callback);\n  }\n\n  return function () {\n    isFn(callback) && eventManager.off(4\n    /* Change */\n    , callback);\n  };\n};\n/**\r\n * Configure the ToastContainer when lazy mounted\r\n */\n\n\ntoast.configure = function (config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  lazy = true;\n  containerConfig = config;\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n/**\r\n * Wait until the ToastContainer is mounted to dispatch the toast\r\n * and attach isActive method\r\n */\n\neventManager.on(2\n/* DidMount */\n, function (containerInstance) {\n  latestInstance = containerInstance.containerId || containerInstance;\n  containers.set(latestInstance, containerInstance);\n  queue.forEach(function (item) {\n    eventManager.emit(0\n    /* Show */\n    , item.content, item.options);\n  });\n  queue = [];\n}).on(3\n/* WillUnmount */\n, function (containerInstance) {\n  containers[\"delete\"](containerInstance.containerId || containerInstance);\n\n  if (containers.size === 0) {\n    eventManager.off(0\n    /* Show */\n    ).off(1\n    /* Clear */\n    ).off(5\n    /* ClearWaitingQueue */\n    );\n  }\n\n  if (canUseDom && containerDomNode) {\n    document.body.removeChild(containerDomNode);\n  }\n});\nexport { Bounce, Flip, Slide, ToastContainer, Zoom, collapseToast, cssTransition, toast, useToast, useToastContainer };"],"sourceRoot":""}