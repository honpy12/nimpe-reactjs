{"version":3,"sources":["app/views/sessions/SessionService.js","app/views/sessions/ForgotPassword.jsx"],"names":["__webpack_require__","d","__webpack_exports__","signUpAccount","checkuserName","checkEmail","forgotPassword","resetPassword","checkOTP","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","n","_appConfig__WEBPACK_IMPORTED_MODULE_1__","_appConfig__WEBPACK_IMPORTED_MODULE_1___default","API_PATH","ConstantList","API_ENPOINT","item","url","axios","post","config","params","userName","username","console","log","put","email","ForgotPassword","state","token","newPassword","confirmNewPassword","emailCorrect","handleChange","event","persist","_this","setState","Object","D_OceanTech_nimpe_Client_V2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","target","name","value","handleFormSubmit","e","props","t","D_OceanTech_nimpe_Client_V2_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","then","data","code","toast","success","setTimeout","history","push","ROOT_PATH","error","catch","err","message","reason","_reason$response","response","status","_this2","this","ValidatorForm","addValidationRule","removeValidationRule","_this3","_this$state","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","style","top","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","container","lg","md","sm","xs","src","alt","fontSize","paddingBottom","react_material_ui_form_validator__WEBPACK_IMPORTED_MODULE_11__","ref","onSubmit","size","variant","label","onChange","type","validators","errorMessages","Fragment","react__WEBPACK_IMPORTED_MODULE_6__","fallback","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","color","onClick","position","bottom","left","transform","react_router_dom__WEBPACK_IMPORTED_MODULE_17__","to","react_toastify__WEBPACK_IMPORTED_MODULE_16__","Component","withRouter","connect","PropTypes","func","isRequired","login"],"mappings":"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","file":"static/js/48.4854071d.chunk.js","sourcesContent":["import axios from \"axios\";\nimport ConstantList from \"../../appConfig\";\nconst API_PATH = ConstantList.API_ENPOINT + \"/public/api/\";\n\nexport const signUpAccount = item => {\n  var url = API_PATH + \"register\";\n  return axios.post(url, item);\n};\n\nexport const checkuserName = item => {  \n  const config = { params: { userName:  item.username } };\n  console.log(config)\n  var url = API_PATH + \"username\";\n  return axios.put(url,null,config);\n};\n\nexport const checkEmail = item => {\n  const config = { params: { email:  item.email } };\n  console.log(config)\n  var url = API_PATH + \"email\";\n  return axios.put(url, null, config);\n};\n\nexport const forgotPassword = email => {\n  let url = ConstantList.API_ENPOINT + '/public/api/forgot-password';\n  return axios.post(url, email);\n}\nexport const resetPassword = item => {\n  let url = 'http://localhost:8993/nimpe/public/api/OTP';\n  return axios.put(url, item);\n}\n\nexport const checkOTP = item => {\n  let url = ConstantList.API_ENPOINT + \"/public/api/OTP/register\"; \n  return axios.put(url, item);\n}","import React, { Component, Suspense } from \"react\";\nimport ConstantList from \"../../appConfig\";\nimport {\n  Card,\n  Grid,\n  Button,\n  withStyles,\n  CircularProgress\n} from \"@material-ui/core\";\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { forgotPassword, resetPassword } from './SessionService';\n// import { resetPassword } from \"../../redux/actions/LoginActions\";\nimport { toast, ToastContainer } from 'react-toastify';\nimport { Redirect, Link } from 'react-router-dom';\n\nclass ForgotPassword extends Component {\n  state = {\n    email: '',\n    token: '',\n    newPassword: '',\n    confirmNewPassword: '',\n    emailCorrect: false\n  };\n\n  componentDidMount() {\n    ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\n      if (value !== this.state.newPassword) {\n        return false;\n      }\n      return true;\n    });\n  }\n  handleChange = event => {\n    event.persist();\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleFormSubmit = (e) => {\n    let { t } = this.props;\n    if (!this.state.emailCorrect) {\n      forgotPassword({ email: this.state.email }).then((data) => {\n        console.log(data);\n        toast.success('Kiểm tra OTP trong email đăng ký');\n        this.setState({\n          emailCorrect: true\n        });\n      }).catch((reason) => {\n        if (reason.response?.status === 400) {\n          toast.error('Email không tồn tại');\n        } else {\n          toast.error('Có lỗi xảy ra');\n        }\n        console.log(reason.message);\n      })\n    }\n     else {\n      resetPassword({...this.state}).then((data) => {\n        console.log(data)\n        if(data.data.code === 200){\n        toast.success('Thay đổi mật khẩu thành công');\n        setTimeout(()=>{\n          this.props.history.push(ConstantList.ROOT_PATH + \"session/signin\")\n        }, 1000)\n        \n        }else{\n          toast.error(`Thông tin không chính xác`);\n        }\n      }).catch((err) => {\n        toast.error(err.message);\n      })\n    }\n  };\n  componentWillUnmount() {\n    // remove rule when it is not needed\n    ValidatorForm.removeValidationRule('isPasswordMatch');\n  }\n  render() {\n    let { email, emailCorrect, newPassword, confirmNewPassword, token } = this.state;\n    return (\n      <div className=\"signup flex flex-center w-100 h-100vh\">\n        <div className=\"p-8\">\n          <Card className=\"signup-card position-relative y-center\" style={{top:'25vh'}}>\n            <Grid container>\n              <Grid item lg={5} md={5} sm={5} xs={12}>\n                <div className=\"p-32 flex flex-center flex-middle h-100\">\n                  <img src={\"/assets/images/logos/logo_nimpe.jpg\"} alt=\"\" />\n                </div>\n              </Grid>\n              <Grid item lg={7} md={7} sm={7} xs={12}>\n                <div className=\"p-24 h-100 bg-light-gray position-relative\">\n                  <p style={{fontSize: '16px', paddingBottom: '20px'}}>Mời bạn nhập email để lấy lại mật khẩu: </p>\n                  <ValidatorForm ref=\"form\" onSubmit={(e) => this.handleFormSubmit(e)}>\n                    <TextValidator\n                      size=\"small\"\n                      className=\"mb-24 w-100\"\n                      variant=\"outlined\"\n                      label=\"Email\"\n                      onChange={this.handleChange}\n                      type=\"email\"\n                      name=\"email\"\n                      value={email}\n                      validators={[\"required\", \"isEmail\"]}\n                      errorMessages={[\n                        \"this field is required\",\n                        \"email is not valid\"\n                      ]}\n                    />\n                    {\n                      emailCorrect && <>\n                        <TextValidator\n                          size=\"small\"\n                          className=\"mb-24 w-100\"\n                          variant=\"outlined\"\n                          label=\"OTP\"\n                          onChange={this.handleChange}\n                          type=\"text\"\n                          name=\"token\"\n                          value={token}\n                          validators={[\"required\"]}\n                          errorMessages={[\n                            \"this field is required\"\n                          ]}\n                        />\n                        <TextValidator\n                          size=\"small\"\n                          className=\"mb-24 w-100\"\n                          variant=\"outlined\"\n                          label=\"Mật khẩu\"\n                          onChange={this.handleChange}\n                          type=\"password\"\n                          name=\"newPassword\"\n                          value={newPassword}\n                          validators={[\"required\", \"matchRegexp:^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\"]}\n                          errorMessages={[\n                            \"this field is required\", 'Mật khẩu có 8 ký tự bao gồm: Chữ hoa, chữ thường, số và ký tự đặc biệt'\n                          ]}\n                        />\n\n                        <TextValidator\n                          size=\"small\"\n                          className=\"mb-24 w-100\"\n                          variant=\"outlined\"\n                          label=\"Nhập lại mật khẩu\"\n                          onChange={this.handleChange}\n                          type=\"password\"\n                          name=\"confirmNewPassword\"\n                          value={confirmNewPassword}\n                          validators={[\"isPasswordMatch\", \"required\"]}\n                          errorMessages={[\n                            \"Mật khẩu không khớp\", \"this field is required\"\n                          ]}\n                        />\n                      </>\n                    }\n                    <div className=\"flex flex-middle\">\n                      <Suspense fallback={<h1>loading</h1>}>\n                        <Button variant=\"contained\" color=\"primary\" type=\"button\" onClick={this.handleFormSubmit}>\n                          Lấy lại mật khẩu\n                        </Button>\n                      </Suspense>\n                    </div>\n                    <p className=\"text-muted\" style={{ position: \"absolute\", bottom: \"0\",  left: \"40%\", transform: \"translateX(-40%)\"}}>\n                      Bạn đã có tài khoản?  \n                      <Link to=\"/session/signin\" className=\"text-primary font-weight-bold ml-10\">\n                        Đăng nhập\n                      </Link>\n                    </p>\n                  </ValidatorForm>\n                </div>\n              </Grid>\n            </Grid>\n          </Card>\n        </div>\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  resetPassword: PropTypes.func.isRequired,\n  login: state.login\n});\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    { resetPassword }\n  )(ForgotPassword)\n);\n"],"sourceRoot":""}