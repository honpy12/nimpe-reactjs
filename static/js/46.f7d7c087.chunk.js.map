{"version":3,"sources":["app/views/CountNotificationChart/CountNofiticationService.js","app/views/CountNotificationChart/CountNotificationChart.jsx","app/views/CountNotificationChart/CountNotification.jsx"],"names":["STATICS_URL","ConstantList","API_ENPOINT","getCountNotifyByDay","month","year","axios","get","concat","getCountNotifyByMonth","CountNotificationChart","props","_this","Object","classCallCheck","this","_super","call","handleChange","e","t","setState","typeView","target","value","updatePageData","state","setTimeout","highChartsRender","categories","series","Highcharts","chart","type","title","text","style","fontWeight","fontFamily","yAxis","xAxis","plotOptions","label","connectorAllowed","pointStart","name","data","map","item","total","responsive","rules","condition","maxWidth","chartOptions","legend","layout","align","verticalAlign","_this2","_this$props","react_default","a","createElement","FormControl","component","flexDirection","alignItems","FormLabel","marginRight","RadioGroup","aria-label","row","onChange","FormControlLabel","control","Radio","id","className","Component","CountNotification","arguments","length","undefined","d","Date","times","getMonth","getFullYear","then","_ref","_ref2","onHandleDateChange","date","keyDate","now","_this$state","Helmet","egret","routeSegments","Grid","container","spacing","md","fontSize","padding","paddingLeft","entry_default","locale","format","maxDetail","closeCalendar","clearIcon","calendarClassName","calendarIcon","Today","sm","Card","elevation","CountNotificationChart_CountNotificationChart","index"],"mappings":"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","file":"static/js/46.f7d7c087.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport ConstantList from \"../../appConfig\";\r\n\r\nconst STATICS_URL = ConstantList.API_ENPOINT + \"/api/NotificationStatistics\";\r\n\r\nexport const getCountNotifyByDay = (month, year) =>\r\n\taxios.get(STATICS_URL + `/StatisticsByDay/${month}/${year}`);\r\n\r\nexport const getCountNotifyByMonth = year =>\r\n\taxios.get(STATICS_URL + `/StatisticsByMonth/${year}`);\r\n","import {\r\n\tFormControl,\r\n\tFormControlLabel,\r\n\tFormLabel,\r\n\tRadio,\r\n\tRadioGroup,\r\n} from \"@material-ui/core\";\r\nimport Highcharts from \"highcharts\";\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class CountNotificationChart extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tlet { t } = this.props;\r\n\t\tthis.state = {\r\n\t\t\tcategories: [],\r\n\t\t\tseries: [],\r\n\t\t\ttypeView: \"month\",\r\n\t\t};\r\n\t}\r\n\r\n\thighChartsRender(t) {\r\n\t\tHighcharts.chart(\"container\", {\r\n\t\t\tchart: {\r\n\t\t\t\ttype: \"spline\",\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\ttext: t(\"countChart\"),\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tfontWeight: \"700\",\r\n\t\t\t\t\tfontFamily: \"Arial\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tyAxis: {\r\n\t\t\t\ttitle: {\r\n\t\t\t\t\ttext: t(\"countAlert\"),\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\txAxis: {\r\n\t\t\t\tcategories: this.state.categories,\r\n\t\t\t\ttitle: t(\"time\"),\r\n\t\t\t\t// min: 0,\r\n\t\t\t\t// // softMin: 0,\r\n\t\t\t\t// max: 31,\r\n\t\t\t},\r\n\t\t\tplotOptions: {\r\n\t\t\t\tseries: {\r\n\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\tconnectorAllowed: false,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpointStart: 0,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tseries: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: t(\"countAlert\"),\r\n\t\t\t\t\tdata: this.state.series.map(item => item.total),\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\tresponsive: {\r\n\t\t\t\trules: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcondition: {\r\n\t\t\t\t\t\t\tmaxWidth: 500,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tchartOptions: {\r\n\t\t\t\t\t\t\tlegend: {\r\n\t\t\t\t\t\t\t\tlayout: \"horizontal\",\r\n\t\t\t\t\t\t\t\talign: \"center\",\r\n\t\t\t\t\t\t\t\tverticalAlign: \"bottom\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { categories, series, t } = this.props;\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tcategories: categories,\r\n\t\t\t\tseries: series,\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tthis.highChartsRender(t);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tconst { t } = this.props;\r\n\t\tthis.highChartsRender(t);\r\n\t}\r\n\r\n\tstatic getDerivedStateFromProps(props, state) {\r\n\t\tif (\r\n\t\t\tstate.categories !== props.categories ||\r\n\t\t\tstate.series !== props.series\r\n\t\t) {\r\n\t\t\treturn {\r\n\t\t\t\tcategories: props.categories,\r\n\t\t\t\tseries: props.series,\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\thandleChange = e => {\r\n\t\tconst { t } = this.props;\r\n\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\ttypeView: e.target.value,\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tthis.props.updatePageData(this.state.typeView);\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.highChartsRender(t);\r\n\t\t\t\t}, 200);\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { typeView } = this.state;\r\n\t\tconst { t } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\tcomponent=\"fieldset\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tflexDirection: \"row\",\r\n\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FormLabel style={{ marginRight: \"16px\" }}>\r\n\t\t\t\t\t\t\t{t(\"displayData\")}\r\n\t\t\t\t\t\t</FormLabel>\r\n\t\t\t\t\t\t<RadioGroup\r\n\t\t\t\t\t\t\taria-label=\"gender\"\r\n\t\t\t\t\t\t\trow\r\n\t\t\t\t\t\t\tname=\"gender1\"\r\n\t\t\t\t\t\t\tvalue={typeView}\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\tvalue=\"month\"\r\n\t\t\t\t\t\t\t\tcontrol={<Radio />}\r\n\t\t\t\t\t\t\t\tlabel={t(\"month\")}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\tvalue=\"year\"\r\n\t\t\t\t\t\t\t\tcontrol={<Radio />}\r\n\t\t\t\t\t\t\t\tlabel={t(\"year\")}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"container\" className=\"pr-24\"></div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import { Card, CardContent, Grid } from \"@material-ui/core\";\r\nimport { Today } from \"@material-ui/icons\";\r\nimport \"date-fns\";\r\nimport { Breadcrumb } from \"egret\";\r\nimport React, { Component } from \"react\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport \"../dashboard/style.css\";\r\nimport {\r\n\tgetCountNotifyByDay,\r\n\tgetCountNotifyByMonth,\r\n} from \"./CountNofiticationService\";\r\nimport CartCount from \"./CountNotificationChart\";\r\n\r\nclass CountNotification extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tdata: [],\r\n\t\t\tkeyDate: Date.now(),\r\n\t\t\ttimes: new Date(),\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.updatePageData();\r\n\t}\r\n\r\n\tupdatePageData = (typeView = \"month\") => {\r\n\t\tvar d = new Date(this.state.times);\r\n\t\tif (typeView === \"month\") {\r\n\t\t\tgetCountNotifyByDay(d.getMonth() + 1, d.getFullYear()).then(\r\n\t\t\t\t({ data }) => {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tdata,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tgetCountNotifyByMonth(d.getFullYear()).then(({ data }) =>\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tdata,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tonHandleDateChange = date => {\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\ttimes: date,\r\n\t\t\t\tseries: null,\r\n\t\t\t\tcategories: null,\r\n\t\t\t\tdata: [],\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tthis.updatePageData();\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\trender() {\r\n\t\tlet { times, data } = this.state;\r\n\r\n\t\tlet { t } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"analytics m-sm-30\">\r\n\t\t\t\t<Helmet>\r\n\t\t\t\t\t<title>\r\n\t\t\t\t\t\t{t(\"manage.countNotification\")} |{\" \"}\r\n\t\t\t\t\t\t{t(\"manage.countNotification\")}\r\n\t\t\t\t\t</title>\r\n\t\t\t\t</Helmet>\r\n\r\n\t\t\t\t<div className=\"mb-sm-30\">\r\n\t\t\t\t\t<Breadcrumb\r\n\t\t\t\t\t\trouteSegments={[\r\n\t\t\t\t\t\t\t{ name: t(\"manage.countNotification\") },\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t<Grid item md={12}>\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tfontWeight: \"600\",\r\n\t\t\t\t\t\t\t\tfontSize: \"20px\",\r\n\t\t\t\t\t\t\t\tpadding: \"15px\",\r\n\t\t\t\t\t\t\t\tpaddingLeft: 0,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t{t(\"Dashboard.timeToResult\")} : {t(\"month\")}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\tonChange={this.onHandleDateChange}\r\n\t\t\t\t\t\t\t\tclassName=\"ml-8\"\r\n\t\t\t\t\t\t\t\tvalue={times}\r\n\t\t\t\t\t\t\t\tlocale=\"vi-VN\"\r\n\t\t\t\t\t\t\t\tformat=\"MM/yyyy\"\r\n\t\t\t\t\t\t\t\tmaxDetail=\"year\"\r\n\t\t\t\t\t\t\t\tcloseCalendar\r\n\t\t\t\t\t\t\t\tclearIcon={null}\r\n\t\t\t\t\t\t\t\tcalendarClassName=\"month-picker\"\r\n\t\t\t\t\t\t\t\tcalendarIcon={<Today />}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item sm={12} md={12}>\r\n\t\t\t\t\t\t<Card elevation={2} className=\"h-100 p-20\">\r\n\t\t\t\t\t\t\t{data && data.length > 0 && (\r\n\t\t\t\t\t\t\t\t<CartCount\r\n\t\t\t\t\t\t\t\t\tt={t}\r\n\t\t\t\t\t\t\t\t\tcategories={data.map(\r\n\t\t\t\t\t\t\t\t\t\t(item, index) => index + 1\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\tseries={data}\r\n\t\t\t\t\t\t\t\t\tupdatePageData={this.updatePageData}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CountNotification;\r\n"],"sourceRoot":""}