{"version":3,"sources":["app/views/Component/Loading/SquareLoading.jsx","app/views/Map/MapServices.js","app/views/Map/Pin_layer_patient.jsx","app/views/Map/Pin_layer_vector.jsx","app/views/Map/Patient_Infor.jsx","app/views/Map/Map.jsx"],"names":["__webpack_require__","d","__webpack_exports__","SquareLoading","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","a","createElement","id","getListPatient","searchObject","config","params","month","year","axios","get","ConstantList","API_ENPOINT","getListVector","Pin_layer_patient","onClick","this","props","react_default","class","className","PureComponent","Pin_layer_vector","Infor","_this$props","infor","_type","address","DengueMapComponent","_this","Object","classCallCheck","_super","call","setListPatient","data","setState","listPatient","setListVector","listVector","listPatientError","loading","listVectorError","pinAboutPatientAndVector","moment","state","selectedMonth","format","then","res","catch","error","Promise","reject","onClosePopup","showPopup","handleDateChange","date","viewFullScreen","elem","document","getElementById","requestFullscreen","fullScreen","webkitRequestFullscreen","msRequestFullscreen","exitFullScreen","window","exitFullscreen","success","console","log","viewport","longitude","latitude","zoom","Date","patientInfor","vectorInfor","_this2","esm","tipSize","anchor","parseFloat","closeOnClick","onClose","Patient_Infor_Infor","_this3","_this4","_this$state","t","markersPatient","map","patient","key","name","Pin_layer_patient_Pin_layer_patient","markersVector","vector","Pin_layer_vector_Pin_layer_vector","Helmet","style","position","top","left","zIndex","backgroundColor","height","padding","margin","display","borderRadius","flexDirection","entry_default","onChange","event","value","locale","maxDetail","closeCalendar","clearIcon","calendarClassName","calendarIcon","Today","Button","color","variant","startIcon","Fullscreen","width","flex","assign","mapStyle","mapboxApiAccessToken","onViewportChange","attributionControl","onMapClick","transitionDuration","transitionInterpolator","FlyToInterpolator","onLoad","Patient_renderPopup","Vector_renderPopup","right"],"mappings":"4FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAA,UAAAI,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAGe,SAASD,IACvB,OAAOE,EAAAE,EAAAC,cAAA,OAAKC,GAAG,iUCDHC,EAAiB,SAACC,GAC9B,IAAMC,EAAS,CAAEC,OAAQ,CAAEC,MAAQH,EAAaG,MAAOC,KAAOJ,EAAaI,OAC3E,OAAOC,IAAMC,IAAIC,IAAaC,YAAb,sCAAiEP,IAGtEQ,EAAgB,SAACT,GAC7B,IAAMC,EAAS,CAAEC,OAAQ,CAAEC,MAAQH,EAAaG,MAAOC,KAAOJ,EAAaI,OAC3E,OAAOC,IAAMC,IAAIC,IAAaC,YAAb,mDAA8EP,ICN3ES,uKACnB,WACI,IAAOC,EAAWC,KAAKC,MAAhBF,QACT,OACEG,EAAAlB,EAAAC,cAAA,OAAKkB,MAAM,iBACPD,EAAAlB,EAAAC,cAAA,OAAKmB,UAAU,eAAeL,QAASA,YALFM,kBCD1BC,8JACjB,WACI,IAAOP,EAAWC,KAAKC,MAAhBF,QACT,OACEG,EAAAlB,EAAAC,cAAA,OAAKkB,MAAM,gBACPD,EAAAlB,EAAAC,cAAA,OAAKmB,UAAU,cAAcL,QAASA,YALJM,iBCAzBE,8JACjB,WACE,IAAAC,EAAiCR,KAAKC,MAA9BQ,EAARD,EAAQC,MAAOC,EAAfF,EAAeE,MAAfF,EAAsBT,QAEtB,OACEG,EAAAlB,EAAAC,cAAA,WACMyB,EADN,YACiB,IAAKD,EAAME,gBANDN,2BCqB7BO,oDACL,SAAAA,EAAYX,GAAO,IAAAY,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAd,KAAAY,IAClBC,EAAAG,EAAAC,KAAAjB,KAAMC,IAoBPiB,eAAiB,SAAAC,GAChBN,EAAKO,SAAS,CACbC,YAAaF,KAvBIN,EA2BnBS,cAAgB,SAAAH,GACfN,EAAKO,SAAS,CACbG,WAAYJ,KA7BKN,EAiCnBW,iBAAmB,WAClBX,EAAKO,SAAS,CACbK,SAAS,EACTJ,YAAa,MApCIR,EAwCnBa,gBAAkB,WACjBb,EAAKO,SAAS,CACbK,SAAS,EACTF,WAAY,MA3CKV,EA+CnBc,yBAA2B,WAC1Bd,EAAKO,SAAS,CACbK,SAAS,IAEV,IAAIrC,EAAe,GACb8B,EAAiBL,EAAKK,eACtBI,EAAgBT,EAAKS,cACrBE,EAAmBX,EAAKW,iBACxBE,EAAkBb,EAAKa,gBAC7BtC,EAAaI,KAAOoC,IAAOf,EAAKgB,MAAMC,eAAeC,OAAO,QAC5D3C,EAAaG,MAAQqC,IAAOf,EAAKgB,MAAMC,eAAeC,OAAO,MAE7D5C,EAAeC,GACb4C,KAAK,SAAAC,GACL,IAAId,EAAOc,EAAId,KACfD,EAAeC,GACfN,EAAKO,SAAS,CACbK,SAAS,MAGVS,MAAM,SAAUC,GAEhB,OADAX,IACOY,QAAQC,OAAOF,KAExBtC,EAAcT,GACZ4C,KAAK,SAAAC,GACL,IAAId,EAAOc,EAAId,KACfN,EAAKO,SAAS,CACbK,SAAS,IAEVH,EAAcH,KAEde,MAAM,SAAUC,GAEhB,OADAT,IACOU,QAAQC,OAAOF,MAjFNtB,EAyFnByB,aAAe,WACdzB,EAAKO,SAAS,CAAEmB,WAAW,KA1FT1B,EA6FnB2B,iBAAmB,SAAAC,GAClB5B,EAAKO,SACJ,CACCU,cAAeW,GAEhB,kBAAM5B,EAAKc,8BAlGMd,EAsGnB6B,eAAiB,WAChB,IAAMC,EAAOC,SAASC,eAAe,eACjCF,EAAKG,mBACRH,EAAKG,oBACLjC,EAAKO,SAAS,CACb2B,YAAY,KAEHJ,EAAKK,yBACfL,EAAKK,0BACLnC,EAAKO,SAAS,CACb2B,YAAY,KAEHJ,EAAKM,sBACfN,EAAKM,sBACLpC,EAAKO,SAAS,CACb2B,YAAY,MArHIlC,EA0HnBqC,eAAiB,WAChBC,OAAOP,SAASQ,iBAAiBpB,KAAK,SAAAqB,GAAO,OAAIC,QAAQC,IAAIF,KAE7DxC,EAAKO,SAAS,CACb2B,YAAY,KA3HblC,EAAKgB,MAAQ,CACZ2B,SAAU,CACTC,UAAW,YACXC,SAAU,WACVC,KAAM,IAEPF,UAAW,YACXC,SAAU,WACV5B,cAAe,IAAI8B,KACnBb,YAAY,EACZ1B,YAAa,GACbE,WAAY,GACZsC,aAAc,KACdC,YAAa,KACbrC,SAAS,GAjBQZ,uDAqFnB,WACCb,KAAK2B,8DA4CN,WAAsB,IAAAoC,EAAA/D,KACb6D,EAAiB7D,KAAK6B,MAAtBgC,aAER,OACCA,GACC3D,EAAAlB,EAAAC,cAAC+E,EAAA,EAAD,CACCC,QAAS,EACTC,OAAO,MACPT,UAAWU,WAAWN,EAAaJ,WACnCC,SAAUS,WAAWN,EAAaH,UAClCU,cAAc,EACdC,QAAS,kBAAMN,EAAK3C,SAAS,CAAEyC,aAAc,SAE7C3D,EAAAlB,EAAAC,cAACqF,EAAD,CAAO7D,MAAOoD,EAAcnD,MAAM,oDAMtC,WAAqB,IAAA6D,EAAAvE,KACZ8D,EAAgB9D,KAAK6B,MAArBiC,YAER,OACCA,GACC5D,EAAAlB,EAAAC,cAAC+E,EAAA,EAAD,CACCC,QAAS,EACTC,OAAO,MACPT,UAAWU,WAAWL,EAAYL,WAClCC,SAAUS,WAAWL,EAAYJ,UACjCU,cAAc,EACdC,QAAS,kBAAME,EAAKnD,SAAS,CAAE0C,YAAa,SAE5C5D,EAAAlB,EAAAC,cAACqF,EAAD,CAAO7D,MAAOqD,EAAapD,MAAM,wDASrC,WAAS,IAAA8D,EAAAxE,KACRyE,EAOIzE,KAAK6B,MANR2B,EADDiB,EACCjB,SACA1B,EAFD2C,EAEC3C,cACAiB,EAHD0B,EAGC1B,WACA1B,EAJDoD,EAICpD,YACAE,EALDkD,EAKClD,WACAE,EANDgD,EAMChD,QAGOiD,EAAM1E,KAAKC,MAAXyE,EAEFC,EAAiBtD,EAAYuD,IAAI,SAAAC,GAAO,OAC7C3E,EAAAlB,EAAAC,cAAC+E,EAAA,EAAD,CACCc,IAAKD,EAAQE,KACbtB,UAAWU,WAAWU,EAAQpB,WAC9BC,SAAUS,WAAWU,EAAQnB,WAE7BxD,EAAAlB,EAAAC,cAAC+F,EAAD,CACCjF,QAAS,kBAAMyE,EAAKpD,SAAS,CAAEyC,aAAcgB,UAI1CI,EAAgB1D,EAAWqD,IAAI,SAAAM,GAAM,OAC1ChF,EAAAlB,EAAAC,cAAC+E,EAAA,EAAD,CACCc,IAAKI,EAAOH,KACZtB,UAAWU,WAAWe,EAAOzB,WAC7BC,SAAUS,WAAWe,EAAOxB,WAE5BxD,EAAAlB,EAAAC,cAACkG,EAAD,CACCpF,QAAS,kBAAMyE,EAAKpD,SAAS,CAAE0C,YAAaoB,UAK/C,OACChF,EAAAlB,EAAAC,cAAA,OAAKmB,UAAU,OAAOlB,GAAG,eACxBgB,EAAAlB,EAAAC,cAACmG,EAAA,OAAD,KACClF,EAAAlB,EAAAC,cAAA,aACE,+CADF,MAC4B,qBAG7BiB,EAAAlB,EAAAC,cAAA,OACCoG,MAAO,CACNC,SAAU,WACVC,IAAK,IACLC,KAAM,IACNC,OAAQ,MACRC,gBAAiB,OACjBC,OAAQ,OACRC,QAAS,sBACTC,OAAQ,MACRC,QAAS,OACTC,aAAc,OACdC,cAAe,WAGhB9F,EAAAlB,EAAAC,cAACgH,EAAAjH,EAAD,CACCkH,SAAU,SAAAC,GAAK,OAAI3B,EAAKhC,iBAAiB2D,IAEzCC,MAAOtE,EACPuE,OAAO,QACPtE,OAAO,SACPuE,UAAU,OACVC,eAAa,EACbC,UAAW,KACXC,kBAAkB,eAClBC,aAAcxG,EAAAlB,EAAAC,cAAC0H,EAAA,EAAD,QAGfzG,EAAAlB,EAAAC,cAAC2H,EAAA,EAAD,CACC7G,SACgB,IAAfgD,EACG/C,KAAKkD,eACLlD,KAAK0C,eAETmE,MAAO9D,EAAa,YAAc,UAClC+D,QAAQ,YACR1G,UAAU,QACV2G,UAAW7G,EAAAlB,EAAAC,cAAC+H,EAAA,EAAD,OAGRtC,GADa,IAAf3B,EACI,iBACA,gBAGP7C,EAAAlB,EAAAC,cAAA,OACCoG,MAAO,CACN4B,MAAO,OACPtB,OAAQ,QACRuB,KAAM,IACN5B,SAAU,aAGV7D,GAAWvB,EAAAlB,EAAAC,cAACL,EAAA,EAAD,MAEZsB,EAAAlB,EAAAC,cAAC+E,EAAA,EAADlD,OAAAqG,OAAA,GACK3D,EADL,CAECyD,MAAM,OACNtB,OAAO,OACPyB,SAAS,qCACTC,qBAnRL,2FAoRKC,iBAAkB,SAAA9D,GAAQ,OACzBgB,EAAKpD,SAAS,CAAEoC,cAEjB+D,oBAAoB,EACpBxH,QAASC,KAAKwH,WACdC,mBAAoB,IACpBC,uBAAwB,IAAIC,IAC5BC,OAAQ,kBACPpD,EAAKpD,SAAS,CACbK,SAAS,OAIVkD,EACAM,EACAjF,KAAK6H,sBACL7H,KAAK8H,qBAEN5H,EAAAlB,EAAAC,cAAC+E,EAAA,EAAD,CACCqB,MAAO,CACNE,IAAK,GACLwC,MAAO,gBAvSkB1H,iBAiTlBO","file":"static/js/38.d466239f.chunk.js","sourcesContent":["import \"./squareLoading.css\";\r\nimport React from \"react\";\r\n\r\nexport default function SquareLoading() {\r\n\treturn <div id=\"squareLoading\"></div>;\r\n}\r\n","import axios from \"axios\";\r\nimport ConstantList from \"../../appConfig\";\r\n\r\nexport const getListPatient = (searchObject) => {\r\n\tconst config = { params: { month : searchObject.month, year:  searchObject.year} };\r\n\treturn axios.get(ConstantList.API_ENPOINT + `/api/patientInformation/listPatient`,config)\r\n}\r\n\r\nexport const getListVector = (searchObject) => {\r\n\tconst config = { params: { month : searchObject.month, year:  searchObject.year} };\r\n\treturn axios.get(ConstantList.API_ENPOINT + `/api/dengue-location-item/listDengueLocationItem`,config)\r\n}","import React, { PureComponent } from \"react\";\r\nimport Pin_style from \"./Pin_style.css\"\r\n\r\n\r\nexport default class Pin_layer_patient extends PureComponent {\r\n  render() {\r\n      const {onClick} = this.props;\r\n    return (\r\n      <div class=\"layer_patient\">\r\n          <div className=\"tear_patient\" onClick={onClick}>\r\n              \r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n  \r\n\r\n","import React, { PureComponent } from \"react\";\r\nimport Pin_style from \"./Pin_style.css\"\r\n\r\nexport default class Pin_layer_vector extends PureComponent {\r\n    render() {\r\n        const {onClick} = this.props;\r\n      return (\r\n        <div class=\"layer_vector\">\r\n            <div className=\"tear_vector\" onClick={onClick}>\r\n                \r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n  }","import {getListPatient, getListVector} from \"./MapServices\";\r\nimport React, { PureComponent } from \"react\";\r\n\r\nexport default class Infor extends PureComponent {\r\n    render() {\r\n      const { infor, _type, onClick} = this.props;\r\n  \r\n      return (\r\n        <div>\r\n             {_type} táº¡i{\" \"}{infor.address}\r\n             \r\n        </div>\r\n      );\r\n    }\r\n  }","import \"./MapStyle.css\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Fullscreen, Today } from \"@material-ui/icons\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport React, { PureComponent } from \"react\";\r\nimport moment from \"moment\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport ReactMapGL, {\r\n\tNavigationControl,\r\n\tPopup,\r\n\tMarker,\r\n\tFlyToInterpolator,\r\n} from \"react-map-gl\";\r\nimport { getListPatient, getListVector } from \"./MapServices\";\r\n//import {Pin_layer_patient, Pin_layer_vector} from \"./Pin_layer\";\r\nimport Pin_layer_patient from \"./Pin_layer_patient\";\r\nimport Pin_layer_vector from \"./Pin_layer_vector\";\r\nimport Infor from \"./Patient_Infor\";\r\nimport SquareLoading from \"../Component/Loading/SquareLoading\";\r\n\r\nconst MAPBOX_TOKEN =\r\n\t\"pk.eyJ1IjoibWVvMTIzIiwiYSI6ImNrdTI2MTQzZzBoNzMyd3FrNWVpc3U1YjEifQ.zj-vYL4EgQI83LzH8w8n6g\";\r\n\r\nclass DengueMapComponent extends PureComponent {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tviewport: {\r\n\t\t\t\tlongitude: 105.7933994,\r\n\t\t\t\tlatitude: 21.0282951,\r\n\t\t\t\tzoom: 14,\r\n\t\t\t},\r\n\t\t\tlongitude: 105.7926785,\r\n\t\t\tlatitude: 21.0283643,\r\n\t\t\tselectedMonth: new Date(),\r\n\t\t\tfullScreen: false,\r\n\t\t\tlistPatient: [],\r\n\t\t\tlistVector: [],\r\n\t\t\tpatientInfor: null,\r\n\t\t\tvectorInfor: null,\r\n\t\t\tloading: true,\r\n\t\t};\r\n\t}\r\n\r\n\tsetListPatient = data => {\r\n\t\tthis.setState({\r\n\t\t\tlistPatient: data,\r\n\t\t});\r\n\t};\r\n\r\n\tsetListVector = data => {\r\n\t\tthis.setState({\r\n\t\t\tlistVector: data,\r\n\t\t});\r\n\t};\r\n\r\n\tlistPatientError = () => {\r\n\t\tthis.setState({\r\n\t\t\tloading: false,\r\n\t\t\tlistPatient: [],\r\n\t\t});\r\n\t};\r\n\r\n\tlistVectorError = () => {\r\n\t\tthis.setState({\r\n\t\t\tloading: false,\r\n\t\t\tlistVector: [],\r\n\t\t});\r\n\t};\r\n\r\n\tpinAboutPatientAndVector = () => {\r\n\t\tthis.setState({\r\n\t\t\tloading: true,\r\n\t\t});\r\n\t\tlet searchObject = {};\r\n\t\tconst setListPatient = this.setListPatient;\r\n\t\tconst setListVector = this.setListVector;\r\n\t\tconst listPatientError = this.listPatientError;\r\n\t\tconst listVectorError = this.listVectorError;\r\n\t\tsearchObject.year = moment(this.state.selectedMonth).format(\"yyyy\");\r\n\t\tsearchObject.month = moment(this.state.selectedMonth).format(\"MM\");\r\n\r\n\t\tgetListPatient(searchObject)\r\n\t\t\t.then(res => {\r\n\t\t\t\tlet data = res.data;\r\n\t\t\t\tsetListPatient(data);\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tlistPatientError();\r\n\t\t\t\treturn Promise.reject(error);\r\n\t\t\t});\r\n\t\tgetListVector(searchObject)\r\n\t\t\t.then(res => {\r\n\t\t\t\tlet data = res.data;\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t});\r\n\t\t\t\tsetListVector(data);\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\tlistVectorError();\r\n\t\t\t\treturn Promise.reject(error);\r\n\t\t\t});\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.pinAboutPatientAndVector();\r\n\t}\r\n\r\n\tonClosePopup = () => {\r\n\t\tthis.setState({ showPopup: false });\r\n\t};\r\n\r\n\thandleDateChange = date => {\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tselectedMonth: date,\r\n\t\t\t},\r\n\t\t\t() => this.pinAboutPatientAndVector()\r\n\t\t);\r\n\t};\r\n\r\n\tviewFullScreen = () => {\r\n\t\tconst elem = document.getElementById(\"map-wrapper\");\r\n\t\tif (elem.requestFullscreen) {\r\n\t\t\telem.requestFullscreen();\r\n\t\t\tthis.setState({\r\n\t\t\t\tfullScreen: true,\r\n\t\t\t});\r\n\t\t} else if (elem.webkitRequestFullscreen) {\r\n\t\t\telem.webkitRequestFullscreen();\r\n\t\t\tthis.setState({\r\n\t\t\t\tfullScreen: true,\r\n\t\t\t});\r\n\t\t} else if (elem.msRequestFullscreen) {\r\n\t\t\telem.msRequestFullscreen();\r\n\t\t\tthis.setState({\r\n\t\t\t\tfullScreen: true,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\texitFullScreen = () => {\r\n\t\twindow.document.exitFullscreen().then(success => console.log(success));\r\n\r\n\t\tthis.setState({\r\n\t\t\tfullScreen: false,\r\n\t\t});\r\n\t};\r\n\r\n\tPatient_renderPopup() {\r\n\t\tconst { patientInfor } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\tpatientInfor && (\r\n\t\t\t\t<Popup\r\n\t\t\t\t\ttipSize={5}\r\n\t\t\t\t\tanchor=\"top\"\r\n\t\t\t\t\tlongitude={parseFloat(patientInfor.longitude)}\r\n\t\t\t\t\tlatitude={parseFloat(patientInfor.latitude)}\r\n\t\t\t\t\tcloseOnClick={false}\r\n\t\t\t\t\tonClose={() => this.setState({ patientInfor: null })}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Infor infor={patientInfor} _type=\"Ca bá»nh\" />\r\n\t\t\t\t</Popup>\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\tVector_renderPopup() {\r\n\t\tconst { vectorInfor } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\tvectorInfor && (\r\n\t\t\t\t<Popup\r\n\t\t\t\t\ttipSize={5}\r\n\t\t\t\t\tanchor=\"top\"\r\n\t\t\t\t\tlongitude={parseFloat(vectorInfor.longitude)}\r\n\t\t\t\t\tlatitude={parseFloat(vectorInfor.latitude)}\r\n\t\t\t\t\tcloseOnClick={false}\r\n\t\t\t\t\tonClose={() => this.setState({ vectorInfor: null })}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Infor infor={vectorInfor} _type=\"Vector truyá»n bá»nh\" />\r\n\t\t\t\t</Popup>\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\t// metersToPixelsAtMaxZoom = (meters, latitude) =>\r\n\t//   meters / 0.075 / Math.cos((latitude * Math.PI) / 180);\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tviewport,\r\n\t\t\tselectedMonth,\r\n\t\t\tfullScreen,\r\n\t\t\tlistPatient,\r\n\t\t\tlistVector,\r\n\t\t\tloading,\r\n\t\t} = this.state;\r\n\r\n\t\tconst { t } = this.props;\r\n\r\n\t\tconst markersPatient = listPatient.map(patient => (\r\n\t\t\t<Marker\r\n\t\t\t\tkey={patient.name}\r\n\t\t\t\tlongitude={parseFloat(patient.longitude)}\r\n\t\t\t\tlatitude={parseFloat(patient.latitude)}\r\n\t\t\t>\r\n\t\t\t\t<Pin_layer_patient\r\n\t\t\t\t\tonClick={() => this.setState({ patientInfor: patient })}\r\n\t\t\t\t/>\r\n\t\t\t</Marker>\r\n\t\t));\r\n\t\tconst markersVector = listVector.map(vector => (\r\n\t\t\t<Marker\r\n\t\t\t\tkey={vector.name}\r\n\t\t\t\tlongitude={parseFloat(vector.longitude)}\r\n\t\t\t\tlatitude={parseFloat(vector.latitude)}\r\n\t\t\t>\r\n\t\t\t\t<Pin_layer_vector\r\n\t\t\t\t\tonClick={() => this.setState({ vectorInfor: vector })}\r\n\t\t\t\t/>\r\n\t\t\t</Marker>\r\n\t\t));\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"flex\" id=\"map-wrapper\">\r\n\t\t\t\t<Helmet>\r\n\t\t\t\t\t<title>\r\n\t\t\t\t\t\t{\"Báº£n Äá» Äiá»u tra SXH\"} | {\"Facility Service\"}\r\n\t\t\t\t\t</title>\r\n\t\t\t\t</Helmet>\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\ttop: \"0\",\r\n\t\t\t\t\t\tleft: \"0\",\r\n\t\t\t\t\t\tzIndex: \"999\",\r\n\t\t\t\t\t\tbackgroundColor: \"#fff\",\r\n\t\t\t\t\t\theight: \"25vh\",\r\n\t\t\t\t\t\tpadding: \"30px 20px 20px 20px\",\r\n\t\t\t\t\t\tmargin: \"5px\",\r\n\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\tborderRadius: \"10px\",\r\n\t\t\t\t\t\tflexDirection: \"column\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\tonChange={event => this.handleDateChange(event)}\r\n\t\t\t\t\t\t//onChange={this.handleDateChange}\r\n\t\t\t\t\t\tvalue={selectedMonth}\r\n\t\t\t\t\t\tlocale=\"vi-VN\"\r\n\t\t\t\t\t\tformat=\"M/yyyy\"\r\n\t\t\t\t\t\tmaxDetail=\"year\"\r\n\t\t\t\t\t\tcloseCalendar\r\n\t\t\t\t\t\tclearIcon={null}\r\n\t\t\t\t\t\tcalendarClassName=\"month-picker\"\r\n\t\t\t\t\t\tcalendarIcon={<Today />}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={\r\n\t\t\t\t\t\t\tfullScreen === true\r\n\t\t\t\t\t\t\t\t? this.exitFullScreen\r\n\t\t\t\t\t\t\t\t: this.viewFullScreen\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcolor={fullScreen ? \"secondary\" : \"primary\"}\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tclassName=\"mt-20\"\r\n\t\t\t\t\t\tstartIcon={<Fullscreen />}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{fullScreen === true\r\n\t\t\t\t\t\t\t? t(\"exitFullScreen\")\r\n\t\t\t\t\t\t\t: t(\"fullScreen\")}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: \"60vw\",\r\n\t\t\t\t\t\theight: \"100vh\",\r\n\t\t\t\t\t\tflex: \"1\",\r\n\t\t\t\t\t\tposition: \"relative\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{loading && <SquareLoading />}\r\n\r\n\t\t\t\t\t<ReactMapGL\r\n\t\t\t\t\t\t{...viewport}\r\n\t\t\t\t\t\twidth=\"100%\"\r\n\t\t\t\t\t\theight=\"100%\"\r\n\t\t\t\t\t\tmapStyle=\"mapbox://styles/mapbox/streets-v11\"\r\n\t\t\t\t\t\tmapboxApiAccessToken={MAPBOX_TOKEN}\r\n\t\t\t\t\t\tonViewportChange={viewport =>\r\n\t\t\t\t\t\t\tthis.setState({ viewport })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tattributionControl={false}\r\n\t\t\t\t\t\tonClick={this.onMapClick}\r\n\t\t\t\t\t\ttransitionDuration={150}\r\n\t\t\t\t\t\ttransitionInterpolator={new FlyToInterpolator()}\r\n\t\t\t\t\t\tonLoad={() =>\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\tloading: false,\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{markersPatient}\r\n\t\t\t\t\t\t{markersVector}\r\n\t\t\t\t\t\t{this.Patient_renderPopup()}\r\n\t\t\t\t\t\t{this.Vector_renderPopup()}\r\n\r\n\t\t\t\t\t\t<NavigationControl\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: 10,\r\n\t\t\t\t\t\t\t\tright: 10,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</ReactMapGL>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default DengueMapComponent;\r\n"],"sourceRoot":""}